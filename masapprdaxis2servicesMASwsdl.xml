<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="http://www.elster-eis.com/ImportExport" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.elster-eis.com/ImportExport" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:types>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://www.elster-eis.com/ImportExport">
      

	<!-- BEGIN Common Objects -->

	<xsd:element name="AMRDEF">
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="tns:ImportDataInput"/>
				<xsd:element ref="tns:ImportDataOutput"/>
				<xsd:sequence>
					<xsd:element ref="tns:ImportDataSummary"/>
					<xsd:element ref="tns:Messages"/>
				</xsd:sequence>
				<xsd:sequence>
					<xsd:element ref="tns:ScheduleExecution" minOccurs="0"/>
					<xsd:element ref="tns:ScheduleInfo" minOccurs="0"/>
					<xsd:element ref="tns:MetersRead" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="tns:MetersNotRead" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="tns:ErrorSection" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="tns:TamperSection" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="tns:MeterReadings" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:choice>
			<xsd:attribute name="FileName" type="xsd:string"/>
			<xsd:attribute name="Purpose" use="required" type="xsd:string"/>
			<xsd:attribute name="version" use="required" type="xsd:decimal"/>
			<xsd:attribute name="CreationTime" use="required" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>


	<!-- END Common Objects -->


	<!-- BEGIN Import Objects -->

	<xsd:element name="ImportDataSummary" type="tns:ImportDataSummaryType"/>
	<xsd:complexType name="ImportDataSummaryType">
		<xsd:sequence>
			<xsd:element ref="tns:FailedActions" minOccurs="0"/>
			<xsd:element ref="tns:MoreMessages" minOccurs="0"/>
			<xsd:element ref="tns:FinalMessage"/>
		</xsd:sequence>
		<xsd:attribute name="TotalActions" type="xsd:int" use="required"/>
		<xsd:attribute name="ActionsNotRun" type="xsd:int" use="required"/>
		<xsd:attribute name="ActionsAttempted" type="xsd:int" use="required"/>
		<xsd:attribute name="ActionsFailed" type="xsd:int" use="required"/>
		<xsd:attribute name="ActionsWarned" type="xsd:int" use="required"/>
		<xsd:attribute name="ActionsSuccessful" type="xsd:int" use="required"/>
		<xsd:attribute name="SequencesAttempted" type="xsd:int" use="required"/>
		<xsd:attribute name="SequencesFailed" type="xsd:int" use="required"/>
		<xsd:attribute name="SequencesSuccessful" type="xsd:int" use="required"/>
	</xsd:complexType>
	<xsd:simpleType name="ElsterDateWithNow">
		<xsd:annotation>
			<xsd:documentation> Dates in AMRDef are all assumed to be in GMT and are of the following form:
         &quot;2004-03-02 12:22:13&quot; (YYYY-MM-DD HH:mm:ss)
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{2}:\d{2})|(now.*)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CTOTier">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="A"/>
			<xsd:enumeration value="B"/>
			<xsd:enumeration value="C"/>
			<xsd:enumeration value="D"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MeterTier">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="A"/>
			<xsd:enumeration value="B"/>
			<xsd:enumeration value="C"/>
			<xsd:enumeration value="D"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CTOStartDate">
		<xsd:annotation>
			<xsd:documentation> Dates in AMRDef are all assumed to be in GMT and are of the following form:
         &quot;2004-03-02 12:22:13&quot; (YYYY-MM-DD HH:mm:ss); also the CTO start date has to allign a 15 min boundary.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(\d{4}-\d{1,2}-\d{1,2} \d{1,2}:(00|15|30|45):00)|(now.*)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CTODuration">
		<xsd:annotation>
			<xsd:documentation> in increments of 15  minutes
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(15|30|45|60|75|90|105|120|135|150|165|180|195|210|225|240|255|270|285|300|315|330|345|360|375|390|405|420|435|450|465|480|495|510|525|540|555|570|585|600|615|630|645|660|675|690|705|720|735|750|765|780|795|810|825|840|855|870|885|900|915|930|945|960|975|990|1005|1020|1035|1050|1065|1080|1095|1110|1125|1140|1155|1170|1185|1200|1215|1230|1245|1260|1275|1290|1305|1320|1335|1350|1365|1380|1395|1410|1425)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="IPAddress">
		<xsd:annotation>
			<xsd:documentation> IPV4 Address 
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="SubnetMask">
		<xsd:annotation>
			<xsd:documentation> Subnet Mask CIDR notation 
		</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:int">
			<xsd:enumeration value="29"/>
			<xsd:enumeration value="30"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HexString16">
		<xsd:annotation>
			<xsd:documentation> 16 HEX characters 
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9A-Fa-f]{16}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HexString32">
		<xsd:annotation>
			<xsd:documentation> 32 HEX characters 
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9A-Fa-f]{32}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ElsterString">
		<xsd:annotation>
			<xsd:documentation> Alphanumeric and &quot;.&quot;, &quot;-&quot;, &quot;_&quot;.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([A-Za-z0-9]|\-|\.|_| |\(|\))*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="RateLabelString">
		<xsd:annotation>
			<xsd:documentation> Alphanumeric and &quot;.&quot;, &quot;-&quot;, &quot;_&quot;.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1"/>
			<xsd:maxLength value="11"/>
			<xsd:pattern value="([A-Za-z0-9]|\-|\.|_|,|:| |\?|!|@|$)*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HANDeviceNameType">
		<xsd:annotation>
			<xsd:documentation> 
			10 Byte char string.  Only capital letters, numbers (0-9), and spaces
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1"/>
			<xsd:maxLength value="10"/>
			<xsd:pattern value="([A-Za-z0-9_ ])*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ElsterStringWithCommaColonEtc">
		<xsd:annotation>
			<xsd:documentation> Alphanumeric and &quot;.&quot;, &quot;-&quot;, &quot;_&quot;, &quot;,&quot;, &quot;:&quot;., /
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([A-Za-z0-9]|\-|\.|_|,|:|/| )*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HANMessageStringType">
		<xsd:annotation>
			<xsd:documentation> Alphanumeric and &quot;.&quot;, &quot;-&quot;, &quot;_&quot;, &quot;,&quot;, &quot;:&quot;, &quot;?&quot;, &quot;!&quot;, @, $
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="0"/>
			<xsd:maxLength value="200"/>
			<xsd:pattern value="([A-Za-z0-9]|\-|\.|_|,|:| |\?|!|@|$)*"/>
		</xsd:restriction>

	</xsd:simpleType>
	<xsd:simpleType name="CustomDisplayStringType">
		<xsd:annotation>
			<xsd:documentation> 
			Maximum length = 6 characters [0-9], a-z, - and SPACE.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1"/>
			<xsd:maxLength value="6"/>
			<xsd:pattern value="([a-z0-9\- ])*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ElsterBoolean">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:enumeration value="0"/>
			<xsd:enumeration value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Rex2DisplayProfileOrderNumber">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="24"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="GKScheduleStart">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="10"/>
			<xsd:maxInclusive value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="GKScheduleFrequency">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="60"/>
			<xsd:maxInclusive value="480"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CallMode">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="CallOut"/>
			<xsd:enumeration value="CallIn"/>
			<xsd:enumeration value="CallInOut"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MeterType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="A3_Collector"/>
			<xsd:enumeration value="A3"/>
			<xsd:enumeration value="REX"/>
			<xsd:enumeration value="EAWater"/>
			<xsd:enumeration value="EAGas"/>
			<xsd:enumeration value="A3_ILN"/>
			<xsd:enumeration value="Gatekeeper"/>
			<xsd:enumeration value="IPGWR"/>
			<xsd:enumeration value="IPGKR"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CommMediaType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Telephone"/>
			<xsd:enumeration value="IP"/>
			<xsd:enumeration value="900MHz"/>
			<xsd:enumeration value="Ethernet WIC"/>
			<xsd:enumeration value="1xRTT WIC"/>
			<xsd:enumeration value="GPRS WIC"/>
			<xsd:enumeration value="CalAmp Viper with eWIC"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="GeographicalDirectionType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="East"/>
			<xsd:enumeration value="West"/>
			<xsd:enumeration value="North West"/>
			<xsd:enumeration value="North East"/>
			<xsd:enumeration value="North"/>
			<xsd:enumeration value="South"/>
			<xsd:enumeration value="South East"/>
			<xsd:enumeration value="South West"/>
			<xsd:enumeration value="Unknown"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ElsterTimeZones">
		<xsd:annotation>
			<xsd:documentation> Timezone name to id mapping is as follows:
				id=0;name=(GMT - 12:00) Eniwetok, Kwajalein
				id=1;name=(GMT - 11:00) Midway Island, Samoa
				id=2;name=(GMT - 10:00) Hawaii
				id=3;name=(GMT - 09:00) Alaska
				id=4;name=(GMT - 08:00) Pacific Time (US and Canada)
				id=5;name=(GMT - 07:00) Arizona
				id=6;name=(GMT - 07:00) Mountain Time (US and Canada
				id=7;name=(GMT - 06:00) Central Time (US and Canada)
				id=8;name=(GMT - 06:00) Mexico City 
				id=9;name=(GMT - 06:00) Saskatchewan
				id=10;name=(GMT - 05:00) Bogota Lima
				id=11;name=(GMT - 05:00) Eastern Time (US and Canada)
				id=12;name=(GMT - 05:00) Indiana (East)
				id=13;name=(GMT - 04:00) Atlantic Time (Canada)
				id=14;name=(GMT - 04:00) Caracaz, La Paz
				id=15;name=(GMT - 03:30) Newfoundland
				id=16;name=(GMT - 03:00) Brasilia
				id=17;name=(GMT - 03:00) Buenos Aires, Georgetown
				id=18;name=(GMT - 02:00) Mid-Atlantic
				id=19;name=(GMT - 01:00) Azorez, Cape Verde Island
				id=20;name=(GMT) Greenwich Mean Time, Dublin, Edinburgh, London, Lisbon
				id=21;name=(GMT) Monrovia, Casablanca
				id=22;name=(GMT + 01:00) Berlin, Stockholm, Rome, Bern, Brussels, Vienna
				id=23;name=(GMT + 01:00) Paris, Madrid, Amsterdam
				id=24;name=(GMT + 01:00) Prague, Warsaw, Budapest
				id=25;name=(GMT + 02:00) Athens, Helsinki, Istanbul
				id=26;name=(GMT + 02:00) Cairo
				id=27;name=(GMT + 02:00) Eastern Europe
				id=28;name=(GMT + 02:00) Harare, Pretoria
				id=29;name=(GMT + 02:00) Israel
				id=30;name=(GMT + 03:00) Baghdad, Kuwait, Nairobi, Riyadh
				id=31;name=(GMT + 03:00) Moscow, St Petersburg, Kazan, Volgograd
				id=32;name=(GMT + 03:30) Theran
				id=33;name=(GMT + 04:00) Abu Dhabi, Muscat, Tbilisi
				id=34;name=(GMT + 04:30) Kabul
				id=35;name=(GMT + 05:00) Islamabad, Karachi, Ekanteringburg, Tashkent
				id=36;name=(GMT + 05:30) Bombay, Calcutta, Madras, New Delhi, Colombo
				id=37;name=(GMT + 06:00) Almaty, Dhaka
				id=38;name=(GMT + 07:00) Bangkok, Jakarta, Hanoi
				id=39;name=(GMT + 08:00) Beijing, Chongqing, Urumqi
				id=40;name=(GMT + 08:00) Hong Kong, Perth, Singapore, Taipei
				id=41;name=(GMT + 09:00) Tokyo, Osaka, Sapporo, Seoul, Yakutsk
				id=42;name=(GMT + 09:30) Adelaide
				id=43;name=(GMT + 09:30) Darwin
				id=44;name=(GMT + 10:00) Brisbane, Sydney
				id=45;name=(GMT + 10:00) Guam, Port Moresby, Vladivostok
				id=46;name=(GMT + 10:00) Hobart
				id=47;name=(GMT + 11:00) Magadan, Solomon Island, New Caledonia
				id=48;name=(GMT + 12:00) Fiji, Kamchatka, marshall Island
				id=49;name=(GMT + 12:00) Wellington, Auckland
				id=50;name=(GMT - 08:00) Pacific Time (Tijuana)
				id=51;name=(GMT - 07:00) Mountain Time (Mexico, Mazatlan)
				id=52;name=(GMT - 06:00) Central Time (Honduras)
				id=53;name=(GMT - 06:00) Central Time (Cuba)
				id=54;name=(GMT - 06:00) Central Time (Costa Rica)
				id=55;name=(GMT - 05:00) Eastern Time (Cayman Islands)
				id=56;name=(GMT + 10:00) Melbourne
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="(GMT - 12:00) Eniwetok, Kwajalein"/>
			<xsd:enumeration value="(GMT - 11:00) Midway Island, Samoa"/>
			<xsd:enumeration value="(GMT - 10:00) Hawaii"/>
			<xsd:enumeration value="(GMT - 09:00) Alaska"/>
			<xsd:enumeration value="(GMT - 08:00) Pacific Time (US and Canada)"/>
			<xsd:enumeration value="(GMT - 07:00) Arizona"/>
			<xsd:enumeration value="(GMT - 07:00) Mountain Time (US and Canada"/>
			<xsd:enumeration value="(GMT - 06:00) Central Time (US and Canada)"/>
			<xsd:enumeration value="(GMT - 06:00) Mexico City"/>
			<xsd:enumeration value="(GMT - 06:00) Saskatchewan"/>
			<xsd:enumeration value="(GMT - 05:00) Bogota Lima"/>
			<xsd:enumeration value="(GMT - 05:00) Eastern Time (US and Canada)"/>
			<xsd:enumeration value="(GMT - 05:00) Indiana (East)"/>
			<xsd:enumeration value="(GMT - 04:00) Atlantic Time (Canada)"/>
			<xsd:enumeration value="(GMT - 04:00) Caracaz, La Paz"/>
			<xsd:enumeration value="(GMT - 03:30) Newfoundland"/>
			<xsd:enumeration value="(GMT - 03:00) Brasilia"/>
			<xsd:enumeration value="(GMT - 03:00) Buenos Aires, Georgetown"/>
			<xsd:enumeration value="(GMT - 02:00) Mid-Atlantic"/>
			<xsd:enumeration value="(GMT - 01:00) Azorez, Cape Verde Island"/>
			<xsd:enumeration value="(GMT) Greenwich Mean Time, Dublin, Edinburgh, London, Lisbon"/>
			<xsd:enumeration value="(GMT) Monrovia, Casablanca"/>
			<xsd:enumeration value="(GMT + 01:00) Berlin, Stockholm, Rome, Bern, Brussels, Vienna"/>
			<xsd:enumeration value="(GMT + 01:00) Paris, Madrid, Amsterdam"/>
			<xsd:enumeration value="(GMT + 01:00) Prague, Warsaw, Budapest"/>
			<xsd:enumeration value="(GMT + 02:00) Athens, Helsinki, Istanbul"/>
			<xsd:enumeration value="(GMT + 02:00) Cairo"/>
			<xsd:enumeration value="(GMT + 02:00) Eastern Europe"/>
			<xsd:enumeration value="(GMT + 02:00) Harare, Pretoria"/>
			<xsd:enumeration value="(GMT + 02:00) Israel"/>
			<xsd:enumeration value="(GMT + 03:00) Baghdad, Kuwait, Nairobi, Riyadh"/>
			<xsd:enumeration value="(GMT + 03:00) Moscow, St Petersburg, Kazan, Volgograd"/>
			<xsd:enumeration value="(GMT + 03:30) Theran"/>
			<xsd:enumeration value="(GMT + 04:00) Abu Dhabi, Muscat, Tbilisi"/>
			<xsd:enumeration value="(GMT + 04:30) Kabul"/>
			<xsd:enumeration value="(GMT + 05:00) Islamabad, Karachi, Ekanteringburg, Tashkent"/>
			<xsd:enumeration value="(GMT + 05:30) Bombay, Calcutta, Madras, New Delhi, Colombo"/>
			<xsd:enumeration value="(GMT + 06:00) Almaty, Dhaka"/>
			<xsd:enumeration value="(GMT + 07:00) Bangkok, Jakarta, Hanoi"/>
			<xsd:enumeration value="(GMT + 08:00) Beijing, Chongqing, Urumqi"/>
			<xsd:enumeration value="(GMT + 08:00) Hong Kong, Perth, Singapore, Taipei"/>
			<xsd:enumeration value="(GMT + 09:00) Tokyo, Osaka, Sapporo, Seoul, Yakutsk"/>
			<xsd:enumeration value="(GMT + 09:30) Adelaide"/>
			<xsd:enumeration value="(GMT + 09:30) Darwin"/>
			<xsd:enumeration value="(GMT + 10:00) Brisbane, Sydney"/>
			<xsd:enumeration value="(GMT + 10:00) Guam, Port Moresby, Vladivostok"/>
			<xsd:enumeration value="(GMT + 10:00) Hobart"/>
			<xsd:enumeration value="(GMT + 11:00) Magadan, Solomon Island, New Caledonia"/>
			<xsd:enumeration value="(GMT + 12:00) Fiji, Kamchatka, marshall Island"/>
			<xsd:enumeration value="(GMT + 12:00) Wellington, Auckland"/>
			<xsd:enumeration value="(GMT - 08:00) Pacific Time (Tijuana)"/>
			<xsd:enumeration value="(GMT - 07:00) Mountain Time (Mexico, Mazatlan)"/>
			<xsd:enumeration value="(GMT - 06:00) Central Time (Honduras)"/>
			<xsd:enumeration value="(GMT - 06:00) Central Time (Cuba)"/>
			<xsd:enumeration value="(GMT - 06:00) Central Time (Costa Rica)"/>
			<xsd:enumeration value="(GMT - 05:00) Eastern Time (Cayman Islands)"/>
			<xsd:enumeration value="(GMT + 10:00) Melbourne"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ElsterComponentsType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Registers"/>
			<xsd:enumeration value="LoadProfile"/>
			<xsd:enumeration value="IntervalData"/>
			<xsd:enumeration value="DemandReset"/>
			<xsd:enumeration value="DemandResetPassthrough"/>
			<xsd:enumeration value="EventsandExceptions"/>
			<xsd:enumeration value="ResetA3Events"/>
			<xsd:enumeration value="LANPerformance"/>
			<xsd:enumeration value="ResetCommunicationstatistics"/>
			<xsd:enumeration value="REXRegistersfromCollector"/>
			<xsd:enumeration value="LoadProfileFromCollector"/>
			<xsd:enumeration value="LoadProfilefromCollector"/>
			<xsd:enumeration value="WaterRegistersFromCollector"/>
			<xsd:enumeration value="WaterRegistersfromCollector"/>
			<xsd:enumeration value="GasRegistersFromCollector"/>
			<xsd:enumeration value="GasRegistersfromCollector"/>
			<xsd:enumeration value="loadprofile"/>
			<xsd:enumeration value="demandreset"/>
			<xsd:enumeration value="eventsandexceptions"/>
			<xsd:enumeration value="reseteventsandexceptions"/>
			<xsd:enumeration value="lanperformance"/>
			<xsd:enumeration value="resetcommunicationstatistics"/>
			<xsd:enumeration value="rexregistersfromcollector"/>
			<xsd:enumeration value="downloadtocollector"/>
			<xsd:enumeration value="waterregistersfromcollector"/>
			<xsd:enumeration value="gasregistersfromcollector"/>
			<xsd:enumeration value="loadprofilefromcollector"/>
			<xsd:enumeration value="readhomeareanetworkstatus"/>
			<xsd:enumeration value="ReadHomeAreaNetworkStatus"/>
			<xsd:enumeration value="clearmeterstatuses"/>
			<xsd:enumeration value="ClearMeterStatuses"/>
			<xsd:enumeration value="CheckEALANConnectivity"/>
			<xsd:enumeration value="Voltage"/>
			<xsd:enumeration value="EnableEnergyAxisBroadcast"/>
			<xsd:enumeration value="DisableEnergyAxisBroadcast"/>
			<xsd:enumeration value="EnableEALANMode2"/>
			<xsd:enumeration value="DisableEALANMode2"/>
			<xsd:enumeration value="RegistersfromGatekeeper"/>
			<xsd:enumeration value="LoadProfileFromGatekeeper"/>
			<xsd:enumeration value="IntervalDataFromGatekeeper"/>
			<xsd:enumeration value="ReadWaterDataFromGatekeeper"/>
			<xsd:enumeration value="ReadGasDataFromGatekeeper"/>
			<xsd:enumeration value="SynchronizeChangesWithEA_MS"/>
			<xsd:enumeration value="RefreshAndReadRegisters"/>
			<xsd:enumeration value="ILCAuditLog"/>
			<xsd:enumeration value="LoadProfile(last24hours)"/>
			<xsd:enumeration value="IntervalData(last24hours)"/>
			<xsd:enumeration value="LoadProfile(Set2Last24Hours)fromEndpoint"/>
			<xsd:enumeration value="IntervalData(Set2Last24Hours)fromEndpoint"/>
			<xsd:enumeration value="LoadProfile(Set2LastOneWeek)fromEndpoint"/>
			<xsd:enumeration value="IntervalData(Set2LastOneWeek)fromEndpoint"/>
			<xsd:enumeration value="LoadProfile(Set2)"/>
			<xsd:enumeration value="IntervalData(Set2)"/>
			<xsd:enumeration value="LoadProfile(Set2)fromGatekeeper"/>
			<xsd:enumeration value="IntervalData(Set2)fromGatekeeper"/>
			<xsd:enumeration value="SagLog"/>
			<xsd:enumeration value="SagLogCounter"/>
			<xsd:enumeration value="LoadProfile(lastoneweek)"/>
			<xsd:enumeration value="IntervalData(lastoneweek)"/>
			<xsd:enumeration value="OutageandRestorationEventsFromEndpoint"/>
			<xsd:enumeration value="OutageandRestorationEventsFromGatekeeper"/>
			<xsd:enumeration value="ResetILCEvents"/>
			<xsd:enumeration value="ICMPPing"/>
			<xsd:enumeration value="ICMPTraceRoute"/>
			<xsd:enumeration value="PresentValues"/>
			<xsd:enumeration value="HealthCheckA3"/>
			<xsd:enumeration value="HealthCheckILC"/>
			<xsd:enumeration value="HealthCheckWIC"/>
			<xsd:enumeration value="UnregisterFromGatekeeper"/>
			<xsd:enumeration value="StartNodeScan"/>
			<xsd:enumeration value="ClearA3Statuses"/>
			<xsd:enumeration value="ClearA3SagStatuses"/>
			<xsd:enumeration value="TestA3BatteryVoltage"/>
			<xsd:enumeration value="EndpointEventLog"/>
			<xsd:enumeration value="LANMessageToForceAMeterToUnregister"/>
			<xsd:enumeration value="CheckDisconnect/ConnectStatuses"/>
			<xsd:enumeration value="NewIntervalData(Set1)"/>
			<xsd:enumeration value="NewIntervalData(Set2)"/>
  	  <xsd:enumeration value="SynchronizeTimeWithEA_MS"/>
			<xsd:enumeration value="ElementStatus"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="ImportMeterType">
		<xsd:annotation>
			<xsd:documentation> Use Meter element to add, modify, remove or delete a meter. Delete is done by setting the IsActive attribute to '0' and remove by setting the RemovalDate. Otherwise just including a Meter section causes the meter to be created if it does not already exist. If the meter exists, it is modified with the values specified. Several rules apply to meter's life cycle:
   - If a REX meter is being created, it must have been imported in a marriage file earlier and its name, serial number and Operating Territory must be specified.
   - If  a Gatekeeper is being created, the following must be specified: name, serial number, Operating Territory, time zone, billing password, and unrestricted password.
   - If a Gatekeeper is being installed, the following additional items must be specified or must have been specified earlier at creation: CommMediaType (for example, Telephone),  CallMode (CallIn/CallOut), CommAddress (telephone number for example), CommTemplate.
   - If a IP AxisLink is being created, it must have had the WIC action file imported. To enable DA functionality you must specify SubNet, SubnetMask, TunnelEnabled and DTLSReconnectPort
   - If a meter has been installed, it must first be removed before it may be deleted.
   - To specify a time zone, either include the TimeZone attribute or the TimeZoneId.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="SerialNumber" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="MeterType" type="tns:MeterType" use="optional"/>
		<xsd:attribute name="Description" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="InstallationDate" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="RemovalDate" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="AccountNumber" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="AccountName" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="Owner" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="SDPId" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="SDPID" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="SiteLocation" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="TouSchedule" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="TOUSchedule" type="tns:ElsterString" use="optional"/>
		<property name = "TOUSchedule1"
</property>
		
		<xsd:attribute name="BillingPassword" type="xsd:string" use="optional"/>
		<xsd:attribute name="UnrestrictedPassword" type="xsd:string" use="optional"/>
		<xsd:attribute name="TimeZone" type="tns:ElsterTimeZones" use="optional"/>
		<xsd:attribute name="Timezone" type="tns:ElsterTimeZones" use="optional"/>
		<xsd:attribute name="TimeZoneId" type="xsd:int" use="optional"/>
		<xsd:attribute name="TimezoneId" type="xsd:int" use="optional"/>
		<xsd:attribute name="TimeZoneID" type="xsd:int" use="optional"/>
		<xsd:attribute name="TimezoneID" type="xsd:int" use="optional"/>
		<xsd:attribute name="ObservesDST" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="CommMediaType" type="tns:CommMediaType" use="optional"/>
		<xsd:attribute name="CallMode" type="tns:CallMode" use="optional"/>
		<xsd:attribute name="CommAddress" type="tns:ElsterStringWithCommaColonEtc" use="optional"/>
		<xsd:attribute name="CommTemplate" type="xsd:string" use="optional"/>
		<xsd:attribute name="DeviceNumber" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="Latitude" type="xsd:float" use="optional"/>
		<xsd:attribute name="Longitude" type="xsd:float" use="optional"/>
		<xsd:attribute name="ClearLatLong" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="OperatingTerritory" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="Direction" type="tns:GeographicalDirectionType" use="optional"/>
		<xsd:attribute name="IsActive" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="Overwrite" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="RemoveAssociations" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="Subnet" type="tns:IPAddress" use="optional"/>
		<xsd:attribute name="SubnetMask" type="tns:SubnetMask" use="optional"/>
		<xsd:attribute name="TunnelEnabled" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DTLSReconnectPort" type="xsd:int" use="optional"/>
	</xsd:complexType>
	<xsd:element name="MarriageFileSnippet" type="xsd:string"/>
	<xsd:element name="ReadMeterBilling" type="tns:ReadMeterBillingType"/>
	<xsd:complexType name="ReadMeterBillingType">
		<xsd:annotation>
			<xsd:documentation> Use ReadMeterBilling to read the meter for billing. Note that a meter may be assigned to a single billing schedule only. Including this section causes the system to re-read the meter for the components in the billing data set. Since most billing schedules will contain a demand reset, be warned that this section will cause a demand reset in the meter.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="Owner" type="tns:ElsterString" use="optional"/>
	</xsd:complexType>
	<xsd:element name="Component" type="tns:ComponentType"/>
	<xsd:complexType name="ComponentType">
		<xsd:attribute name="Name" type="tns:ElsterComponentsType"/>
	</xsd:complexType>
	<xsd:element name="CheckMeter" type="tns:CheckMeterType"/>
	<xsd:complexType name="CheckMeterType">
		<xsd:attribute name="Name" type="tns:ElsterString"/>
	</xsd:complexType>
	<xsd:element name="AssignMeter" type="tns:AssignMeterType"/>
	<xsd:complexType name="AssignMeterType">
		<xsd:attribute name="Name" type="tns:ElsterString"/>
	</xsd:complexType>
	<xsd:element name="ReadMeter" type="tns:ReadMeterType"/>
	<xsd:complexType name="ReadMeterType">
		<xsd:annotation>
			<xsd:documentation>
       Use ReadMeter to read a meter for an arbitrary component or a set of components.
			 NumReadAttempts to specify how many attempts to make to read the meter.
			 WaitInSeconds: maximum time the system should wait before giving up on reading the meter.
			 ReturnReadings: set to 1 if readings should be returned in response.
     </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:Component" maxOccurs="unbounded"/>
			<xsd:element ref="tns:FileCheck" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="NumReadAttempts" type="xsd:int" use="optional"/>
		<xsd:attribute name="WaitInSeconds" type="xsd:int" use="optional"/>
		<xsd:attribute name="ReturnReadings" type="xsd:int" use="optional"/>
	</xsd:complexType>
	<xsd:element name="ResubmitSchedule" type="tns:ResubmitScheduleType"/>
	<xsd:complexType name="ResubmitScheduleType">
		<xsd:sequence>
			<xsd:element ref="tns:FileCheck" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="ScheduleName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="WaitInSeconds" type="xsd:int" use="optional"/>
		<xsd:attribute name="ReturnReadings" type="xsd:int" use="optional"/>
	</xsd:complexType>
	<xsd:element name="MeterDataCollection" type="tns:MeterDataCollectionType"/>
	<xsd:element name="MeterBilling" type="tns:MeterDataCollectionType"/>
	<xsd:complexType name="MeterDataCollectionType">
		<xsd:annotation>
			<xsd:documentation>
       Use MeterDataCollection to set up meter's billing, that is,
       to specify what data is collected from the meter. In particular,
       use this element to assign a meter to a schedule and a component group.
       The schedule and the component group must already exist.
       If you want to remove the meter from a schedule, just set the IsActive
       attribute to '0'.
       The OverWrite flag may be used to remove a meter from any existing billing schedule and 
			 assign to the new one specified. Specify the new billing schedule with the new component group, and
			 specify OverWrite=&quot;1&quot;: the new association would be made. This is much easier than first finding out what
			 billing schedule the meter is on and then removing it before making the nee association. Note that this works 
			 only for a billing schedule at this time.
     </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="Schedule" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="ComponentGroup" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="Owner" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="IsActive" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="OverWrite" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:element name="DataSet" type="tns:DataSetType"/>
	<xsd:complexType name="DataSetType">
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="tns:Component"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="Name" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="Description" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="IsActive" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:element name="Job" type="tns:JobType"/>
	<xsd:complexType name="JobType">
		<xsd:annotation>
			<xsd:documentation>
       Use Job object to  create a piece of work consisting of multiple workitems. Each work item is used to perform some on request       operation related to one meter/element.
     </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:WorkItem" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="JobName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="ContextId" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="ExpiryTime" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="SubmitNow" type="tns:ElsterBoolean" default="1"/>
	</xsd:complexType>
	<xsd:element name="WorkItem" type="tns:WorkItemType"/>
	<xsd:complexType name="WorkItemType">
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="ComponentName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="StartTime" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="ExpiryTime" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="Priority" type="xsd:nonNegativeInteger" use="optional"/>
		<xsd:attribute name="RetryCount" type="xsd:nonNegativeInteger" use="optional"/>
		<xsd:attribute name="SecondsBetweenRetries" type="xsd:nonNegativeInteger" use="optional"/>
		<xsd:attribute name="FileLocation" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:element name="AddToJob" type="tns:AddToJobType"/>
	<xsd:complexType name="AddToJobType">
		<xsd:attribute name="JobName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="ComponentName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="StartTime" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="ExpiryTime" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="Priority" type="xsd:nonNegativeInteger" use="optional"/>
		<xsd:attribute name="RetryCount" type="xsd:nonNegativeInteger" use="optional"/>
		<xsd:attribute name="SecondsBetweenRetries" type="xsd:nonNegativeInteger" use="optional"/>
	</xsd:complexType>
	<xsd:element name="SubmitJob" type="tns:SubmitJobType"/>
	<xsd:complexType name="SubmitJobType">
		<xsd:attribute name="JobName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="Schedule" type="tns:ScheduleType"/>
	<xsd:complexType name="ScheduleType">
		<xsd:annotation>
			<xsd:documentation>
       Use Schedule object to create data collection, billing or download schedules.
			 Set OverWrite=&quot;1&quot; if you want to modify the schedule, for example if you want to add new dates to
			 a list schedule.
     </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice minOccurs="0">
				<xsd:element ref="tns:PeriodicSchedule"/>
				<xsd:element ref="tns:ListSchedule"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="IsActive" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="OverWrite" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="RemoveAllAssociations" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="Name" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="Description" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="TimeZoneId" type="xsd:int" use="optional"/>
		<xsd:attribute name="ReadWindow" type="xsd:int" use="optional"/>
		<xsd:attribute name="ReadWindowType" type="tns:ScheduleReadWindowType" use="optional"/>
		<xsd:attribute name="StartTime" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="MinutesFromNow" type="xsd:int" use="optional"/>
		<xsd:attribute name="UsedFor" type="tns:ScheduleUsedForType" use="optional"/>
		<xsd:attribute name="FileLocation" type="xsd:string" use="optional"/>
		<xsd:attribute name="EnableAutoResubmit" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="MAXAutoResubmitCount" type="xsd:nonNegativeInteger" use="optional"/>
		<xsd:attribute name="SecondsBetweenAutoResubmits" type="xsd:nonNegativeInteger" use="optional"/>
		<xsd:attribute name="ResubmitThreshold" type="tns:Percent" use="optional"/>
		<xsd:attribute name="Priority" type="xsd:nonNegativeInteger" use="optional"/>
		<xsd:attribute name="RetryCount" type="xsd:nonNegativeInteger" use="optional"/>
		<xsd:attribute name="SecondsBetweenRetries" type="xsd:nonNegativeInteger" use="optional"/>
	</xsd:complexType>
	<xsd:simpleType name="ScheduleReadWindowType">
		<xsd:restriction base="xsd:NMTOKEN">
			<xsd:enumeration value="Minutes"/>
			<xsd:enumeration value="Hours"/>
			<xsd:enumeration value="Days"/>
			<xsd:enumeration value="Seconds"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ScheduleUsedForType">
		<xsd:restriction base="xsd:NMTOKEN">
			<xsd:enumeration value="Billing"/>
			<xsd:enumeration value="NotBilling"/>
			<xsd:enumeration value="Download"/>
			<xsd:enumeration value="VoltageReads"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="PeriodicSchedule" type="tns:PeriodicScheduleType"/>
	<xsd:complexType name="PeriodicScheduleType">
		<xsd:attribute name="Frequency" type="tns:FrequencyType" use="required"/>
		<xsd:attribute name="Length" type="xsd:int" use="required"/>
		<xsd:attribute name="RunWindowFromStartTimeInSeconds" type="xsd:nonNegativeInteger" use="optional"/>
	</xsd:complexType>
	<xsd:simpleType name="FrequencyType">
		<xsd:restriction base="xsd:NMTOKEN">
			<xsd:enumeration value="Minutes"/>
			<xsd:enumeration value="Hours"/>
			<xsd:enumeration value="Days"/>
			<xsd:enumeration value="Weeks"/>
			<xsd:enumeration value="Months"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="ListSchedule" type="tns:ListScheduleType"/>
	<xsd:complexType name="ListScheduleType">
		<xsd:sequence maxOccurs="unbounded">
			<xsd:element ref="tns:ExecutionTime"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ExecutionTime" type="tns:ExecutionTimeType"/>
	<xsd:complexType name="ExecutionTimeType">
		<xsd:attribute name="date" type="tns:ElsterDateWithNow" use="required"/>
	</xsd:complexType>
	<xsd:element name="MeterName" type="tns:MeterNameType"/>
	<xsd:complexType name="MeterNameType">
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="MultipleConnectDisconnectSchedule" type="tns:MultipleConnectDisconnectScheduleType"/>
	<xsd:complexType name="MultipleConnectDisconnectScheduleType">
		<xsd:annotation>
			<xsd:documentation>
      	Use this element to connect or disconnect multiple meters efficiently through a schedule.
				Use RunNow if you want the schedule to run without delay. Use StartTime otherwise. 
				If you use StartTime, make sure it is at least a few minutes into the future. At least 10 minutes 
				if you have several hundred meters.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:MeterName" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="Name" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="TimeZoneId" type="xsd:int" use="required"/>
		<xsd:attribute name="ReadWindow" type="xsd:int" use="required"/>
		<xsd:attribute name="ReadWindowType" type="tns:ScheduleReadWindowType" use="required"/>
		<xsd:attribute name="UsedFor" type="tns:MultipleUsedForType" use="required"/>
		<xsd:attribute name="StartTime" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="Description" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="FileLocation" type="xsd:string" use="optional"/>
		<xsd:attribute name="MinutesFromNow" type="xsd:int" use="optional"/>
		<xsd:attribute name="RunNow" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="Priority" type="xsd:nonNegativeInteger" use="optional"/>
	</xsd:complexType>
	<xsd:element name="TOUSchedule" type="tns:TOUScheduleType"/>
	<xsd:complexType name="TOUScheduleType">
		<xsd:annotation>
			<xsd:documentation>
      	Create/Modify/Delete a TOU Schedule. While creating, MeterCatFilePath must
      	be specified, also the operating territory.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="Name" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="MeterCatFilePath" type="xsd:string" use="optional"/>
		<xsd:attribute name="OperatingTerritory" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="IsActive" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="OverWrite" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="IsDefault" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:simpleType name="MultipleUsedForType">
		<xsd:restriction base="xsd:NMTOKEN">
			<xsd:enumeration value="Connect"/>
			<xsd:enumeration value="Disconnect"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="Sleep" type="tns:SleepType"/>
	<xsd:complexType name="SleepType">
		<xsd:annotation>
			<xsd:documentation> Use Sleep to sleep for the amount specified before executing the next action.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="InSeconds" type="xsd:int" use="required"/>
	</xsd:complexType>
	<xsd:simpleType name="HANDeviceCommunicationTypeType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ZigBee"/>
			<xsd:enumeration value="EA 900MHz"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HANDeviceClassType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="HVAC or Furnace"/>
			<xsd:enumeration value="Strip Heat"/>
			<xsd:enumeration value="Water Heater"/>
			<xsd:enumeration value="Pool Pump/Spa/Jacuzzi"/>
			<xsd:enumeration value="Smart Appliances"/>
			<xsd:enumeration value="Irrigation Pump"/>
			<xsd:enumeration value="Managed Loads"/>
			<xsd:enumeration value="Simple Loads"/>
			<xsd:enumeration value="Exterior Lighting"/>
			<xsd:enumeration value="Interior Lighting"/>
			<xsd:enumeration value="Electric Vehicle"/>
			<xsd:enumeration value="Generation Systems"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HANMessageCriticalityType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Critical"/>
			<xsd:enumeration value="High"/>
			<xsd:enumeration value="Medium"/>
			<xsd:enumeration value="Low"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CriticalityType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Green"/>
			<xsd:enumeration value="LevelOne"/>
			<xsd:enumeration value="LevelTwo"/>
			<xsd:enumeration value="LevelThree"/>
			<xsd:enumeration value="LevelFour"/>
			<xsd:enumeration value="LevelFive"/>
			<xsd:enumeration value="Emergency"/>
			<xsd:enumeration value="ServiceDisconnect"/>
			<xsd:enumeration value="PlannedOutage"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HANTransmissionType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Normal"/>
			<xsd:enumeration value="NormalAndAnonymousInterPan"/>
			<xsd:enumeration value="AnonymousInterPanOnly"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Percent">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Minus100ToPlus100">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="-100"/>
			<xsd:maxInclusive value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HANDuration">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="1"/>
			<xsd:maxInclusive value="1440"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="JoinDurationInMinutes">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="1"/>
			<xsd:maxInclusive value="65536"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DemandResponseTier">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="1"/>
			<xsd:maxInclusive value="4"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HANMessageDuration">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="1"/>
			<xsd:maxInclusive value="65535"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DemandResponsePricingDuration">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="1"/>
			<xsd:maxInclusive value="65535"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UtilityEnrollmentGroupType" id="UtilityEnrollmentGroupType">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DemandResponseTimezoneType" id="DemandResponseTimezoneType">
		<xsd:restriction base="xsd:int">
			<xsd:minInclusive value="-48"/>
			<xsd:maxInclusive value="48"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DemandResponsePricingName">
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1"/>
			<xsd:maxLength value="50"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AreaGroupType" id="AreaGroupType">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="65535"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="FeederGroupType" id="FeederGroupType">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DemandResponseGroupType" id="DemandResponseGroupType">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="RandomizationMinutesType">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="60"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="HANDevice" type="tns:HANDeviceType"/>
	<xsd:complexType name="HANDeviceType">
		<xsd:annotation>
			<xsd:documentation> Use HANDevice to create/modify/delete an HAN Device
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="CommunicationId" type="tns:HexString16" use="required"/>
		<xsd:attribute name="CommunicationType" type="tns:HANDeviceCommunicationTypeType" use="required"/>
	</xsd:complexType>
	<xsd:element name="ProvisionHANDevice" type="tns:ProvisionHANDeviceType"/>
	<xsd:complexType name="ProvisionHANDeviceType">
		<xsd:annotation>
			<xsd:documentation> Use ProvisionHANDevice to assign to or remove from meter a HAN Device. Set IsActive to 0 if you are 
			  removing the meter to IHD association.
				Either LinkKeyAlgorithm or LinkKey must be specified. If both are, LinKey is used.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:DeviceClass" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="CommunicationId" type="tns:HexString16" use="required"/>
		<xsd:attribute name="DeviceName" type="tns:HANDeviceNameType" use="required"/>
		<xsd:attribute name="LinkKeyAlgorithm" type="tns:LinkKeyAlgorithmType" use="optional"/>
		<xsd:attribute name="LinkKey" type="tns:HexString32" use="optional"/>
		<xsd:attribute name="StartRandomizationMinutes" type="tns:RandomizationMinutesType" use="optional"/>
		<xsd:attribute name="StopRandomizationMinutes" type="tns:RandomizationMinutesType" use="optional"/>
		<xsd:attribute name="MaxTimeInMinutesToJoin" type="tns:JoinDurationInMinutes" use="optional"/>
		<xsd:attribute name="TimeToStartJoining" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="UtilityEnrollmentGroup" type="tns:UtilityEnrollmentGroupType" use="optional"/>
	</xsd:complexType>
	<xsd:element name="MeterDemandResponseGroup" type="tns:MeterDemandResponseGroupType"/>
	<xsd:complexType name="MeterDemandResponseGroupType">
		<xsd:annotation>
			<xsd:documentation> Use MeterDemandResponseGroupType to group the meter for demand response.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="Area" type="tns:AreaGroupType" use="optional"/>
		<xsd:attribute name="Feeder" type="tns:FeederGroupType" use="optional"/>
		<xsd:attribute name="DemandResponsePricingProgram" type="tns:DemandResponseGroupType" use="optional"/>
		<xsd:attribute name="Timezone" type="tns:DemandResponseTimezoneType" use="optional"/>
		<xsd:attribute name="DemandResponseMessageTextGroup_1" type="tns:DemandResponseGroupType" use="optional"/>
		<xsd:attribute name="DemandResponseMessageTextGroup_2" type="tns:DemandResponseGroupType" use="optional"/>
		<xsd:attribute name="DemandResponseMessageTextGroup_3" type="tns:DemandResponseGroupType" use="optional"/>
		<xsd:attribute name="DemandResponseMessageTextGroup_4" type="tns:DemandResponseGroupType" use="optional"/>
	</xsd:complexType>
	<xsd:element name="UnProvisionHANDevice" type="tns:UnProvisionHANDeviceType"/>
	<xsd:complexType name="UnProvisionHANDeviceType">
		<xsd:annotation>
			<xsd:documentation> Use UnProvisionHANDevice to remove from meter an in-home-device (IHD). 
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="CommunicationId" type="tns:HexString16" use="required"/>
	</xsd:complexType>
	<xsd:element name="HANMessage" type="tns:HANMessageType"/>
	<xsd:complexType name="HANMessageType">
		<xsd:annotation>
			<xsd:documentation> Use HANMessage to send messages to HAN devices.
				Use one of Broadcast or MeterList. Transmission is not supported at this time. 
        Only Normal Transmission is used regardless of what is specified.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element ref="tns:MeterList"/>
			<xsd:element ref="tns:Broadcast"/>
		</xsd:choice>
		<xsd:attribute name="StartAt" type="tns:ElsterDateWithNow" use="required"/>
		<xsd:attribute name="Message" type="tns:HANMessageStringType" use="required"/>
		<xsd:attribute name="Criticality" type="tns:HANMessageCriticalityType" use="required"/>
		<xsd:attribute name="ConfirmationRequired" type="tns:ElsterBoolean" use="required"/>
		<xsd:attribute name="DurationInMinutes" type="tns:HANMessageDuration" use="required"/>
		<xsd:attribute name="Transmission" type="tns:HANTransmissionType" use="optional"/>
		<xsd:attribute name="LanguageId" type="xsd:int" use="optional"/>
		<xsd:attribute name="MessageName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="CancelHANMessage" type="tns:CancelHANMessageType"/>
	<xsd:complexType name="CancelHANMessageType">
		<xsd:annotation>
			<xsd:documentation> Use CancelHANMessage to cancel messages earlier sent to HAN devices. Messages are cancelled immediately.
			     Identify the message to cancel by MessageName or RefId.
					 Use either CancelByBroadcast or MeterList.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:MeterList" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="MessageName" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="RefId" type="xsd:string" use="optional"/>
		<xsd:attribute name="CancelByBroadcast" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:element name="EnergyConservationToMeter" type="tns:EnergyConservationToMeterType"/>
	<xsd:complexType name="EnergyConservationToMeterType">
		<xsd:annotation>
			<xsd:documentation> Use EnergyConservationToMeter to assign to or remove from meter   a EnergyConservation (EC). Set IsActive to 0 if
			  you are removing the association. (Note that at MAS 6.1 remove is not supported).
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="EnergyConservation" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="IsActive" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:element name="EnergyConservationToTOUSchedule" type="tns:EnergyConservationToTOUScheduleType"/>
	<xsd:complexType name="EnergyConservationToTOUScheduleType">
		<xsd:annotation>
			<xsd:documentation> Use EnergyConservationToTOUSchedule to assign to or remove from TOUSchedule a EnergyConservation (EC). Set IsActive to 0 if
			  you are removing the association. (Note that at MAS 6.1 remove is not supported).
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="TOUSchedule" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="EnergyConservation" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="IsActive" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:element name="CriticalTierOverride" type="tns:CriticalTierOverrideType"/>
	<xsd:complexType name="CriticalTierOverrideType">
		<xsd:annotation>
			<xsd:documentation> Use CriticalTierOverride to create a critical pricing event. Use IsActive=0 to cancel the event.
			Duration is in minutes. And the duration has to be in increments of 15 minutes. Also start time has to start at 15 minute boundaries such
			14:00:00 or 14:15:00, 15:30:00, 16:45:00 etc.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="TOUSchedule" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="Tier" type="tns:CTOTier" use="required"/>
		<xsd:attribute name="StartDate" type="tns:CTOStartDate" use="required"/>
		<xsd:attribute name="Duration" type="tns:CTODuration" use="required"/>
		<xsd:attribute name="IsActive" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:element name="CancelEmergencyManagementEvent" type="tns:CancelEmergencyManagementEventType"/>
	<xsd:complexType name="CancelEmergencyManagementEventType">
		<xsd:annotation>
			<xsd:documentation> Use CancelEmergencyManagementEvent to cancel an EmergencyManagementEvent. 
			    Identify the EmergencyManagemenEvent by its name and specify the date at which time the cancel would take effect.
					If the date is not specified, &quot;now&quot; is assumed.
					Cancel may be done via broadcast or to a list of meters. Set CancelByBroadcast to true to cancel by broadcast.
					Specify a list of meters otherwise.
					Either Name or RefId is required.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:MeterList" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="Name" type="tns:ElsterString" use="optional"/>
		<xsd:attribute name="RefId" type="xsd:string" use="optional"/>
		<xsd:attribute name="EffectiveDate" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="CancelByBroadcast" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="Randomize" type="tns:ElsterBoolean" use="required"/>
	</xsd:complexType>
	<xsd:element name="MeterList" type="tns:MeterListType"/>
	<xsd:complexType name="MeterListType">
		<xsd:sequence>
			<xsd:element ref="tns:MeterName" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="Broadcast" type="tns:BroadcastType"/>
	<xsd:complexType name="BroadcastType">
		<xsd:attribute name="Area" type="xsd:int" use="optional"/>
		<xsd:attribute name="Feeder" type="xsd:int" use="optional"/>
		<xsd:attribute name="DemandResponseProgram" type="xsd:int" use="optional"/>
	</xsd:complexType>
	<xsd:element name="EmergencyManagementEvent" type="tns:EmergencyManagementEventType"/>
	<xsd:complexType name="EmergencyManagementEventType">
		<xsd:annotation>
			<xsd:documentation> Use EmergencyManagementEvent to create an emergency management event to shed load. 
				Use UtilityEnrollmentGroup to broadcast, otherwise user MeterList.
				Elser specific broadcast is not available at this time.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:DeviceClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="tns:MeterList" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="Name" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="Duration" type="tns:HANDuration" use="required"/>
		<xsd:attribute name="StartAt" type="tns:ElsterDateWithNow" use="required"/>
		<xsd:attribute name="Criticality" type="tns:CriticalityType" use="optional"/>
		<xsd:attribute name="CoolingOffset" type="xsd:float" use="optional"/>
		<xsd:attribute name="HeatingOffset" type="xsd:float" use="optional"/>
		<xsd:attribute name="CoolingSetpoint" type="xsd:float" use="optional"/>
		<xsd:attribute name="HeatingSetpoint" type="xsd:float" use="optional"/>
		<xsd:attribute name="LoadAdjust" type="tns:Minus100ToPlus100" use="optional"/>
		<xsd:attribute name="DutyCycle" type="tns:Percent" use="optional"/>
		<xsd:attribute name="RandomizeStart" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="RandomizeEnd" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="UtilityEnrollmentGroup" type="xsd:int" use="required"/>
		<xsd:attribute name="Broadcast" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:element name="PerSeasonPricing" type="tns:PerSeasonPricingType"/>
	<xsd:complexType name="PerSeasonPricingType">
		<xsd:attribute name="SeasonName" type="xsd:string" use="required"/>
		<xsd:attribute name="FlatMonthlyCharge" type="xsd:float" use="optional"/>
		<xsd:attribute name="BaseKWHBreakpoint" type="xsd:int" use="optional"/>
		<xsd:attribute name="BasePriorToBreakpoint" type="xsd:float" use="optional"/>
		<xsd:attribute name="BaseAfterBreakpoint" type="xsd:float" use="optional"/>
		<xsd:attribute name="FuelFactor" type="xsd:float" use="optional"/>
		<xsd:attribute name="RatePerKWHTOUA" type="xsd:float" use="optional"/>
		<xsd:attribute name="RatePerKWHTOUB" type="xsd:float" use="optional"/>
		<xsd:attribute name="RatePerKWHTOUC" type="xsd:float" use="optional"/>
		<xsd:attribute name="RatePerKWHTOUD" type="xsd:float" use="optional"/>
	</xsd:complexType>
	<xsd:element name="TierMapping" type="tns:TierMappingType"/>
	<xsd:complexType name="TierMappingType">
		<xsd:attribute name="TierA_MapsTo" type="tns:DemandResponseTier" use="optional"/>
		<xsd:attribute name="TierB_MapsTo" type="tns:DemandResponseTier" use="optional"/>
		<xsd:attribute name="TierC_MapsTo" type="tns:DemandResponseTier" use="optional"/>
		<xsd:attribute name="TierD_MapsTo" type="tns:DemandResponseTier" use="optional"/>
	</xsd:complexType>
	<xsd:element name="DemandResponsePricing" type="tns:DemandResponsePricingType"/>
	<xsd:complexType name="DemandResponsePricingType">
		<xsd:sequence>
			<xsd:element ref="tns:TierMapping"/>
			<xsd:element ref="tns:PerTierDemandResponsePricing" maxOccurs="4"/>
			<xsd:element ref="tns:Broadcast" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="UOM" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="ProviderId" type="xsd:long" use="required"/>
		<xsd:attribute name="Currency" type="xsd:int" use="required"/>
		<xsd:attribute name="StartTime" type="tns:ElsterDateWithNow" use="required"/>
		<xsd:attribute name="Duration" type="tns:DemandResponsePricingDuration" use="required"/>
		<xsd:attribute name="DemandResponsePricingName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="ClearDemandResponsePricing" type="tns:ClearDemandResponsePricingType"/>
	<xsd:complexType name="ClearDemandResponsePricingType">
		<xsd:choice>
			<xsd:element ref="tns:MeterList"/>
			<xsd:element ref="tns:Broadcast"/>
		</xsd:choice>
		<xsd:attribute name="ClearDemandResponsePricingName" type="tns:ElsterString" use="optional"/>
	</xsd:complexType>
	<xsd:element name="DemandResponsePricingToMeters" type="tns:DemandResponsePricingToMetersType"/>
	<xsd:complexType name="DemandResponsePricingToMetersType">
		<xsd:sequence>
			<xsd:element ref="tns:MeterList" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="DemandResponsePricingName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="PerTierDemandResponsePricing" type="tns:PerTierDemandResponsePricingType"/>
	<xsd:complexType name="PerTierDemandResponsePricingType">
		<xsd:attribute name="Tier" type="tns:MeterTier" use="required"/>
		<xsd:attribute name="Price" type="xsd:int" use="required"/>
		<xsd:attribute name="PriceTrailingDigits" type="xsd:int" use="required"/>
		<xsd:attribute name="PriceRatio" type="xsd:int" use="optional"/>
		<xsd:attribute name="GenerationPrice" type="xsd:int" use="optional"/>
		<xsd:attribute name="GenerationPriceRatio" type="xsd:int" use="optional"/>
		<xsd:attribute name="AlternateCostDelivered" type="xsd:int" use="optional"/>
		<xsd:attribute name="AlternateCostTrailingDigits" type="xsd:int" use="optional"/>
		<xsd:attribute name="AlternateCostUnit" type="xsd:int" use="optional"/>
		<xsd:attribute name="RateLabel" type="tns:RateLabelString" use="required"/>
	</xsd:complexType>
	<xsd:element name="ElsterPricing" type="tns:ElsterPricingType"/>
	<xsd:complexType name="ElsterPricingType">
		<xsd:sequence>
			<xsd:element ref="tns:PerSeasonPricing" maxOccurs="4"/>
		</xsd:sequence>
		<xsd:attribute name="TOUScheduleName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="TierConfig" type="tns:TierConfigType"/>
	<xsd:complexType name="TierConfigType">
		<xsd:attribute name="CoolingOffset" type="xsd:float" use="optional"/>
		<xsd:attribute name="HeatingOffset" type="xsd:float" use="optional"/>
		<xsd:attribute name="CoolingSetpoint" type="xsd:float" use="optional"/>
		<xsd:attribute name="HeatingSetpoint" type="xsd:float" use="optional"/>
		<xsd:attribute name="AverageLoadAdjustmentPercentage" type="tns:Minus100ToPlus100" use="optional"/>
		<xsd:attribute name="DutyCyclePercentage" type="tns:Percent" use="optional"/>
		<xsd:attribute name="TransmitToEndDevice" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="IsCriticalPeakTier" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="Tier" type="tns:CTOTier" use="required"/>
	</xsd:complexType>
	<xsd:element name="DeviceClass" type="tns:DeviceClassType"/>
	<xsd:complexType name="DeviceClassType">
		<xsd:sequence/>
		<xsd:attribute name="Name" type="tns:HANDeviceClassType" use="required"/>
	</xsd:complexType>
	<xsd:element name="EnergyConservation" type="tns:EnergyConservationType"/>
	<xsd:complexType name="EnergyConservationType">
		<xsd:sequence>
			<xsd:element ref="tns:TierConfig" maxOccurs="4"/>
			<xsd:element ref="tns:DeviceClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="tns:Broadcast" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="Name" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="RandomizeStart" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="RandomizeEnd" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="LogOptOuts" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="LogOptIns" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="LogOverrides" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="InhibitCustomerOverride" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:element name="Report" type="tns:ImportReportType"/>
	<xsd:complexType name="ImportReportType">
		<xsd:annotation>
			<xsd:documentation> Use Report to run any MAS report and invoke xquery queries to examine the xml returned.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="Name" type="xsd:string" use="required"/>
		<xsd:attribute name="ReturnCompleteReport" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:element name="CheckSchedule" type="tns:CheckScheduleType"/>
	<xsd:complexType name="CheckScheduleType">
		<xsd:sequence>
			<xsd:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:anyAttribute namespace="##any" processContents="skip"/>
	</xsd:complexType>
	<xsd:element name="MeterTableRead" type="tns:MeterTableReadType"/>
	<xsd:complexType name="MeterTableReadType">
		<xsd:sequence>
			<xsd:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:anyAttribute namespace="##any" processContents="skip"/>
	</xsd:complexType>
	<xsd:element name="PowerStatusCheck" type="tns:PowerStatusCheckType"/>
	<xsd:complexType name="PowerStatusCheckType">
		<xsd:annotation>
			<xsd:documentation> Use PowerStatusCheck to outage ping meters. 
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:CheckMeter" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="WaitInSeconds" type="xsd:int" use="optional"/>
		<xsd:attribute name="Priority" type="xsd:int" use="optional"/>
	</xsd:complexType>
	<xsd:element name="ResultCheck" type="tns:ResultCheckType"/>
	<xsd:complexType name="ResultCheckType">
		<xsd:sequence>
			<xsd:element name="Check" minOccurs="0"/>
			<xsd:element name="CheckResult" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="Outcome" type="tns:Outcome" use="optional"/>
		<xsd:attribute name="VarNameToStoreUnder" type="xsd:string" use="optional"/>
		<xsd:attribute name="VarValue" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:element name="FileCheck" type="tns:FileCheckType"/>
	<xsd:complexType name="FileCheckType" mixed="true">
		<xsd:sequence>
			<xsd:element name="CheckResult" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="Outcome" type="tns:Outcome" use="optional"/>
		<xsd:attribute name="VarNameToStoreUnder" type="xsd:string" use="optional"/>
		<xsd:attribute name="VarValue" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:element name="WebServiceCall" type="tns:WebServiceCallType"/>
	<xsd:complexType name="WebServiceCallType" mixed="true">
		<xsd:attribute name="InterfaceName" type="xsd:string"/>
		<xsd:attribute name="CallName" type="xsd:string"/>
		<xsd:attribute name="Username" type="xsd:string"/>
		<xsd:attribute name="Password" type="xsd:string"/>
	</xsd:complexType>
	<xsd:element name="WaitForAsyncWebServiceCall" type="tns:WaitForAsyncWebServiceCallType"/>
	<xsd:complexType name="WaitForAsyncWebServiceCallType" mixed="true">
		<xsd:attribute name="InterfaceName" type="xsd:string"/>
		<xsd:attribute name="CallName" type="xsd:string"/>
		<xsd:attribute name="TransactionId" type="xsd:string" use="optional"/>
		<xsd:attribute name="WaitInSeconds" type="xsd:int"/>
	</xsd:complexType>
	<xsd:element name="MFCheck" type="tns:MFCheckType"/>
	<xsd:complexType name="MFCheckType" mixed="true">
		<xsd:sequence>
			<xsd:element name="CheckResult" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="Outcome" type="tns:Outcome" use="optional"/>
	</xsd:complexType>
	<xsd:element name="ConnectMeter" type="tns:ConnectMeterType"/>
	<xsd:complexType name="ConnectMeterType">
		<xsd:annotation>
			<xsd:documentation> Use ConnectMeter to restore electricity connection to the meter. Set ReturnReadings to &quot;1&quot; to get 
			   readings inthe response.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:FileCheck" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="ReturnReadings" type="xsd:int" use="optional"/>
		<xsd:attribute name="NumAttempts" type="xsd:int" use="optional"/>
	</xsd:complexType>
	<xsd:element name="DisconnectMeter" type="tns:DisconnectMeterType"/>
	<xsd:complexType name="DisconnectMeterType">
		<xsd:annotation>
			<xsd:documentation> Use DisconnectMeter to disconnect the meter. Set ReturnReadings to &quot;1&quot; to get 
			   readings in the response.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:FileCheck" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="MeterName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="ReturnReadings" type="xsd:int" use="optional"/>
		<xsd:attribute name="NumAttempts" type="xsd:int" use="optional"/>
	</xsd:complexType>
	<xsd:element name="MarriageFile" type="tns:MarriageFileType"/>
	<xsd:complexType name="MarriageFileType">
		<xsd:annotation>
			<xsd:documentation> Use MarriageFile to import a marriage file.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:MFCheck" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="FilePath" type="xsd:string" use="required"/>
		<xsd:attribute name="FileIsLocal" type="tns:ElsterBoolean" use="optional"/>
	</xsd:complexType>
	<xsd:element name="WANSeed" type="tns:WANSeedType"/>
	<xsd:complexType name="WANSeedType">
		<xsd:annotation>
			<xsd:documentation> Use WANSeed to create a new WAN seed.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="UtilityName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="Description" type="xsd:string" use="optional"/>
		<xsd:attribute name="AutoGenerate" type="tns:ElsterBoolean" use="required"/>
		<xsd:attribute name="Seed" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:element name="LANSeed" type="tns:LANSeedType"/>
	<xsd:complexType name="LANSeedType">
		<xsd:annotation>
			<xsd:documentation> Use LANSeed to create a new LAN seed.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="UtilityName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="Description" type="xsd:string" use="optional"/>
		<xsd:attribute name="AutoGenerate" type="tns:ElsterBoolean" use="required"/>
		<xsd:attribute name="Seed" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:element name="WICActivationFile" type="tns:WICActivationFileType"/>
	<xsd:complexType name="WICActivationFileType">
		<xsd:annotation>
			<xsd:documentation> Use WICActivationFile to import a wic activation file using a URL.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="URL" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:element name="Utility" type="tns:UtilityType"/>
	<xsd:complexType name="UtilityType">
		<xsd:annotation>
			<xsd:documentation> Use Utility to create a new utility.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="UtilityName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="LANID" type="xsd:int" use="required"/>
	</xsd:complexType>
	<xsd:element name="DeleteUtility" type="tns:DeleteUtilityType"/>
	<xsd:complexType name="DeleteUtilityType">
		<xsd:annotation>
			<xsd:documentation> Use DeleteUtility to delete a utility.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="UtilityName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="DeleteWANSeed" type="tns:DeleteWANSeedType"/>
	<xsd:complexType name="DeleteWANSeedType">
		<xsd:annotation>
			<xsd:documentation> Use DeleteWANSeed to delete a WAN Seed.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="UtilityName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="SeedId" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:element name="DeleteLANSeed" type="tns:DeleteLANSeedType"/>
	<xsd:complexType name="DeleteLANSeedType">
		<xsd:annotation>
			<xsd:documentation> Use DeleteLANSeed to delete a LAN Seed.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="UtilityName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="SeedId" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:element name="SetWANSecurity" type="tns:SetWANSecurityType"/>
	<xsd:complexType name="SetWANSecurityType">
		<xsd:annotation>
			<xsd:documentation> Use SetWANSecurityType to enable or disable WAN security on gatekeepers
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Gatekeeper" type="tns:MeterNameType" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="EnableSecurity" type="tns:ElsterBoolean" use="required"/>
	</xsd:complexType>
	<xsd:element name="SetLANSecurity" type="tns:SetLANSecurityType"/>
	<xsd:complexType name="SetLANSecurityType">
		<xsd:annotation>
			<xsd:documentation> Use SetLANSecurityType to enable or disable LAN security on gatekeepers
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Gatekeeper" type="tns:MeterNameType" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="EnableSecurity" type="tns:ElsterBoolean" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="IPAddressType">
		<xsd:attribute name="IPAddress" type="xsd:string" use="required"/>
		<xsd:attribute name="Mask" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:element name="WANAccessControlList" type="tns:WANAccessControlListType"/>
	<xsd:complexType name="WANAccessControlListType">
		<xsd:annotation>
			<xsd:documentation> Use WANAccessControlList to  create a list of ip addressed a GateKepper is allowed to talk to.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="IPAddress" type="tns:IPAddressType" maxOccurs="8"/>
		</xsd:sequence>
		<xsd:attribute name="ACLName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="SystemDefault" type="tns:ElsterBoolean" use="required"/>
	</xsd:complexType>
	<xsd:element name="DeleteWANAccessControlList" type="tns:DeleteWANAccessControlListType"/>
	<xsd:complexType name="DeleteWANAccessControlListType">
		<xsd:annotation>
			<xsd:documentation> Use DeleteWANAccessControlList to  delete a list of ip addressed a GateKepper is allowed to talk to.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="ACLName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="AssignWANAccessControlListToGatekeepers" type="tns:AssignWANAccessControlListToGatekeepersType"/>
	<xsd:complexType name="AssignWANAccessControlListToGatekeepersType">
		<xsd:annotation>
			<xsd:documentation> Use AssignWANAccessControlListToGatekeepers to  assign WAN ACL to Gatekeepers.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Gatekeeper" type="tns:MeterNameType" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="ACLName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="ImportDataInput" type="tns:ImportDataInputType"/>
	<xsd:complexType name="ImportDataInputType">
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="tns:Sequence"/>
				<xsd:element name="Meter" type="tns:ImportMeterType"/>
				<xsd:element ref="tns:MeterBilling"/>
				<xsd:element ref="tns:MeterDataCollection"/>
				<xsd:element ref="tns:ReadMeterBilling"/>
				<xsd:element ref="tns:ReadMeter"/>
				<xsd:element ref="tns:ConnectMeter"/>
				<xsd:element ref="tns:DisconnectMeter"/>
				<xsd:element ref="tns:MarriageFile"/>
				<xsd:element ref="tns:MarriageFileSnippet"/>
				<xsd:element ref="tns:Sleep"/>
				<xsd:element ref="tns:Report"/>
				<xsd:element ref="tns:Schedule"/>
				<xsd:element ref="tns:ResubmitSchedule"/>
				<xsd:element ref="tns:TOUSchedule"/>
				<xsd:element ref="tns:DataSet"/>
				<xsd:element ref="tns:PowerStatusCheck"/>
				<xsd:element ref="tns:CheckSchedule"/>
				<xsd:element ref="tns:MultipleConnectDisconnectSchedule"/>
				<xsd:element ref="tns:HANDevice"/>
				<xsd:element ref="tns:MeterDemandResponseGroup"/>
				<xsd:element ref="tns:HANMessage"/>
				<xsd:element ref="tns:CancelHANMessage"/>
				<xsd:element ref="tns:ProvisionHANDevice"/>
				<xsd:element ref="tns:UnProvisionHANDevice"/>
				<xsd:element ref="tns:CriticalTierOverride"/>
				<xsd:element ref="tns:EmergencyManagementEvent"/>
				<xsd:element ref="tns:CancelEmergencyManagementEvent"/>
				<xsd:element ref="tns:ElsterPricing"/>
				<xsd:element ref="tns:EnergyConservation"/>
				<xsd:element ref="tns:Utility"/>
				<xsd:element ref="tns:DeleteUtility"/>
				<xsd:element ref="tns:WICActivationFile"/>
				<xsd:element ref="tns:WANSeed"/>
				<xsd:element ref="tns:DeleteWANSeed"/>
				<xsd:element ref="tns:LANSeed"/>
				<xsd:element ref="tns:DeleteLANSeed"/>
				<xsd:element ref="tns:SetWANSecurity"/>
				<xsd:element ref="tns:SetLANSecurity"/>
				<xsd:element ref="tns:WANAccessControlList"/>
				<xsd:element ref="tns:AssignWANAccessControlListToGatekeepers"/>
				<xsd:element ref="tns:DeleteWANAccessControlList"/>
				<xsd:element ref="tns:EnergyConservationToMeter"/>
				<xsd:element ref="tns:EnergyConservationToTOUSchedule"/>
				<xsd:element ref="tns:MeterTableRead"/>
				<xsd:element ref="tns:StartSchedule"/>
				<xsd:element ref="tns:SynchronizeChanges"/>
				<xsd:element ref="tns:DemandResponsePricing"/>
				<xsd:element ref="tns:DemandResponsePricingToMeters"/>
				<xsd:element ref="tns:ClearDemandResponsePricing"/>
				<xsd:element ref="tns:ElementConfigProfile"/>
				<xsd:element ref="tns:ElementConfigProfileToMeters"/>
				<xsd:element ref="tns:ElementConfigProfileToTOUSchedule"/>
				<xsd:element ref="tns:ElementConfigProfileToSchedule"/>
				<xsd:element ref="tns:ExchangeElementConfigProfile"/>
				<xsd:element ref="tns:ClearDefaultElementConfigProfile"/>
				<xsd:element ref="tns:DefaultElementConfigProfile"/>
				<xsd:element ref="tns:DeleteElementConfigProfile"/>
				<xsd:element ref="tns:Job"/>
				<xsd:element ref="tns:AddToJob"/>
				<xsd:element ref="tns:SubmitJob"/>
				<xsd:element ref="tns:WebServiceCall"/>
				<xsd:element ref="tns:WaitForAsyncWebServiceCall"/>
			</xsd:choice>
			<xsd:element name="ResultCheck" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="Sequence" type="tns:SequenceType"/>
	<xsd:complexType name="SequenceType">
		<xsd:annotation>
			<xsd:documentation> A Sequence is a collection of one or more tasks. A task performs a single action such as creating a meter or performing a billing read. A Sequence is executed by executing the individual tasks one at a time as they appear in the file. OnFailure attribute of tasks determine what happens when a task fails. For example, it decides if the execution of the sequence ends or continues.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="tns:Task"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="OnFailure">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Stop"/>
			<xsd:enumeration value="Continue"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="LinkKeyAlgorithmType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Elster"/>
			<xsd:enumeration value="SmartEnergy"/>
			<xsd:enumeration value="ElsterRiga"/>
			<xsd:enumeration value="None"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="Task" type="tns:TaskType"/>
	<xsd:complexType name="TaskType">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element ref="tns:ImportAction"/>
				<xsd:element name="Meter" type="tns:ImportMeterType"/>
				<xsd:element ref="tns:MeterBilling"/>
				<xsd:element ref="tns:MeterDataCollection"/>
				<xsd:element ref="tns:ReadMeterBilling"/>
				<xsd:element ref="tns:ReadMeter"/>
				<xsd:element ref="tns:ConnectMeter"/>
				<xsd:element ref="tns:DisconnectMeter"/>
				<xsd:element ref="tns:MarriageFile"/>
				<xsd:element ref="tns:MarriageFileSnippet"/>
				<xsd:element ref="tns:Sleep"/>
				<xsd:element ref="tns:Report"/>
				<xsd:element ref="tns:Schedule"/>
				<xsd:element ref="tns:ResubmitSchedule"/>
				<xsd:element ref="tns:TOUSchedule"/>
				<xsd:element ref="tns:DataSet"/>
				<xsd:element ref="tns:PowerStatusCheck"/>
				<xsd:element ref="tns:CheckSchedule"/>
				<xsd:element ref="tns:MultipleConnectDisconnectSchedule"/>
				<xsd:element ref="tns:HANDevice"/>
				<xsd:element ref="tns:MeterDemandResponseGroup"/>
				<xsd:element ref="tns:HANMessage"/>
				<xsd:element ref="tns:CancelHANMessage"/>
				<xsd:element ref="tns:ProvisionHANDevice"/>
				<xsd:element ref="tns:UnProvisionHANDevice"/>
				<xsd:element ref="tns:CriticalTierOverride"/>
				<xsd:element ref="tns:EmergencyManagementEvent"/>
				<xsd:element ref="tns:CancelEmergencyManagementEvent"/>
				<xsd:element ref="tns:ElsterPricing"/>
				<xsd:element ref="tns:EnergyConservation"/>
				<xsd:element ref="tns:Utility"/>
				<xsd:element ref="tns:DeleteUtility"/>
				<xsd:element ref="tns:WICActivationFile"/>
				<xsd:element ref="tns:WANSeed"/>
				<xsd:element ref="tns:DeleteWANSeed"/>
				<xsd:element ref="tns:LANSeed"/>
				<xsd:element ref="tns:DeleteLANSeed"/>
				<xsd:element ref="tns:SetWANSecurity"/>
				<xsd:element ref="tns:SetLANSecurity"/>
				<xsd:element ref="tns:WANAccessControlList"/>
				<xsd:element ref="tns:AssignWANAccessControlListToGatekeepers"/>
				<xsd:element ref="tns:DeleteWANAccessControlList"/>
				<xsd:element ref="tns:EnergyConservationToMeter"/>
				<xsd:element ref="tns:EnergyConservationToTOUSchedule"/>
				<xsd:element ref="tns:MeterTableRead"/>
				<xsd:element ref="tns:StartSchedule"/>
				<xsd:element ref="tns:SynchronizeChanges"/>
				<xsd:element ref="tns:DemandResponsePricing"/>
				<xsd:element ref="tns:DemandResponsePricingToMeters"/>
				<xsd:element ref="tns:ClearDemandResponsePricing"/>
				<xsd:element ref="tns:ElementConfigProfile"/>
				<xsd:element ref="tns:ElementConfigProfileToMeters"/>
				<xsd:element ref="tns:ElementConfigProfileToTOUSchedule"/>
				<xsd:element ref="tns:ElementConfigProfileToSchedule"/>
				<xsd:element ref="tns:ExchangeElementConfigProfile"/>
				<xsd:element ref="tns:ClearDefaultElementConfigProfile"/>
				<xsd:element ref="tns:DefaultElementConfigProfile"/>
				<xsd:element ref="tns:DeleteElementConfigProfile"/>
				<xsd:element ref="tns:Job"/>
				<xsd:element ref="tns:AddToJob"/>
				<xsd:element ref="tns:SubmitJob"/>
				<xsd:element ref="tns:WebServiceCall"/>
				<xsd:element ref="tns:WaitForAsyncWebServiceCall"/>
			</xsd:choice>
			<xsd:element name="ResultCheck" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="OnFailure" type="tns:OnFailure" use="optional"/>
		<xsd:attribute name="IgnoreFailure" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="IsNegative" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="TaskId" type="xsd:string" use="optional"/>
		<xsd:attribute name="TestId" type="xsd:string" use="optional"/>
		<xsd:attribute name="UserName" type="xsd:string" use="optional"/>
		<xsd:attribute name="Password" type="xsd:string" use="optional"/>
		<xsd:anyAttribute namespace="##any" processContents="lax"/>
	</xsd:complexType>
	<xsd:element name="ImportDataOutput" type="tns:ImportDataOutputType"/>
	<xsd:complexType name="ImportDataOutputType">
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="tns:Sequence"/>
				<xsd:element ref="tns:ImportAction"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element ref="tns:ImportDataSummary"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ImportAction" type="tns:ImportActionType"/>
	<xsd:complexType name="ImportActionType">
		<xsd:sequence>
			<xsd:element ref="tns:Input"/>
			<xsd:element ref="tns:Result"/>
			<xsd:element ref="tns:ResultCheck" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="tns:ReadingsReturned" minOccurs="0"/>
			<xsd:element ref="tns:PerActionOutput" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="Name" type="xsd:string" use="optional"/>
		<xsd:attribute name="StartedAt" type="tns:ElsterDateWithNow" use="optional"/>
		<xsd:attribute name="FinishedAt" type="tns:ElsterDateWithNow" use="optional"/>
	</xsd:complexType>
	<xsd:element name="Input" type="tns:InputType"/>
	<xsd:complexType name="InputType">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="Meter" type="tns:ImportMeterType"/>
				<xsd:element ref="tns:MeterBilling"/>
				<xsd:element ref="tns:MeterDataCollection"/>
				<xsd:element ref="tns:ReadMeterBilling"/>
				<xsd:element ref="tns:ReadMeter"/>
				<xsd:element ref="tns:ConnectMeter"/>
				<xsd:element ref="tns:DisconnectMeter"/>
				<xsd:element ref="tns:MarriageFile"/>
				<xsd:element ref="tns:MarriageFileSnippet"/>
				<xsd:element ref="tns:Sleep"/>
				<xsd:element ref="tns:Report"/>
				<xsd:element ref="tns:Schedule"/>
				<xsd:element ref="tns:ResubmitSchedule"/>
				<xsd:element ref="tns:TOUSchedule"/>
				<xsd:element ref="tns:PowerStatusCheck"/>
				<xsd:element ref="tns:DataSet"/>
				<xsd:element ref="tns:CheckSchedule"/>
				<xsd:element ref="tns:MultipleConnectDisconnectSchedule"/>
				<xsd:element ref="tns:HANDevice"/>
				<xsd:element ref="tns:MeterDemandResponseGroup"/>
				<xsd:element ref="tns:HANMessage"/>
				<xsd:element ref="tns:CancelHANMessage"/>
				<xsd:element ref="tns:ProvisionHANDevice"/>
				<xsd:element ref="tns:UnProvisionHANDevice"/>
				<xsd:element ref="tns:CriticalTierOverride"/>
				<xsd:element ref="tns:EmergencyManagementEvent"/>
				<xsd:element ref="tns:CancelEmergencyManagementEvent"/>
				<xsd:element ref="tns:ElsterPricing"/>
				<xsd:element ref="tns:EnergyConservation"/>
				<xsd:element ref="tns:Utility"/>
				<xsd:element ref="tns:DeleteUtility"/>
				<xsd:element ref="tns:WICActivationFile"/>
				<xsd:element ref="tns:WANSeed"/>
				<xsd:element ref="tns:DeleteWANSeed"/>
				<xsd:element ref="tns:LANSeed"/>
				<xsd:element ref="tns:DeleteLANSeed"/>
				<xsd:element ref="tns:SetWANSecurity"/>
				<xsd:element ref="tns:SetLANSecurity"/>
				<xsd:element ref="tns:WANAccessControlList"/>
				<xsd:element ref="tns:AssignWANAccessControlListToGatekeepers"/>
				<xsd:element ref="tns:DeleteWANAccessControlList"/>
				<xsd:element ref="tns:EnergyConservationToMeter"/>
				<xsd:element ref="tns:EnergyConservationToTOUSchedule"/>
				<xsd:element ref="tns:MeterTableRead"/>
				<xsd:element ref="tns:StartSchedule"/>
				<xsd:element ref="tns:SynchronizeChanges"/>
				<xsd:element ref="tns:DemandResponsePricing"/>
				<xsd:element ref="tns:DemandResponsePricingToMeters"/>
				<xsd:element ref="tns:ClearDemandResponsePricing"/>
				<xsd:element ref="tns:ElementConfigProfile"/>
				<xsd:element ref="tns:ElementConfigProfileToMeters"/>
				<xsd:element ref="tns:ElementConfigProfileToTOUSchedule"/>
				<xsd:element ref="tns:ElementConfigProfileToSchedule"/>
				<xsd:element ref="tns:ExchangeElementConfigProfile"/>
				<xsd:element ref="tns:ClearDefaultElementConfigProfile"/>
				<xsd:element ref="tns:DefaultElementConfigProfile"/>
				<xsd:element ref="tns:DeleteElementConfigProfile"/>
				<xsd:element ref="tns:Job"/>
				<xsd:element ref="tns:AddToJob"/>
				<xsd:element ref="tns:SubmitJob"/>
				<xsd:element ref="tns:WebServiceCall"/>
				<xsd:element ref="tns:WaitForAsyncWebServiceCall"/>
			</xsd:choice>
			<xsd:element name="ResultCheck" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="PerActionOutput" type="tns:PerActionOutputType"/>
	<xsd:complexType name="PerActionOutputType">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element ref="tns:MeterDemandResponseGroupOutput"/>
				<xsd:element ref="tns:ProvisionHANDeviceOutput"/>
				<xsd:element ref="tns:UnProvisionHANDeviceOutput"/>
				<xsd:element ref="tns:HANMessageOutput"/>
				<xsd:element ref="tns:EmergencyManagementEventOutput"/>
				<xsd:element ref="tns:DemandResponsePricingOutput"/>
				<xsd:element ref="tns:ClearDemandResponsePricingOutput"/>
				<xsd:element ref="tns:ElsterPricingOutput"/>
				<xsd:element ref="tns:EnergyConservationOutput"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="MeterDemandResponseGroupOutput" type="tns:MeterDemandResponseGroupOutputType"/>
	<xsd:complexType name="MeterDemandResponseGroupOutputType">
		<xsd:sequence>
			<xsd:element name="RefId" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ProvisionHANDeviceOutput" type="tns:ProvisionHANDeviceOutputType"/>
	<xsd:complexType name="ProvisionHANDeviceOutputType">
		<xsd:sequence>
			<xsd:element name="RefId" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="UnProvisionHANDeviceOutput" type="tns:UnProvisionHANDeviceOutputType"/>
	<xsd:complexType name="UnProvisionHANDeviceOutputType">
		<xsd:sequence>
			<xsd:element name="RefId" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="HANMessageOutput" type="tns:HANMessageOutputType"/>
	<xsd:complexType name="HANMessageOutputType">
		<xsd:sequence>
			<xsd:element name="RefId" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="EmergencyManagementEventOutput" type="tns:EmergencyManagementEventOutputType"/>
	<xsd:complexType name="EmergencyManagementEventOutputType">
		<xsd:sequence>
			<xsd:element name="RefId" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="DemandResponsePricingOutput" type="tns:DemandResponsePricingOutputType"/>
	<xsd:complexType name="DemandResponsePricingOutputType">
		<xsd:sequence>
			<xsd:element name="TierMapping_RefId" type="xsd:string"/>
			<xsd:element name="TierA_RefId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="TierB_RefId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="TierC_RefId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="TierD_RefId" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ClearDemandResponsePricingOutput" type="tns:ClearDemandResponsePricingOutputType"/>
	<xsd:complexType name="ClearDemandResponsePricingOutputType">
		<xsd:sequence>
			<xsd:element name="RefId" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ElsterPricingOutput" type="tns:ElsterPricingOutputType"/>
	<xsd:complexType name="ElsterPricingOutputType">
		<xsd:sequence>
			<xsd:element name="Season0_RefId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Season1_RefId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Season2_RefId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Season3_RefId" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="EnergyConservationOutput" type="tns:EnergyConservationOutputType"/>
	<xsd:complexType name="EnergyConservationOutputType">
		<xsd:sequence>
			<xsd:element name="TierA_RefId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="TierB_RefId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="TierC_RefId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="TierD_RefId" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="Outcome">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Failure"/>
			<xsd:enumeration value="Warning"/>
			<xsd:enumeration value="Info"/>
			<xsd:enumeration value="Success"/>
			<xsd:enumeration value="NotRun"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="Result" type="tns:ResultType"/>
	<xsd:complexType name="ResultType">
		<xsd:sequence/>
		<xsd:attribute name="Outcome" type="tns:Outcome" use="required"/>
		<xsd:attribute name="Message" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:element name="ReadingsReturned" type="tns:ReadingsReturnedType"/>
	<xsd:complexType name="ReadingsReturnedType">
		<xsd:sequence/>
		<xsd:attribute name="text" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:element name="MoreMessages" type="tns:MoreMessagesType"/>
	<xsd:complexType name="MoreMessagesType">
		<xsd:sequence>
			<xsd:choice maxOccurs="unbounded">
				<xsd:element ref="tns:MessageText"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="MessageText" type="tns:MessageTextType"/>
	<xsd:complexType name="MessageTextType">
		<xsd:sequence/>
		<xsd:attribute name="Text" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:element name="Messages" type="tns:MessagesType"/>
	<xsd:complexType name="MessagesType">
		<xsd:sequence/>
		<xsd:attribute name="Message_1" type="xsd:string" use="required"/>
		<xsd:attribute name="Message_2" type="xsd:string" use="optional"/>
		<xsd:attribute name="Message_3" type="xsd:string" use="optional"/>
		<xsd:attribute name="Message_4" type="xsd:string" use="optional"/>
		<xsd:attribute name="Message_5" type="xsd:string" use="optional"/>
		<xsd:attribute name="Message_6" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:element name="FailedActions" type="tns:FailedActionsType"/>
	<xsd:complexType name="FailedActionsType">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="Action">
				<xsd:complexType>
					<xsd:sequence/>
					<xsd:attribute name="Name" type="xsd:string" use="required"/>
					<xsd:attribute name="Message" type="xsd:string" use="required"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:element name="FinalMessage" type="tns:FinalMessageType"/>
	<xsd:complexType name="FinalMessageType">
		<xsd:sequence/>
		<xsd:attribute name="Severity" type="xsd:string" use="required"/>
		<xsd:attribute name="Text" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:element name="StartSchedule" type="tns:StartScheduleType"/>
	<xsd:complexType name="StartScheduleType">
		<xsd:annotation>
			<xsd:documentation>
       Use StartSchedule object to start a schedule rightaway.
     </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="Name" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="SynchronizeChanges" type="tns:StartScheduleType"/>
	<xsd:element name="ElementConfigProfile" type="tns:ElementConfigProfileType"/>
	<xsd:complexType name="ElementConfigProfileType">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element ref="tns:VoltageAlarmThresholdConfig_120Volt"/>
				<xsd:element ref="tns:VoltageAlarmThresholdConfig_240Volt"/>
				<xsd:element ref="tns:VoltageAlarmThresholdConfig_480Volt"/>
				<xsd:element ref="tns:VoltageAlarmThresholdConfig_600Volt"/>
				<xsd:element ref="tns:Rex1DisplayConfig"/>
				<xsd:element ref="tns:Rex2DisplayConfig"/>
				<xsd:element ref="tns:MomentaryOutageTimeConfig" minOccurs="0" maxOccurs="0"/>
				<xsd:element ref="tns:DemandLimitingConfig" minOccurs="0" maxOccurs="0"/>
				<xsd:element ref="tns:GKScheduleConfig"/>
				<xsd:element ref="tns:GKSchedule2Config"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="PROFILE_DESCRIPTION" type="tns:ElsterString"/>
		<xsd:attribute name="PROFILE_NAME" type="tns:ElsterString"/>
	</xsd:complexType>
	<xsd:element name="DeleteElementConfigProfile" type="tns:DeleteElementConfigProfileType"/>
	<xsd:complexType name="DeleteElementConfigProfileType">
		<xsd:sequence/>
		<xsd:attribute name="ElementConfigProfileName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="ElementConfigProfileToMeters" type="tns:ElementConfigProfileToMetersType"/>
	<xsd:complexType name="ElementConfigProfileToMetersType">
		<xsd:sequence>
			<xsd:element ref="tns:MeterList"/>
		</xsd:sequence>
		<xsd:attribute name="ElementConfigProfileName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="ElementConfigProfileToTOUSchedule" type="tns:ElementConfigProfileToTOUScheduleType"/>
	<xsd:complexType name="ElementConfigProfileToTOUScheduleType">
		<xsd:sequence/>
		<xsd:attribute name="ElementConfigProfileName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="TOUScheduleName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="ElementConfigProfileToSchedule" type="tns:ElementConfigProfileToScheduleType"/>
	<xsd:complexType name="ElementConfigProfileToScheduleType">
		<xsd:sequence/>
		<xsd:attribute name="ElementConfigProfileName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="ScheduleName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="ExchangeElementConfigProfile" type="tns:ExchangeElementConfigProfileType"/>
	<xsd:complexType name="ExchangeElementConfigProfileType">
		<xsd:sequence/>
		<xsd:attribute name="CurrentElementConfigProfileName" type="tns:ElsterString" use="required"/>
		<xsd:attribute name="NewElementConfigProfileName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="ClearDefaultElementConfigProfile" type="tns:ClearDefaultElementConfigProfileType"/>
	<xsd:complexType name="ClearDefaultElementConfigProfileType">
		<xsd:sequence/>
		<xsd:attribute name="ElementConfigProfileName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:element name="DefaultElementConfigProfile" type="tns:DefaultElementConfigProfileType"/>
	<xsd:complexType name="DefaultElementConfigProfileType">
		<xsd:sequence/>
		<xsd:attribute name="ElementConfigProfileName" type="tns:ElsterString" use="required"/>
	</xsd:complexType>
	<xsd:simpleType name="Volt120_Min_Range">
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="90.0"/>
					<xsd:maxInclusive value="118.8"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="0.0"/>
					<xsd:maxInclusive value="0.0"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:simpleType name="Volt120_Max_Range">
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="121.2"/>
					<xsd:maxInclusive value="144.0"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="0.0"/>
					<xsd:maxInclusive value="0.0"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:simpleType name="Volt240_Min_Range">
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="180.0"/>
					<xsd:maxInclusive value="237.6"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="0.0"/>
					<xsd:maxInclusive value="0.0"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:simpleType name="Volt240_Max_Range">
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="242.4"/>
					<xsd:maxInclusive value="288.0"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="0.0"/>
					<xsd:maxInclusive value="0.0"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:simpleType name="Volt480_Min_Range">
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="360.0"/>
					<xsd:maxInclusive value="475.2"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="0.0"/>
					<xsd:maxInclusive value="0.0"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:simpleType name="Volt480_Max_Range">
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="484.8"/>
					<xsd:maxInclusive value="576.0"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="0.0"/>
					<xsd:maxInclusive value="0.0"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:simpleType name="Volt600_Min_Range">
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="450.0"/>
					<xsd:maxInclusive value="594.0"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="0.0"/>
					<xsd:maxInclusive value="0.0"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:simpleType name="Volt600_Max_Range">
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="606.0"/>
					<xsd:maxInclusive value="720.0"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:float">
					<xsd:minInclusive value="0.0"/>
					<xsd:maxInclusive value="0.0"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:element name="VoltageAlarmThresholdConfig_240Volt" type="tns:VoltageAlarmThresholdConfig_240VoltType"/>
	<xsd:complexType name="VoltageAlarmThresholdConfig_240VoltType">
		<xsd:annotation>
			<xsd:documentation>
       Set MIN_THRESHOLD to 0 to disable MIN alarm.
			 Set MAX_THRESHOLD to 0 to disable MAX alarm.
     </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="MIN_THRESHOLD" type="tns:Volt240_Min_Range"/>
		<xsd:attribute name="MAX_THRESHOLD" type="tns:Volt240_Max_Range"/>
		<xsd:attribute name="MIN_DURATION" type="xsd:int"/>
		<xsd:attribute name="MAX_DURATION" type="xsd:int"/>
		<xsd:attribute name="PROFILE_TYPE" type="xsd:int" fixed="1"/>
	</xsd:complexType>
	<xsd:element name="VoltageAlarmThresholdConfig_120Volt" type="tns:VoltageAlarmThresholdConfig_120VoltType"/>
	<xsd:complexType name="VoltageAlarmThresholdConfig_120VoltType">
		<xsd:annotation>
			<xsd:documentation>
       Set MIN_THRESHOLD to 0 to disable MIN alarm.
			 Set MAX_THRESHOLD to 0 to disable MAX alarm.
     </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="MIN_THRESHOLD" type="tns:Volt120_Min_Range"/>
		<xsd:attribute name="MAX_THRESHOLD" type="tns:Volt120_Max_Range"/>
		<xsd:attribute name="MIN_DURATION" type="xsd:int"/>
		<xsd:attribute name="MAX_DURATION" type="xsd:int"/>
		<xsd:attribute name="PROFILE_TYPE" type="xsd:int" fixed="4"/>
	</xsd:complexType>
	<xsd:element name="VoltageAlarmThresholdConfig_480Volt" type="tns:VoltageAlarmThresholdConfig_480VoltType"/>
	<xsd:complexType name="VoltageAlarmThresholdConfig_480VoltType">
		<xsd:annotation>
			<xsd:documentation>
       Set MIN_THRESHOLD to 0 to disable MIN alarm.
			 Set MAX_THRESHOLD to 0 to disable MAX alarm.
     </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="MIN_THRESHOLD" type="tns:Volt480_Min_Range"/>
		<xsd:attribute name="MAX_THRESHOLD" type="tns:Volt480_Max_Range"/>
		<xsd:attribute name="MIN_DURATION" type="xsd:int"/>
		<xsd:attribute name="MAX_DURATION" type="xsd:int"/>
		<xsd:attribute name="PROFILE_TYPE" type="xsd:int" fixed="2"/>
	</xsd:complexType>
	<xsd:element name="VoltageAlarmThresholdConfig_600Volt" type="tns:VoltageAlarmThresholdConfig_600VoltType"/>
	<xsd:complexType name="VoltageAlarmThresholdConfig_600VoltType">
		<xsd:annotation>
			<xsd:documentation>
       Set MIN_THRESHOLD to 0 to disable MIN alarm.
			 Set MAX_THRESHOLD to 0 to disable MAX alarm.
     </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="MIN_THRESHOLD" type="tns:Volt600_Min_Range"/>
		<xsd:attribute name="MAX_THRESHOLD" type="tns:Volt600_Max_Range"/>
		<xsd:attribute name="MIN_DURATION" type="xsd:int"/>
		<xsd:attribute name="MAX_DURATION" type="xsd:int"/>
		<xsd:attribute name="PROFILE_TYPE" type="xsd:int" fixed="3"/>
	</xsd:complexType>
	<xsd:element name="DemandLimitingConfig" type="tns:DemandLimitingConfigType"/>
	<xsd:complexType name="DemandLimitingConfigType">
		<xsd:sequence/>
		<xsd:attribute name="DEMAND_THRESHOLD"/>
		<xsd:attribute name="DEMAND_LIMIT_PENALTY"/>
		<xsd:attribute name="DEMAND_LIMIT_MAX_DELAY"/>
		<xsd:attribute name="IS_TIER_A_ENABLED"/>
		<xsd:attribute name="IS_TIER_B_ENABLED"/>
		<xsd:attribute name="IS_TIER_C_ENABLED"/>
		<xsd:attribute name="IS_TIER_D_ENABLED"/>
		<xsd:attribute name="DEMAND_LIMIT_LOCKOUT_CNT"/>
		<xsd:attribute name="DEMAND_LIMIT_LOCKOUT_PERIOD"/>
		<xsd:attribute name="PROFILE_TYPE" type="xsd:int" fixed="12"/>
	</xsd:complexType>
	<xsd:element name="MomentaryOutageTimeConfig" type="tns:MomentaryOutageTimeConfigType"/>
	<xsd:complexType name="MomentaryOutageTimeConfigType">
		<xsd:sequence/>
		<xsd:attribute name="MAX_MOMENTARY_OUTAGE_TIME" type="xsd:float"/>
		<xsd:attribute name="PROFILE_TYPE" type="xsd:int" fixed="14"/>
	</xsd:complexType>
	<xsd:element name="GKSchedule2Config" type="tns:GKSchedule2ConfigType"/>
	<xsd:complexType name="GKSchedule2ConfigType">
		<xsd:sequence>
			<xsd:element name="METER_READ_ATTEMPTS" type="tns:ATTEMPTS_Type"/>
			<xsd:element name="PROFILE_READ_ATTEMPTS" type="tns:ATTEMPTS_Type"/>
			<xsd:element name="PROFILE_SECOND_SCHED_ATTEMPTS" type="tns:ATTEMPTS_Type"/>
		</xsd:sequence>
		<xsd:attribute name="PROFILE_TYPE" type="xsd:int" fixed="11"/>
	</xsd:complexType>
	<xsd:element name="GKScheduleConfig" type="tns:GKScheduleConfigType"/>
	<xsd:complexType name="GKScheduleConfigType">
		<xsd:sequence>
			<xsd:element name="METER_READ_ATTEMPTS" type="tns:ATTEMPTS_Type"/>
			<xsd:element name="PROFILE_READ_ATTEMPTS" type="tns:ATTEMPTS_Type"/>
		</xsd:sequence>
		<xsd:attribute name="PROFILE_TYPE" type="xsd:int" fixed="10"/>
	</xsd:complexType>
	<xsd:complexType name="ATTEMPTS_Type">
		<xsd:sequence/>
		<xsd:attribute name="OFFSET" type="tns:GKScheduleStart" use="required"/>
		<xsd:attribute name="PERIOD" type="tns:GKScheduleFrequency" use="required"/>
	</xsd:complexType>
	<xsd:element name="Rex1DisplayConfig" type="tns:Rex1DisplayConfigType"/>
	<xsd:complexType name="Rex1DisplayConfigType">
		<xsd:annotation>
			<xsd:documentation>
     </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="DISPLAY_LCD_TEST" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_ERROR_CODES" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_STATUS_CODES" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TIME_AND_RATE" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TOTAL_FIRST_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TOTAL_SECOND_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TIER_A_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TIER_B_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TIER_C_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TIER_D_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_DEMAND_1" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_DEMAND_2" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_NETWORK_REG_STATUS" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="PROFILE_TYPE" type="xsd:int" fixed="17"/>
	</xsd:complexType>
	<xsd:element name="Rex2DisplayConfig" type="tns:Rex2DisplayConfigType"/>
	<xsd:complexType name="Rex2DisplayConfigType">
		<xsd:annotation>
			<xsd:documentation>
     </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
		<xsd:attribute name="DISPLAY_LCD_TEST" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_ERROR_CODES" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_STATUS_CODES" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TIME_AND_RATE" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TOTAL_FIRST_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TOTAL_SECOND_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TIER_A_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TIER_B_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TIER_C_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_TIER_D_ENERGY" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_DEMAND_1" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_DEMAND_2" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_DEMAND_3" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_NETWORK_REG_STATUS" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_LOAD_CONTROL_STATUS" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_FIRMWARE_VERSION" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_INSTANTANEOUS_DEMAND" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_CUSTOM_DISPLAY_STRING1" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_CUSTOM_DISPLAY_STRING2" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_CUSTOM_DISPLAY_STRING3" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_CUSTOM_DISPLAY_STRING4" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_PHASE_VOLTAGE" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="DISPLAY_PHASE_INSTANTANEOUS_DEMAND" type="tns:ElsterBoolean" use="optional"/>
		<xsd:attribute name="CUSTOM_DISPLAY_STRING1" type="tns:CustomDisplayStringType" use="optional"/>
		<xsd:attribute name="CUSTOM_DISPLAY_STRING2" type="tns:CustomDisplayStringType" use="optional"/>
		<xsd:attribute name="CUSTOM_DISPLAY_STRING3" type="tns:CustomDisplayStringType" use="optional"/>
		<xsd:attribute name="CUSTOM_DISPLAY_STRING4" type="tns:CustomDisplayStringType" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_LCD_TEST" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_ERROR_CODES" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_STATUS_CODES" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_TIME_AND_RATE" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_TOTAL_FIRST_ENERGY" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_TOTAL_SECOND_ENERGY" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_TIER_A_ENERGY" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_TIER_B_ENERGY" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_TIER_C_ENERGY" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_TIER_D_ENERGY" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_DEMAND_1" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_DEMAND_2" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_DEMAND_3" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_NETWORK_REG_STATUS" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_LOAD_CONTROL_STATUS" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_FIRMWARE_VERSION" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_INSTANTANEOUS_DEMAND" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_CUSTOM_DISPLAY_STRING1" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_CUSTOM_DISPLAY_STRING2" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_CUSTOM_DISPLAY_STRING3" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_CUSTOM_DISPLAY_STRING4" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_PHASE_VOLTAGE" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="DISPLAY_ORDER_PHASE_INSTANTANEOUS_DEMAND" type="tns:Rex2DisplayProfileOrderNumber" use="optional"/>
		<xsd:attribute name="PROFILE_TYPE" type="xsd:int" fixed="13"/>
	</xsd:complexType>

	<!-- END Import Objects -->

	<!-- BEGIN Export Objects -->

	<xsd:simpleType name="ElsterDate">
		<xsd:annotation>
			<xsd:documentation> Dates in AMRDef are all assumed to be in GMT and are of the following form:
         &quot;2004-03-02 12:22:13&quot; (YYYY-MM-DD HH:mm:ss)
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{2}:\d{2}"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="NillableElsterDate">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="((\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{2}:\d{2}))?"/>
		</xsd:restriction>
	</xsd:simpleType>

		<xsd:simpleType name="UOM">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="kW"/>
				<xsd:enumeration value="kWh"/>
				<xsd:enumeration value="kVAR"/>
				<xsd:enumeration value="kVARh"/>
				<xsd:enumeration value="kVA"/>
				<xsd:enumeration value="kVAh"/>
				<xsd:enumeration value="kQ"/>
				<xsd:enumeration value="kQh"/>
				<xsd:enumeration value="PowerFactor"/>
				<xsd:enumeration value="Volts"/>
				<xsd:enumeration value="Amperes"/>
				<xsd:enumeration value="CCF"/>
				<xsd:enumeration value="Gal"/>
				<xsd:enumeration value="cgal"/>
				<xsd:enumeration value="m3"/>
				<xsd:enumeration value="ft3"/>
				<xsd:enumeration value="in3"/>
				<xsd:enumeration value="yd3"/>
				<xsd:enumeration value="IG"/>
				<xsd:enumeration value="L"/>
				<xsd:enumeration value="af"/>
				<xsd:enumeration value="Each"/>
				<xsd:enumeration value="Unknown"/>
				<xsd:enumeration value="Phase A Average RMS Voltage"/>
				<xsd:enumeration value="Phase C Average RMS Voltage"/>
				<xsd:enumeration value="Phase A Min RMS Voltage"/>
				<xsd:enumeration value="Phase C Min RMS Voltage"/>
				<xsd:enumeration value="Phase A Max RMS Voltage"/>
				<xsd:enumeration value="Phase C Max RMS Voltage"/>
				<xsd:enumeration value="Phase A EOI Snapshot RMS Voltage"/>
				<xsd:enumeration value="Phase C EOI Snapshot RMS Voltage"/>
			</xsd:restriction>
		</xsd:simpleType>

	<xsd:simpleType name="Direction">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="Delivered"/>
				<xsd:enumeration value="Received"/>
				<xsd:enumeration value="Sum"/>
				<xsd:enumeration value="Net"/>
				<xsd:enumeration value="(Q1+Q2)"/>
				<xsd:enumeration value="Q2Q3"/>
				<xsd:enumeration value="(Q2+Q3)"/>
				<xsd:enumeration value="(Q3-Q2)"/>
				<xsd:enumeration value="Q1Q4"/>
				<xsd:enumeration value="(Q1+Q4)"/>
				<xsd:enumeration value="(Q1-Q4)"/>
				<xsd:enumeration value="Q1"/>
				<xsd:enumeration value="Q2"/>
				<xsd:enumeration value="Q3"/>
				<xsd:enumeration value="Q4"/>
				<xsd:enumeration value=""/>
				<xsd:enumeration value="Unknown"/>
			</xsd:restriction>
		</xsd:simpleType>

	<xsd:simpleType name="TouBucket">
			<xsd:restriction base="xsd:NMTOKEN">
				<xsd:enumeration value="TierA"/>
				<xsd:enumeration value="TierB"/>
				<xsd:enumeration value="TierC"/>
				<xsd:enumeration value="TierD"/>
				<xsd:enumeration value="TierE"/>
				<xsd:enumeration value="Total"/>
			</xsd:restriction>
		</xsd:simpleType>

	<xsd:simpleType name="MeasurementPeriod">
			<xsd:restriction base="xsd:NMTOKEN">
				<xsd:enumeration value="Current"/>
				<xsd:enumeration value="Previous"/>
				<xsd:enumeration value="PreviousSeason"/>
				<xsd:enumeration value="ConfigChangeCopy"/>
				<xsd:enumeration value="NodeUnregisteredPreviousSeason"/>
				<xsd:enumeration value="NodeUnregisteredPrevious"/>
				<xsd:enumeration value="EndOfIntervalSnapshot"/>
			</xsd:restriction>
		</xsd:simpleType>
	
	<xsd:element name="Channel" type="tns:ChannelType"/>
	<xsd:complexType name="ChannelType">
			<xsd:attribute name="UOM" type="tns:UOM" use="required"/>
			<xsd:attribute name="Direction" type="tns:Direction" use="required"/>
			<xsd:attribute name="IntervalSeconds" type="xsd:short" use="required"/>
			<xsd:attribute name="NumIntervalsRead" type="xsd:short" use="required"/>
			<xsd:attribute name="FirstIntervalTimestamp" type="tns:ElsterDate" use="required"/>
			<xsd:attribute name="ReadingRangeStartTimestamp" type="tns:ElsterDate" use="required"/>
			<xsd:attribute name="ReadingRangeEndTimestamp" type="tns:ElsterDate" use="required"/>
			<xsd:attribute name="SumOfIntervalValues" type="xsd:decimal"/>
			<xsd:attribute name="Multiplier" type="xsd:decimal" use="required"/>
	</xsd:complexType>

	<xsd:element name="Clock" type="tns:ClockType"/>
	<xsd:complexType name="ClockType">
			<xsd:attribute name="MeterTime" type="tns:ElsterDate" use="required"/>
			<xsd:attribute name="ServerTime" type="tns:ElsterDate" use="required"/>
			<xsd:attribute name="DaylightAdjustmentInEffectAtMeter" type="xsd:string" use="required"/>
			<xsd:attribute name="ActiveSeason" type="xsd:string" use="required"/>
			<xsd:attribute name="ActiveTier" type="xsd:string" use="required"/>
			<xsd:attribute name="ActiveDayType" type="xsd:string" use="required"/>
	</xsd:complexType>

	<xsd:element name="ConsumptionData" type="tns:ConsumptionDataType"/>
	<xsd:complexType name="ConsumptionDataType">
			<xsd:sequence>
				<xsd:element ref="tns:ConsumptionSpec"/>
				<xsd:element name="Reading" type="tns:RegisterReadingType"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="ConsumptionSpec" type="tns:ConsumptionSpecType"/>
	<xsd:complexType name="ConsumptionSpecType">
			<xsd:attribute name="UOM" type="tns:UOM" use="required"/>
			<xsd:attribute name="Direction" type="tns:Direction" use="required"/>
			<xsd:attribute name="TouBucket" type="tns:TouBucket" use="required"/>
			<xsd:attribute name="MeasurementPeriod" type="tns:MeasurementPeriod" use="required"/>
			<xsd:attribute name="Multiplier" type="xsd:decimal" use="required"/>
	</xsd:complexType>

	<xsd:element name="CumulativeDemandSpec" type="tns:CumulativeDemandSpecType"/>
	<xsd:complexType name="CumulativeDemandSpecType">
			<xsd:attribute name="UOM" type="tns:UOM" use="required"/>
			<xsd:attribute name="Direction" type="tns:Direction" use="required"/>
			<xsd:attribute name="TouBucket" type="tns:TouBucket" use="required"/>
			<xsd:attribute name="MeasurementPeriod" type="tns:MeasurementPeriod" use="required"/>
			<xsd:attribute name="Multiplier" type="xsd:decimal" use="required"/>
	</xsd:complexType>

	<xsd:element name="CumulativeDemandData" type="tns:CumulativeDemandDataType"/>
	<xsd:complexType name="CumulativeDemandDataType">
			<xsd:sequence>
				<xsd:element ref="tns:CumulativeDemandSpec"/>
				<xsd:element name="Reading" type="tns:ReadingPotentiallyWithoutTimestampType"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="PresentDemandSpec" type="tns:PresentDemandSpecType"/>
	<xsd:complexType name="PresentDemandSpecType">
			<xsd:attribute name="UOM" type="tns:UOM" use="required"/>
			<xsd:attribute name="Direction" type="tns:Direction" use="required"/>
			<xsd:attribute name="TouBucket" type="tns:TouBucket" use="required"/>
			<xsd:attribute name="MeasurementPeriod" type="tns:MeasurementPeriod" use="required"/>
			<xsd:attribute name="Multiplier" type="xsd:decimal" use="required"/>
	</xsd:complexType>

	<xsd:element name="PresentDemandData" type="tns:PresentDemandDataType"/>
	<xsd:complexType name="PresentDemandDataType">
			<xsd:sequence>
				<xsd:element ref="tns:PresentDemandSpec"/>
				<xsd:element name="Reading" type="tns:ReadingPotentiallyWithoutTimestampType"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="DemandReset" type="tns:DemandResetType"/>
	<xsd:complexType name="DemandResetType">
			<xsd:attribute name="TimeStamp" type="tns:ElsterDate" use="required"/>
	</xsd:complexType>

	<xsd:element name="Message" type="tns:MessageType"/>
	<xsd:complexType name="MessageType">
			<xsd:attribute name="Text" type="xsd:string" use="required"/>
	</xsd:complexType>

	<xsd:element name="DemandResetCount" type="tns:DemandResetCountType"/>
	<xsd:complexType name="DemandResetCountType">
			<xsd:attribute name="Count" type="xsd:int" use="required"/>
			<xsd:attribute name="TimeStamp" type="tns:ElsterDate" use="required"/>
			<xsd:attribute name="UOM" type="xsd:string" use="required"/>
	</xsd:complexType>

	<xsd:element name="Event" type="tns:EventType"/>
	<xsd:complexType name="EventType">
			<xsd:sequence>
				<xsd:element ref="tns:EventAttribute" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="TimeStamp" type="tns:ElsterDate"/>
			<xsd:attribute name="DiscoveredAt" type="tns:ElsterDate" use="optional"/>
			<xsd:attribute name="Source" type="xsd:string" use="optional"/>
			<xsd:attribute name="EndTime" type="tns:ElsterDate"/>
			<xsd:attribute name="State" type="xsd:boolean"/>
			<xsd:attribute name="Ongoing" type="xsd:boolean"/>
			<xsd:attribute name="Phase" type="xsd:string"/>
			<xsd:attribute name="Counter" type="xsd:string"/>
			<xsd:attribute name="Value" type="xsd:decimal"/>
			<xsd:attribute name="AlarmTrigger" type="xsd:boolean"/>
			<xsd:attribute name="EventInfo" type="xsd:string" use="optional"/>
	</xsd:complexType>

	<xsd:element name="EventAttribute" type="tns:EventAttributeType"/>
	<xsd:complexType name="EventAttributeType">
			<xsd:attribute name="Name" type="xsd:string" use="required"/>
			<xsd:attribute name="Value" type="xsd:string" use="required"/>
	</xsd:complexType>

	<xsd:element name="EventData" type="tns:EventDataType"/>
	<xsd:complexType name="EventDataType">
			<xsd:sequence>
				<xsd:element ref="tns:EventSpec"/>
				<xsd:element ref="tns:Event" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="EventSpec" type="tns:EventSpecType"/>
	<xsd:complexType name="EventSpecType">
			<xsd:attribute name="Type" type="xsd:string" use="required"/>
			<xsd:attribute name="Category" type="xsd:string" use="required"/>
	</xsd:complexType>

	<xsd:element name="IntervalData" type="tns:IntervalDataType"/>
	<xsd:complexType name="IntervalDataType">
			<xsd:sequence>
				<xsd:element ref="tns:IntervalSpec"/>
				<xsd:element name="Reading" type="tns:LoadProfileReadingType" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="IntervalSpec" type="tns:IntervalSpecType"/>
	<xsd:complexType name="IntervalSpecType">
			<xsd:attribute name="UOM" type="tns:UOM" use="required"/>
			<xsd:attribute name="Direction" type="tns:Direction" use="required"/>
			<xsd:attribute name="Interval" type="xsd:byte" use="required"/>
			<xsd:attribute name="Channel" type="xsd:int" use="required"/>
			<xsd:attribute name="TimestampStart" type="tns:ElsterDate" use="required"/>
			<xsd:attribute name="TimestampEnd" type="tns:ElsterDate" use="required"/>
			<xsd:attribute name="Multiplier" type="xsd:decimal" use="required"/>
	</xsd:complexType>

	<xsd:element name="LoadProfileSummary" type="tns:LoadProfileSummaryType"/>
	<xsd:complexType name="LoadProfileSummaryType">
			<xsd:sequence>
				<xsd:element ref="tns:Channel" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="OutageCount" type="tns:OutageCountType"/>
	<xsd:complexType name="OutageCountType">
			<xsd:attribute name="ReadingTime" type="tns:ElsterDate"/>
			<xsd:attribute name="Value" type="xsd:int"/>
			<xsd:attribute name="PreviousReadingTime" type="tns:ElsterDate"/>
			<xsd:attribute name="PreviousValue" type="xsd:int"/>
	</xsd:complexType>

	<xsd:element name="OutageCountSummary" type="tns:OutageCountSummaryType"/>
	<xsd:complexType name="OutageCountSummaryType">
			<xsd:sequence>
				<xsd:element ref="tns:OutageCount" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="ReverseEnergy" type="tns:ReverseEnergyType"/>
	<xsd:complexType name="ReverseEnergyType">
			<xsd:attribute name="CurrentValue" type="xsd:float"/>
			<xsd:attribute name="PreviousValue" type="xsd:float"/>
	</xsd:complexType>

	<xsd:element name="ReverseEnergySummary" type="tns:ReverseEnergySummaryType"/>
	<xsd:complexType name="ReverseEnergySummaryType">
			<xsd:sequence>
				<xsd:element ref="tns:ReverseEnergy" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="InstrumentationValue" type="tns:InstrumentationValueType"/>
	<xsd:complexType name="InstrumentationValueType">
			<xsd:attribute name="Name" type="xsd:string" use="required"/>
			<xsd:attribute name="Phase" type="xsd:string"/>
			<xsd:attribute name="Value" type="xsd:decimal" use="required"/>
			<xsd:attribute name="Timestamp" type="tns:ElsterDate" use="required"/>
	</xsd:complexType>

	<xsd:element name="MaxDemandData" type="tns:MaxDemandDataType"/>
	<xsd:complexType name="MaxDemandDataType">
			<xsd:sequence>
				<xsd:element ref="tns:MaxDemandSpec"/>
				<xsd:element name="Reading" type="tns:ReadingPotentiallyWithoutTimestampType"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="MaxDemandSpec" type="tns:MaxDemandSpecType"/>
	<xsd:complexType name="MaxDemandSpecType">
			<xsd:attribute name="UOM" type="tns:UOM" use="required"/>
			<xsd:attribute name="Direction" type="tns:Direction" use="required"/>
			<xsd:attribute name="TouBucket" type="tns:TouBucket" use="required"/>
			<xsd:attribute name="MeasurementPeriod" type="tns:MeasurementPeriod" use="required"/>
			<xsd:attribute name="Multiplier" type="xsd:decimal" use="required"/>
	</xsd:complexType>

	<xsd:element name="CoincidentDemandData" type="tns:CoincidentDemandDataType"/>
	<xsd:complexType name="CoincidentDemandDataType">
			<xsd:sequence>
				<xsd:element ref="tns:CoincidentDemandSpec"/>
				<xsd:element name="Reading" type="tns:ReadingPotentiallyWithoutTimestampType"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="CoincidentDemandSpec" type="tns:CoincidentDemandSpecType"/>
	<xsd:complexType name="CoincidentDemandSpecType">
			<xsd:attribute name="UOM" type="tns:UOM" use="required"/>
			<xsd:attribute name="Direction" type="tns:Direction" use="required"/>
			<xsd:attribute name="TouBucket" type="tns:TouBucket" use="required"/>
			<xsd:attribute name="MeasurementPeriod" type="tns:MeasurementPeriod" use="required"/>
			<xsd:attribute name="Multiplier" type="xsd:decimal" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="ExportMeterType">
		<xsd:sequence>
			<xsd:element name="Status" type="tns:OverallStatusType" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="MeterIrn" type="xsd:integer" use="required"/>
		<xsd:attribute name="MeterName" type="xsd:string" use="required"/>
		<xsd:attribute name="IsActive" type="xsd:string" use="required"/>
		<xsd:attribute name="SerialNumber" type="xsd:string" use="required"/>
		<xsd:attribute name="MeterType" type="tns:MeterType" use="required"/>
		<xsd:attribute name="AccountIdent" type="xsd:string" use="required"/>
		<xsd:attribute name="Description" type="xsd:string" use="required"/>
		<xsd:attribute name="AccountName" type="xsd:string" use="required"/>
		<xsd:attribute name="SdpIdent" type="xsd:string" use="required"/>
		<xsd:attribute name="Location" type="xsd:string" use="required"/>
		<xsd:attribute name="TimeZoneIndex" type="xsd:integer" use="required"/>
		<xsd:attribute name="Timezone" type="xsd:string" use="required"/>
		<xsd:attribute name="TimeZoneOffset" type="xsd:integer" use="required"/>
		<xsd:attribute name="ObservesDaylightSavings" type="xsd:string" use="required"/>
		<xsd:attribute name="MediaType" type="xsd:string" use="required"/>
		<xsd:attribute name="InstallDate" type="tns:NillableElsterDate" use="optional"/>
		<xsd:attribute name="RemovalDate" type="tns:NillableElsterDate" use="optional"/>
	</xsd:complexType>

	<xsd:element name="MeterReadings" type="tns:MeterReadingsType"/>
	<xsd:complexType name="MeterReadingsType">
			<xsd:sequence>
				<xsd:element name="Meter" type="tns:ExportMeterType"/>
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element ref="tns:Clock" minOccurs="0"/>
					<xsd:element ref="tns:ConsumptionData"/>
					<xsd:element ref="tns:MaxDemandData"/>
					<xsd:element ref="tns:CoincidentDemandData"/>
					<xsd:element ref="tns:CumulativeDemandData"/>
					<xsd:element ref="tns:PresentDemandData"/>
					<xsd:element ref="tns:DemandResetCount"/>
					<xsd:element ref="tns:IntervalData"/>
					<xsd:element ref="tns:EventData"/>
					<xsd:element ref="tns:LoadProfileSummary"/>
					<xsd:element ref="tns:DemandReset" minOccurs="0"/>
					<xsd:element ref="tns:Message" minOccurs="0"/>
					<xsd:element ref="tns:OutageCountSummary" minOccurs="0"/>
					<xsd:element ref="tns:ReverseEnergySummary" minOccurs="0"/>
					<xsd:element ref="tns:Statuses"/>
					<xsd:element ref="tns:InstrumentationValue" minOccurs="0"/>

					<xsd:element ref="tns:ReadingQualityIndicator" minOccurs="0"/>
					<xsd:element ref="tns:RestorationCountSummary" minOccurs="0"/>
				</xsd:choice>
			</xsd:sequence>
			<xsd:attribute name="Irn" type="xsd:integer" use="required"/>
			<xsd:attribute name="SourceIrn" type="xsd:integer" use="required"/>
			<xsd:attribute name="SourceName" type="xsd:string" use="required"/>
			<xsd:attribute name="Source" type="xsd:string" use="required"/>
			<xsd:attribute name="Initiator" type="xsd:string" use="required"/>
			<xsd:attribute name="Purpose" type="xsd:string" use="required"/>
			<xsd:attribute name="CollectionTime" type="tns:ElsterDate" use="required"/>
	</xsd:complexType>

	<xsd:element name="ScheduleInfo" type="tns:ScheduleInfoType"/>
	<xsd:complexType name="ScheduleInfoType">
			<xsd:attribute name="ServiceProvider" type="xsd:string" use="required"/>
			<xsd:attribute name="Role" type="xsd:string" use="required"/>
			<xsd:attribute name="Irn" type="xsd:integer" use="required"/>
			<xsd:attribute name="Type" type="xsd:integer" use="required"/>
			<xsd:attribute name="Tolerance" type="xsd:integer" use="required"/>
			<xsd:attribute name="DestinationDir" type="xsd:string" use="required"/>
			<xsd:attribute name="Name" type="xsd:string" use="required"/>
			<xsd:attribute name="Description" type="xsd:string" use="required"/>
			<xsd:attribute name="ObservesDst" type="xsd:boolean" use="required"/>
			<xsd:attribute name="IsBilling" type="xsd:boolean" use="required"/>
			<xsd:attribute name="TimeZoneIndex" type="xsd:integer" use="required"/>
			<xsd:attribute name="Timezone" type="xsd:string" use="required"/>
			<xsd:attribute name="TimeZoneOffset" type="xsd:integer" use="required"/>
			<xsd:attribute name="RexBillingId" type="xsd:integer" use="optional"/>
	</xsd:complexType>

	<xsd:element name="QualityFlags" type="tns:QualityFlagsType"/>
	<xsd:complexType name="QualityFlagsType">
			<xsd:attribute name="TimeChanged" type="xsd:string"/>
			<xsd:attribute name="ClockSetBackward" type="xsd:string"/>
			<xsd:attribute name="LongInterval" type="xsd:string"/>
			<xsd:attribute name="ClockSetForward" type="xsd:string"/>
			<xsd:attribute name="PartialInterval" type="xsd:string"/>
			<xsd:attribute name="InvalidTime" type="xsd:string"/>
			<xsd:attribute name="SkippedInterval" type="xsd:string"/>
			<xsd:attribute name="CompleteOutage" type="xsd:string"/>
			<xsd:attribute name="PulseOverflow" type="xsd:string"/>
			<xsd:attribute name="TestMode" type="xsd:string"/>
			<xsd:attribute name="Tamper" type="xsd:string"/>
			<xsd:attribute name="PartialOutage" type="xsd:string"/>
			<xsd:attribute name="SuspectedOutage" type="xsd:string"/>
			<xsd:attribute name="Restoration" type="xsd:string"/>
			<xsd:attribute name="DST" type="xsd:boolean"/>
			<xsd:attribute name="InvalidValue" type="xsd:boolean"/>
	</xsd:complexType>

	<xsd:complexType name="RegisterReadingType">
		<xsd:attribute name="TimeStamp" type="tns:ElsterDate" use="required"/>
		<xsd:attribute name="Value" type="xsd:decimal" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="LoadProfileReadingType">
		<xsd:sequence>
			<xsd:element ref="tns:QualityFlags" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="TimeStamp" type="tns:ElsterDate" use="required"/>
		<xsd:attribute name="RawReading" type="xsd:decimal" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="ReadingPotentiallyWithoutTimestampType">
		<xsd:attribute name="TimeStamp" type="tns:ElsterDate" use="optional"/>
		<xsd:attribute name="Value" type="xsd:decimal" use="required"/>
	</xsd:complexType>

	<xsd:element name="ReadingQualityIndicator" type="tns:ReadingQualityIndicatorType"/>
	<xsd:complexType name="ReadingQualityIndicatorType">
			<xsd:attribute name="Name" use="required">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Meter Health"/>
						<xsd:enumeration value="Tamper Alert"/>
						<xsd:enumeration value="none"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Value" type="xsd:boolean" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="OverallStatusType">
		<xsd:attribute name="Code" type="xsd:int"/>
		<xsd:attribute name="Text" type="xsd:string"/>
	</xsd:complexType>

	<xsd:element name="Status" type="tns:StatusType"/>
	<xsd:complexType name="StatusType">
			<xsd:attribute name="Id" type="xsd:int" use="required"/>
			<xsd:attribute name="Name" type="xsd:string" use="required"/>
			<xsd:attribute name="Category" type="xsd:string" use="required"/>
			<xsd:attribute name="Type" use="required">
				<xsd:simpleType>
					<xsd:restriction base="xsd:NMTOKEN">
						<xsd:enumeration value="bool"/>
						<xsd:enumeration value="int"/>
						<xsd:enumeration value="real"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Value" type="xsd:string" use="required"/>
	</xsd:complexType>

	<xsd:element name="Statuses" type="tns:StatusesType"/>
	<xsd:complexType name="StatusesType">
			<xsd:sequence>
				<xsd:element ref="tns:Status" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="MetersNotRead" type="tns:MetersNotReadType"/>
	<xsd:complexType name="MetersNotReadType" mixed="true">
			<xsd:sequence>
				<xsd:element name="Meter" type="tns:ExportMeterType" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="MetersRead" type="tns:MetersReadType"/>
	<xsd:complexType name="MetersReadType" mixed="true">
			<xsd:sequence>
				<xsd:element name="Meter" type="tns:ExportMeterType" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="ErrorSection" type="tns:ErrorSectionType"/>
	<xsd:complexType name="ErrorSectionType" mixed="true">
			<xsd:sequence>
				<xsd:element name="Meter" type="tns:ExportMeterType" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="TamperSection" type="tns:TamperSectionType"/>
	<xsd:complexType name="TamperSectionType" mixed="true">
			<xsd:sequence>
				<xsd:element name="Meter" type="tns:ExportMeterType" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="ScheduleExecution" type="tns:ScheduleExecutionType"/>
	<xsd:complexType name="ScheduleExecutionType">
			<xsd:sequence>
				<xsd:element ref="tns:ScheduleInfo" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="tns:MetersNotRead" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="tns:MetersRead" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="tns:ErrorSection" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="tns:TamperSection" minOccurs="0" maxOccurs="1"/>
			</xsd:sequence>
			<xsd:attribute name="Irn" type="xsd:integer" use="required"/>
			<xsd:attribute name="started" type="tns:ElsterDate" use="required"/>
			<xsd:attribute name="finished" type="tns:ElsterDate" use="required"/>
			<xsd:attribute name="Initiator" type="xsd:string" use="required"/>
	</xsd:complexType>

	<xsd:element name="RestorationCount" type="tns:RestorationCountType"/>
	<xsd:complexType name="RestorationCountType">
		<xsd:attribute name="ReadingTime" type="tns:ElsterDate"/>
		<xsd:attribute name="Value" type="xsd:int"/>
		<xsd:attribute name="PreviousReadingTime" type="tns:ElsterDate"/>
		<xsd:attribute name="PreviousValue" type="xsd:int"/>
	</xsd:complexType>

	<xsd:element name="RestorationCountSummary" type="tns:RestorationCountSummaryType"/>
	<xsd:complexType name="RestorationCountSummaryType">
		<xsd:sequence>
			<xsd:element ref="tns:RestorationCount" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<!-- END Export Objects -->

      <xsd:complexType name="DetailedReadingFileType">
    	<xsd:sequence>
      		<xsd:element name="Handle" type="xsd:string"/>
      		<xsd:element name="Size" type="xsd:int"/>
    	</xsd:sequence>
  	  </xsd:complexType>
	
	<xsd:simpleType name="ReadingFileTypeType">
		<xsd:restriction base="xsd:NMTOKEN">
			<xsd:enumeration value="Collector"/>
			<xsd:enumeration value="Completion"/>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:element name="ReadingFileList" type="tns:ReadingFileListType"/>
	<xsd:complexType name="ReadingFileListType">
      <xsd:sequence>
        <xsd:element name="ReadingFile" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
	
	<xsd:complexType name="DetailedReadingFileListType">
      <xsd:sequence>
        <xsd:element name="ReadingFile" type="tns:DetailedReadingFileType" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
      
	<xsd:complexType name="ResubmitDetailedReadingFileListType">
      <xsd:sequence>
        <xsd:element name="ResubmitId" type="xsd:string"/>
        <xsd:element name="ReadingFileList" type="tns:DetailedReadingFileListType"/>
      </xsd:sequence>
    </xsd:complexType>
      
  <xsd:element name="ScheduleRuns" type="tns:ScheduleRunsType"/>
	<xsd:complexType name="ScheduleRunsType">
		<xsd:sequence>
			<xsd:element ref="tns:ScheduleRun" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

  <xsd:element name="ScheduleRun" type="tns:ScheduleRunType"/>
	<xsd:complexType name="ScheduleRunType">
		<xsd:sequence>
			<xsd:element name="RunId" type="xsd:string"/>
			<xsd:element name="RunTime" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="ResubmitReadingFileList" type="tns:ResubmitReadingFileListType"/>
	<xsd:complexType name="ResubmitReadingFileListType">
      <xsd:sequence>
        <xsd:element name="ResubmitId" type="xsd:string"/>
        <xsd:element name="ReadingFileList" type="tns:ReadingFileListType"/>
      </xsd:sequence>
    </xsd:complexType>
    
	<xsd:element name="ReadingsForScheduleRun" type="tns:ReadingsForScheduleRunType"/>
	<xsd:complexType name="ReadingsForScheduleRunType">
      <xsd:sequence>
        <xsd:element name="InitialRun" minOccurs="0" maxOccurs="1">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="ReadingFileList" type="tns:ReadingFileListType"/>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="Resubmit" type="tns:ResubmitReadingFileListType" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
    
    <xsd:element name="DetailedReadingsForScheduleRun" type="tns:DetailedReadingsForScheduleRunType"/>
	<xsd:complexType name="DetailedReadingsForScheduleRunType">
      <xsd:sequence>
        <xsd:element name="InitialRun" minOccurs="0" maxOccurs="1">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="ReadingFileList" type="tns:DetailedReadingFileListType"/>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="Resubmit" type="tns:ResubmitDetailedReadingFileListType" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
    
    <xsd:simpleType name="MessageSeverityType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Error"/>
			<xsd:enumeration value="Warning"/>
			<xsd:enumeration value="Info"/>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:element name="CallResponse" type="tns:CallResponseType"/>
	<xsd:complexType name="CallResponseType">
		<xsd:sequence>
			<xsd:element name="Status" type="tns:CallStatusType"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="CallStatus" type="tns:CallStatusType"/>
	<xsd:complexType name="CallStatusType">
		<xsd:sequence>
			<xsd:element name="OverallMessage" type="tns:StatusMessageType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="DetailMessages" minOccurs="0" maxOccurs="1">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Message" type="tns:StatusMessageType" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="isError" type="xsd:boolean" use="required"/>
	</xsd:complexType>
	
	<xsd:element name="StatusMessage" type="tns:StatusMessageType"/>
	<xsd:complexType name="StatusMessageType">
		<xsd:sequence>
			<xsd:element name="Text" type="xsd:string"/>
		</xsd:sequence>
		<xsd:attribute name="code" type="xsd:int" use="optional"/>
		<xsd:attribute name="severity" type="tns:MessageSeverityType" use="optional"/>
		<xsd:attribute name="objectId" type="xsd:string" use="optional"/>
		<xsd:attribute name="objectNoun" type="xsd:string" use="optional"/>
	</xsd:complexType>
	
	<xsd:element name="PagingResponse" type="tns:PagingResponseType"/>
	<xsd:complexType name="PagingResponseType">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element name="TotalNumber" type="xsd:int" minOccurs="0" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="UnknownLANIDs" type="tns:UnknownLANIDsType"/>
	<xsd:complexType name="UnknownLANIDsType">
		<xsd:sequence>
			<xsd:element name="UnknownLANID" type="tns:UnknownLANIDType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="UnknownLANID" type="tns:UnknownLANIDType"/>
	<xsd:complexType name="UnknownLANIDType">
		<xsd:sequence>
			<xsd:element name="LANID" type="xsd:string"/>
			<xsd:element name="CollectorName" type="xsd:string"/>
			<xsd:element name="DiscoveryTime" type="tns:ElsterDate"/>
			<xsd:element name="RegistrationTime" type="tns:ElsterDate"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="RegisteredNodesRecordsType">
		<xsd:sequence>
			<xsd:element name="Record" type="tns:RegisteredNodeRecordType2" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="RegisteredNodeRecordType2">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="SerialNumber" type="xsd:string"/>
			<xsd:element name="MeterType" type="tns:NodeType2"/>
			<xsd:element name="LanId" type="xsd:string"/>
			<xsd:element name="CollectorName" type="xsd:string"/>
			<xsd:element name="RegistrationTime" type="tns:ElsterDate" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="InstallTime" type="tns:ElsterDate" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="LastConnectTime" type="tns:ElsterDate" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="LastReadingTime" type="tns:ElsterDate" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:simpleType name="NodeType2">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="REX"/>
			<xsd:enumeration value="A3_ILN"/>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:element name="RegisteredNodes" type="tns:RegisteredNodesType"/>
	<xsd:complexType name="RegisteredNodesType">
		<xsd:sequence>
			<xsd:element name="Record" type="tns:RegisteredNodeRecordType2" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="InvokeCommandSeqSyncResult" type="tns:InvokeCommandSeqSyncResultType" substitutionGroup="tns:CallResponse"/>
	<xsd:complexType name="InvokeCommandSeqSyncResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:attribute name="WorkflowId" type="xsd:string" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:simpleType name="ExecutionStatusType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Running"/>
			<xsd:enumeration value="Finished"/>
			<xsd:enumeration value="Unknown"/>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:element name="InvokeCommandSeqResult" type="tns:InvokeCommandSeqResultType" substitutionGroup="tns:CallResponse"/>
	<xsd:complexType name="InvokeCommandSeqResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element ref="tns:ImportDataOutput" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="ExecutionStatus" type="tns:ExecutionStatusType" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="GetUnknownLANIDsRequest" type="tns:GetUnknownLANIDsRequestType"/>
	<xsd:complexType name="GetUnknownLANIDsRequestType">
		<xsd:sequence>
			<xsd:element name="StartIndex" type="xsd:int"/>
			<xsd:element name="NumberResults" type="xsd:int"/>
			<xsd:element name="Collector" type="xsd:string" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="From" type="tns:ElsterDate"/>
			<xsd:element name="To" type="tns:ElsterDate" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="GetUnknownLANIDsResult" type="tns:GetUnknownLANIDsResultType" substitutionGroup="tns:PagingResponse"/>
	<xsd:complexType name="GetUnknownLANIDsResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:PagingResponseType">
				<xsd:sequence>
					<xsd:element name="UnknownLANIDs" type="tns:UnknownLANIDsType" minOccurs="0" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="GetRegisteredNodesRequest" type="tns:GetRegisteredNodesRequestType"/>
	<xsd:complexType name="GetRegisteredNodesRequestType" abstract="false">
		<xsd:sequence>
			<xsd:element name="StartIndex" type="xsd:int"/>
			<xsd:element name="NumberResults" type="xsd:int"/>
			<xsd:element name="Collector" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="GetRegisteredNodesResult" type="tns:GetRegisteredNodesResultType" substitutionGroup="tns:PagingResponse"/>
	<xsd:complexType name="GetRegisteredNodesResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:PagingResponseType">
				<xsd:sequence>
					<xsd:element ref="tns:RegisteredNodes"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="GetReadingsRequest" type="tns:GetReadingsRequestType"/>
	<xsd:complexType name="GetReadingsRequestType" abstract="false">
		<xsd:sequence>
			<xsd:element name="ReadingsHandle" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="GetReadingsResult" type="tns:GetReadingsResultType" substitutionGroup="tns:CallResponse"/>
	<xsd:complexType name="GetReadingsResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element ref="tns:AMRDEF" minOccurs="0" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="GetReadingsCompressedRequestType" abstract="false">
		<xsd:sequence>
			<xsd:element name="ReadingsHandle" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="GetReadingsCompressedResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element name="CompressedAMRDEF" type="xsd:base64Binary" minOccurs="0" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="GetVoltageDataRequestType" abstract="false">
		<xsd:sequence>
			<xsd:element name="ScheduleName" type="xsd:string"/>
			<xsd:element name="Timestamp" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="GetVoltageDataResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element name="CompressedVoltages" type="xsd:base64Binary"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="ScheduleRecordsType">
		<xsd:sequence>
			<xsd:element name="Schedule" type="tns:ScheduleRecordType2" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="ScheduleRecordType2">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="Description" type="xsd:string"/>
		    <xsd:element name="Type" type="tns:ScheduleTypeType"/>
		    <xsd:element name="State" type="tns:ScheduleStateType"/>
		    <xsd:element name="FrequencyType" type="tns:ScheduleFrequencyType"/>
		    <xsd:element name="NumMeters" type="xsd:int"/>
		    <xsd:element name="LastStartTime" type="tns:ElsterDate" minOccurs="0" maxOccurs="1"/>
		    <xsd:element name="LastEndTime" type="tns:ElsterDate" minOccurs="0" maxOccurs="1"/>
		    <xsd:element name="NextStartTime" type="tns:ElsterDate" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="GetSchedulesRequest" type="tns:GetSchedulesRequestType"/>
	<xsd:complexType name="GetSchedulesRequestType" abstract="false">
		<xsd:sequence>
			<xsd:element name="StartIndex" type="xsd:int"/>
			<xsd:element name="NumberResults" type="xsd:int"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="GetSchedulesResult" type="tns:GetSchedulesResultType" substitutionGroup="tns:PagingResponse"/>
	<xsd:complexType name="GetSchedulesResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:PagingResponseType">
				<xsd:sequence>
					<xsd:element name="Schedules" type="tns:ScheduleRecordsType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="GetScheduleRunsRequest" type="tns:GetScheduleRunsRequestType"/>
	<xsd:complexType name="GetScheduleRunsRequestType" abstract="false">
		<xsd:sequence>
			<xsd:element name="ScheduleName" type="xsd:string"/>
			<xsd:element name="From" type="tns:ElsterDate"/>
			<xsd:element name="To" type="tns:ElsterDate"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="GetScheduleRunsResult" type="tns:GetScheduleRunsResultType" substitutionGroup="tns:CallResponse"/>
	<xsd:complexType name="GetScheduleRunsResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element ref="tns:ScheduleRuns"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="GetReadingsForScheduleRunRequest" type="tns:GetReadingsForScheduleRunRequestType"/>
	<xsd:complexType name="GetReadingsForScheduleRunRequestType" abstract="false">
		<xsd:sequence>
			<xsd:element name="ScheduleName" type="xsd:string"/>
			<xsd:element name="RunId" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="GetReadingsForScheduleRunResult" type="tns:GetReadingsForScheduleRunResultType" substitutionGroup="tns:CallResponse"/>
	<xsd:complexType name="GetReadingsForScheduleRunResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element ref="tns:ReadingsForScheduleRun"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="GetDetailedReadingsForScheduleRunResult" type="tns:GetDetailedReadingsForScheduleRunResultType" substitutionGroup="tns:CallResponse"/>
	<xsd:complexType name="GetDetailedReadingsForScheduleRunResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element name="ReadingsForScheduleRun" type="tns:DetailedReadingsForScheduleRunType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="PingRequestType" abstract="false">
		<xsd:sequence/>
	</xsd:complexType>
	
	<xsd:complexType name="PingResultType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="GetReportNamesRequestType" abstract="false">
		<xsd:sequence/>
	</xsd:complexType>
	
	<xsd:complexType name="ReportNamesType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="GetReportNamesResponseType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element name="ReportNames" type="tns:ReportNamesType" minOccurs="0" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="GetReportSignatureRequestType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="ReportParameterType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="Type" type="xsd:string" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="Value" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="ReportSignatureType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="Parameter" type="tns:ReportParameterType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="GetReportSignatureResponseType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element name="ReportSignature" type="tns:ReportSignatureType" minOccurs="0" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ExecuteReportRequestType">
		<xsd:sequence>
			<xsd:element name="ReportSignature" type="tns:ReportSignatureType"/>
		</xsd:sequence>
	</xsd:complexType>
    
    <xsd:simpleType name="StandardDateTimeType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}"/>
		</xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="StandardDateTimePlusTimeZoneType">
    	<xsd:restriction base="xsd:string">
			<xsd:pattern value="\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2} [A-Z]{3}"/>
		</xsd:restriction>
    </xsd:simpleType>
    
    <xsd:complexType name="StandardDateTimePlusTimeZoneWithMillisType">
    	<xsd:simpleContent>
    		<xsd:extension base="tns:StandardDateTimePlusTimeZoneType">
    			<xsd:attribute name="millisSinceEpoch" type="xsd:long" use="optional"/>
		    </xsd:extension>
		</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="ReportHeaderType">
    	<xsd:sequence>
    		<xsd:element name="ReportName" type="xsd:string"/>
    		<xsd:element name="Version" type="xsd:string"/>
    		<xsd:element name="CreationTime" type="tns:StandardDateTimePlusTimeZoneType"/>
    		<xsd:element name="StartIndex" type="xsd:int" minOccurs="0" maxOccurs="1"/>
    		<xsd:element name="EndIndex" type="xsd:int" minOccurs="0" maxOccurs="1"/>
    		<xsd:element name="TotalRecordCount" type="xsd:int" minOccurs="0" maxOccurs="1"/>
    		<xsd:element name="SQL" type="xsd:string" minOccurs="0" maxOccurs="1"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="RecordType" abstract="true">
    	<xsd:attribute name="index" type="xsd:int" use="required"/>
    </xsd:complexType>
    
    <xsd:element name="Records" type="tns:RecordsType"/>
    <xsd:complexType name="RecordsType">
    	<xsd:sequence>
    		<xsd:element name="Record" type="tns:RecordType" minOccurs="0" maxOccurs="unbounded"/>
    	</xsd:sequence>
    	<xsd:attribute name="recordCount" type="xsd:int" use="required"/>
    </xsd:complexType>
    
    <xsd:complexType name="ReportFooterType"/>
    
    <xsd:complexType name="ReportType">
    	<xsd:sequence>
    		<xsd:element name="Header" type="tns:ReportHeaderType"/>
    		<xsd:element name="Records" type="tns:RecordsType"/>
    		<xsd:element name="Footer" type="tns:ReportFooterType"/>
    	</xsd:sequence>
    </xsd:complexType>
	
	<xsd:complexType name="ExecuteReportResponseType" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element name="Report" type="tns:ReportType" minOccurs="0" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!-- BEGIN REPORT RECORD TYPES -->
        
    <xsd:complexType name="SummaryMeterType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="SerialNumber" type="xsd:string"/>
			<xsd:element name="MeterStyle" type="xsd:string"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="SummaryMeterNodeType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:SummaryMeterType">
	    		<xsd:sequence>
					<xsd:element name="GatekeeperName" type="xsd:string" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="SummaryMeterRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
	    		<xsd:sequence>
		    		<xsd:element name="Meter" type="tns:SummaryMeterType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="MeterType2">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="SerialNumber" type="xsd:string"/>
			<xsd:element name="MeterStyle" type="xsd:string"/>
			<xsd:element name="Description" type="xsd:string"/>
			<xsd:element name="CollectorName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="Account" type="xsd:string"/>
			<xsd:element name="SDP" type="xsd:string"/>
			<xsd:element name="InstallTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="LastConnectTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="LastDownloadTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="LastReadingTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="SimpleMeterType">
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="type" type="xsd:string" use="optional"/>
		<xsd:attribute name="nodeLevel" type="xsd:int" use="optional"/>
		<xsd:attribute name="relativeNodeLevel" type="xsd:int" use="optional"/>
		<xsd:attribute name="descendantCount" type="xsd:int" use="optional"/>
		<xsd:attribute name="latitude" type="xsd:float" use="optional"/>
		<xsd:attribute name="longitude" type="xsd:float" use="optional"/>
		<xsd:attribute name="lanRequestCount" type="xsd:int" use="optional"/>
		<xsd:attribute name="lanResponseCount" type="xsd:int" use="optional"/>
		<xsd:attribute name="lanPerformance" type="xsd:float" use="optional"/>
		<xsd:attribute name="firmware1DeviceType" type="xsd:string" use="optional"/>
		<xsd:attribute name="firmware1Version" type="xsd:int" use="optional"/>
		<xsd:attribute name="firmware1Revision" type="xsd:int" use="optional"/>
		<xsd:attribute name="firmware2DeviceType" type="xsd:string" use="optional"/>
		<xsd:attribute name="firmware2Version" type="xsd:int" use="optional"/>
		<xsd:attribute name="firmware2Revision" type="xsd:int" use="optional"/>
		<xsd:attribute name="firmware3DeviceType" type="xsd:string" use="optional"/>
		<xsd:attribute name="firmware3Version" type="xsd:int" use="optional"/>
		<xsd:attribute name="firmware3Revision" type="xsd:int" use="optional"/>
    </xsd:complexType>
    
    <xsd:complexType name="SimpleMeterRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
	    		<xsd:sequence>
		    		<xsd:element name="Meter" type="tns:SimpleMeterType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="HierarchicalMeterType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:SimpleMeterType">
    			<xsd:sequence>
    				<xsd:element name="Meter" type="tns:HierarchicalMeterType" minOccurs="0" maxOccurs="unbounded"/>
    			</xsd:sequence>
    		</xsd:extension>
    	</xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="HierarchicalMeterRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
	    		<xsd:sequence>
		    		<xsd:element name="Meter" type="tns:HierarchicalMeterType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    <!--
    <xsd:complexType name="LPChannelConfigurationType">
		<xsd:sequence>
		    <xsd:element name="Number" type="xsd:int"/>
		    <xsd:element name="UOM" type="xsd:string"/>
		    <xsd:element name="Direction" type="xsd:string"/>
		</xsd:sequence>
    </xsd:complexType>
    -->
    <xsd:complexType name="LPChannelConfigurationRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
	    		<xsd:sequence>
		    		<xsd:element name="Number" type="xsd:int"/>
		    		<xsd:element name="UOM" type="xsd:string"/>
		    		<xsd:element name="Direction" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="LPReadingQualityFlagsType">
		<xsd:sequence>
		    <xsd:element name="CompleteOutage" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
		    <xsd:element name="PartialOutage" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
		    <xsd:element name="SuspectedOutage" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="LPReadingType">
		<xsd:sequence>
		    <xsd:element name="Time" type="tns:StandardDateTimePlusTimeZoneType"/>
		    <xsd:element name="Value" type="xsd:float"/>
		    <xsd:element name="ChannelNumber" type="xsd:int" minOccurs="0" maxOccurs="1"/>
		    <xsd:element name="UOM" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    <xsd:element name="Direction" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    <xsd:element name="QualityFlags" type="tns:LPReadingQualityFlagsType"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="LPChannelReadingRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
	    		<xsd:sequence>
		    		<xsd:element name="Time" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="Value" type="xsd:float"/>
		    		<xsd:element name="ChannelNumber" type="xsd:int" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="UOM" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="Direction" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="QualityFlags" type="tns:LPReadingQualityFlagsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<xsd:simpleType name="DurationUOMType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Millisecond"/>
			<xsd:enumeration value="Second"/>
			<xsd:enumeration value="Minute"/>
			<xsd:enumeration value="Hour"/>
			<xsd:enumeration value="Day"/>
			<xsd:enumeration value="Week"/>
			<xsd:enumeration value="Month"/>
			<xsd:enumeration value="Year"/>
		</xsd:restriction>
	</xsd:simpleType>
    
	<xsd:simpleType name="DataSizeUOMType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Byte"/>
			<xsd:enumeration value="KiloByte"/>
			<xsd:enumeration value="MegaByte"/>
			<xsd:enumeration value="GigaByte"/>
		</xsd:restriction>
	</xsd:simpleType>
    
	<xsd:simpleType name="DataBlockUOMType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ANSI C12.21 Packet"/>
		</xsd:restriction>
	</xsd:simpleType>
    
	<xsd:simpleType name="DeviceUOMType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Meter"/>
		</xsd:restriction>
	</xsd:simpleType>
    
	<xsd:simpleType name="RSSIUOMType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="dBm"/>
		</xsd:restriction>
	</xsd:simpleType>
    
	<xsd:simpleType name="DistanceUOMType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Nanometer"/>
			<xsd:enumeration value="Millimeter"/>
			<xsd:enumeration value="Centimeter"/>
			<xsd:enumeration value="Meter"/>
			<xsd:enumeration value="Kilometer"/>
		</xsd:restriction>
	</xsd:simpleType>
    
    <xsd:complexType name="DurationType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="UOM" type="tns:DurationUOMType" use="optional"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="DeviceQuantityType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="UOM" type="tns:DeviceUOMType" use="optional" default="Meter"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="DataSizeType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="UOM" type="tns:DataSizeUOMType" use="optional" default="Byte"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="DataBlockSizeType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="UOM" type="tns:DataBlockUOMType" use="optional" default="ANSI C12.21 Packet"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="DeviceSizeType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="UOM" type="tns:DeviceUOMType" use="optional" default="Meter"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="RSSIType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="UOM" type="tns:RSSIUOMType" use="optional" default="dBm"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="DistanceType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="UOM" type="tns:DistanceUOMType" use="optional" default="Meter"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="RatioType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="numeratorUOM" type="xsd:string" use="required"/>
				<xsd:attribute name="denominatorUOM" type="xsd:string" use="required"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="DataSizeRateType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="numeratorUOM" type="tns:DataSizeUOMType" use="required"/>
				<xsd:attribute name="denominatorUOM" type="tns:DurationUOMType" use="required"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="DataBlockRateType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="numeratorUOM" type="tns:DataBlockUOMType" use="required"/>
				<xsd:attribute name="denominatorUOM" type="tns:DurationUOMType" use="required"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="DurationPerDeviceType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="numeratorUOM" type="tns:DurationUOMType" use="required"/>
				<xsd:attribute name="denominatorUOM" type="tns:DeviceUOMType" use="required"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="DataSizePerDeviceType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="numeratorUOM" type="tns:DataSizeUOMType" use="required"/>
				<xsd:attribute name="denominatorUOM" type="tns:DeviceUOMType" use="required"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="DataBlockPerDeviceType">
    	<xsd:simpleContent>
      		<xsd:extension base="xsd:float">
				<xsd:attribute name="numeratorUOM" type="tns:DataBlockUOMType" use="required"/>
				<xsd:attribute name="denominatorUOM" type="tns:DeviceUOMType" use="required"/>
    		</xsd:extension>
    	</xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="TimeWindowType">
		<xsd:sequence>
		    <xsd:sequence>
		    	<xsd:element name="StartTime" type="xsd:string" nillable="true"/>
		    	<xsd:element name="EndTime" type="xsd:string" nillable="true"/>
		    	<xsd:element name="Duration" type="tns:DurationType" nillable="true"/>
		    </xsd:sequence>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="MeterRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Name" type="xsd:string"/>
		    		<xsd:element name="SerialNumber" type="xsd:string"/>
		    		<xsd:element name="MeterStyle" type="xsd:string"/>
		    		<xsd:element name="Description" type="xsd:string" nillable="true"/>
		    		<xsd:element name="Account" type="xsd:string" nillable="true"/>
		    		<xsd:element name="SDP" type="xsd:string" nillable="true"/>
		    		<xsd:element name="CollectorName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="InstallTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="LastConnectTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="LastDownloadTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="LastReadingTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="Latitude" type="xsd:string" nillable="true"/>
		    		<xsd:element name="Longitude" type="xsd:string" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="MeterNotReadType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="MeterName" type="xsd:string"/>
		    		<xsd:element name="SerialNumber" type="xsd:string"/>
		    		<xsd:element name="MeterStyle" type="xsd:string"/>
		    		<xsd:element name="Description" type="xsd:string" nillable="true"/>
		    		<xsd:element name="Account" type="xsd:string" nillable="true"/>
		    		<xsd:element name="SdpId" type="xsd:string" nillable="true"/>
		    		<xsd:element name="CollectorName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="InstallTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="MeterNameRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:choice>
		    		<xsd:element name="Name" type="xsd:string"/>
		    		<xsd:element name="MeterName" type="xsd:string"/>
		    	</xsd:choice>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="MeterLANInformationType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string" nillable="true"/>
			<xsd:element name="SerialNumber" type="xsd:string"/>
			<xsd:element name="MeterStyle" type="xsd:string"/>
			<xsd:element name="LANId" type="xsd:string" nillable="true"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="MeterLANInformationRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="MeterLANInformation" type="tns:MeterLANInformationType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="MeterOutageRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Meter" type="tns:MeterType2"/>
		    		<xsd:element name="Outage" type="tns:TimeWindowType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="OutageSummaryType">
		<xsd:sequence>
		    <xsd:sequence>
		    	<xsd:element name="OutageCount" type="xsd:int"/>
		    	<xsd:element name="AverageDuration" type="tns:DurationType"/>
		    	<xsd:element name="TotalDuration" type="tns:DurationType"/>
		    </xsd:sequence>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="MeterOutageSummaryRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Meter" type="tns:MeterType2"/>
		    		<xsd:element name="OutageSummary" type="tns:OutageSummaryType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="MeterEventRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Name" type="xsd:string"/>
		    		<xsd:element name="Category" type="xsd:string"/>
		    		<xsd:element name="MeterName" type="xsd:string"/>
		    		<xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="EndTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="DetectionTime" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="EventAge" type="tns:DurationType" nillable="true"/>
		    		<xsd:element name="Information" type="xsd:string" nillable="true"/>
		    		<xsd:element name="AssociatedValue" type="xsd:string" nillable="true"/>
		    		<xsd:element name="SDPID" type="xsd:string" nillable="true"/>
		    		<xsd:element name="SerialNumber" type="xsd:string"/>
		    		<xsd:element name="AccountName" type="xsd:string" nillable="true"/>
		    		<xsd:element name="AccountId" type="xsd:string" nillable="true"/>
		    		<xsd:element name="Description" type="xsd:string" nillable="true"/>
		    		<xsd:element name="SiteLocation" type="xsd:string" nillable="true"/>
		    		<xsd:element name="MeterStyle" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="MeterEventNewType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="MeterName" type="xsd:string"/>
                    <xsd:element name="MeterTypeSubtype" type="xsd:string"/>
                    <xsd:element name="MeterType" type="xsd:string"/>
                    <xsd:element name="AccountId" type="xsd:string" nillable="true"/>
                    <xsd:element name="AccountName" type="xsd:string" nillable="true"/>
                    <xsd:element name="SerialNumber" type="xsd:string" nillable="true"/>
                    <xsd:element name="InstallDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="RemovalDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EventId" type="xsd:int"/>
                    <xsd:element name="EventName" type="xsd:string"/>
                    <xsd:element name="EventCategory" type="xsd:string"/>
                    <xsd:element name="EventSeverity" type="xsd:string"/>
                    <xsd:element name="EventValue" type="xsd:string" nillable="true"/>
                    <xsd:element name="DetectionTime" type="tns:StandardDateTimePlusTimeZoneType"/>
                    <xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EndTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EventInformation" type="xsd:string" nillable="true"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
     

    <xsd:complexType name="MeterEventRecordGISType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="EventName" type="xsd:string"/>
		    		<xsd:element name="MeterName" type="xsd:string"/>
		    		<xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="HeadEndDetectionTime" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="EventInformation" type="xsd:string" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="PhaseInformationType">
		    <xsd:sequence>
		    	<xsd:element name="Phase" type="xsd:string"/>
		    	<xsd:element name="Voltage" type="xsd:float" nillable="true"/>
		    	<xsd:element name="Demand" type="xsd:float" nillable="true"/>
		    </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="VoltageThresholdInfoType">
		    <xsd:sequence>
		    	<xsd:element name="ProfileName" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		    	<xsd:element name="EventOccurredOn" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		    	<xsd:element name="PhaseInformation" type="tns:PhaseInformationType" minOccurs="0" maxOccurs="3"/>
		    </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="EventInformationType">
		    	<xsd:choice>
		    		<xsd:element name="VoltageThresholdInfo" type="tns:VoltageThresholdInfoType"/>
						<xsd:element name="AdditionalInfo" type="xsd:string"/>
		    	</xsd:choice>
    </xsd:complexType>
    

    <xsd:complexType name="MeterEventRecord2Type">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="EventName" type="xsd:string"/>
		    		<xsd:element name="Category" type="xsd:string"/>
		    		<xsd:element name="MeterName" type="xsd:string"/>
		    		<xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="EndTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="HeadEndDetectionTime" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="EventAge" type="tns:DurationType" nillable="true"/>
		    		<xsd:element name="Information" type="tns:EventInformationType" nillable="true"/>
		    		<xsd:element name="AssociatedValue" type="xsd:string" nillable="true"/>
		    		<xsd:element name="SDPID" type="xsd:string" nillable="true"/>
		    		<xsd:element name="SerialNumber" type="xsd:string"/>
		    		<xsd:element name="AccountName" type="xsd:string" nillable="true"/>
		    		<xsd:element name="AccountId" type="xsd:string" nillable="true"/>
		    		<xsd:element name="Description" type="xsd:string" nillable="true"/>
		    		<xsd:element name="SiteLocation" type="xsd:string" nillable="true"/>
		    		<xsd:element name="MeterStyle" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    
    <xsd:complexType name="UnknownNodeRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="UnknownLanID" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="CollectorIrn" type="xsd:int" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="CollectorName" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="DiscoveredAt" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="RegistrationTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<xsd:simpleType name="NodeType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="A3_ILN"/>
			<xsd:enumeration value="A3D"/>
			<xsd:enumeration value="A3DQ"/>
			<xsd:enumeration value="A3RA"/>
			<xsd:enumeration value="A3RAC"/>
			<xsd:enumeration value="A3RACQ"/>
			<xsd:enumeration value="A3RAL"/>
			<xsd:enumeration value="A3RALC"/>
			<xsd:enumeration value="A3RALCQ"/>
			<xsd:enumeration value="A3RALN"/>
			<xsd:enumeration value="A3RALNC"/>
			<xsd:enumeration value="A3RALNCQ"/>
			<xsd:enumeration value="A3RALNQ"/>
			<xsd:enumeration value="A3RALQ"/>
			<xsd:enumeration value="A3RAQ"/>
			<xsd:enumeration value="A3RLNCQ"/>
			<xsd:enumeration value="A3K"/>
			<xsd:enumeration value="A3KA"/>
			<xsd:enumeration value="A3KAQ"/>
			<xsd:enumeration value="A3KAL"/>
			<xsd:enumeration value="A3KALQ"/>
			<xsd:enumeration value="A3KALN"/>
			<xsd:enumeration value="A3KALNQ"/>
			<xsd:enumeration value="A3KL"/>
			<xsd:enumeration value="A3KLN"/>
			<xsd:enumeration value="A3KLNQ"/>
			<xsd:enumeration value="A3KLQ"/>
			<xsd:enumeration value="A3R"/>
			<xsd:enumeration value="A3RC"/>
			<xsd:enumeration value="A3RCQ"/>
			<xsd:enumeration value="A3RL"/>
			<xsd:enumeration value="A3RLC"/>
			<xsd:enumeration value="A3RLCQ"/>
			<xsd:enumeration value="A3RLN"/>
			<xsd:enumeration value="A3RLNC"/>
			<xsd:enumeration value="A3RLNQ"/>
			<xsd:enumeration value="A3RLQ"/>
			<xsd:enumeration value="A3RQ"/>
			<xsd:enumeration value="A3T"/>
			<xsd:enumeration value="A3TQ"/>
			<xsd:enumeration value="A3TL"/>
			<xsd:enumeration value="A3TLQ"/>
			<xsd:enumeration value="A3TLN"/>
			<xsd:enumeration value="A3TLNQ"/>
			<xsd:enumeration value="REX"/>
		</xsd:restriction>
	</xsd:simpleType>
    
    <xsd:complexType name="RegisteredNodeRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Name" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="SerialNumber" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="Irn" type="xsd:int" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="MeterType" type="tns:NodeType" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="TypeDescription" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="LanId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="CollectorName" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="CollectorIrn" type="xsd:int" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="RegistrationTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="InstallTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="1" maxOccurs="1"/>
		    		<xsd:element name="LastReadingTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="LastConnectTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<xsd:simpleType name="ScheduleTypeType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Billing"/>
			<xsd:enumeration value="Non Billing"/>
			<xsd:enumeration value="Download"/>
			<xsd:enumeration value="Voltage Reads"/>
		</xsd:restriction>
	</xsd:simpleType>
    
	<xsd:simpleType name="ScheduleFrequencyType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="List"/>
			<xsd:enumeration value="Periodic"/>
		</xsd:restriction>
	</xsd:simpleType>
    
	<xsd:simpleType name="ScheduleStateType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Active"/>
			<xsd:enumeration value="Inactive"/>
		</xsd:restriction>
	</xsd:simpleType>
    
    <xsd:complexType name="ScheduleRunType2">
		<xsd:sequence>
			<xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    <xsd:element name="EndTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    <xsd:element name="Duration" type="tns:DurationType" nillable="true"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ScheduleType2">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="Description" type="xsd:string"/>
		    <xsd:element name="Type" type="tns:ScheduleTypeType" nillable="true"/>
		    <xsd:element name="State" type="tns:ScheduleStateType"/>
		    <xsd:element name="FrequencyType" type="tns:ScheduleFrequencyType"/>
		    <xsd:element name="Tolerance" type="tns:DurationType"/>
		    <xsd:element name="MeterCount" type="xsd:int"/>
		    <xsd:element name="LastScheduleRun" type="tns:ScheduleRunType2" nillable="true"/>
		    <xsd:element name="NextScheduleRun" type="tns:ScheduleRunType2" nillable="true"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ScheduleRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="Schedule" type="tns:ScheduleType2"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<xsd:complexType name="MeterTypeCountType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="Count" type="xsd:int"/>
		</xsd:sequence>
	</xsd:complexType>
    
	<xsd:complexType name="MeterTypeCountsType">
		<xsd:sequence>
			<xsd:element name="MeterTypeCount" type="tns:MeterTypeCountType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
    
    <xsd:complexType name="ScheduleRunMetricsType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:ScheduleRunType2">
				<xsd:sequence>
					<xsd:element name="MeterCount" type="xsd:int"/>
					<xsd:element name="MeterTypeCounts" type="tns:MeterTypeCountsType"/>
		    		<xsd:element name="InitialPerformance" type="xsd:float"/>
		    		<xsd:element name="OverallPerformance" type="xsd:float"/>
		    		<xsd:element name="SuccessfulReadCount" type="xsd:int"/>
		    		<xsd:element name="FailedReadCount" type="xsd:int"/>
		    		<xsd:element name="StaleReadCount" type="xsd:int"/>
		    		<xsd:element name="ErrorCount" type="xsd:int"/>
		    		<xsd:element name="TamperCount" type="xsd:int"/>
		    		<xsd:element name="StaleReadMeterCount" type="xsd:int"/>
		    		<xsd:element name="ErrorMeterCount" type="xsd:int"/>
		   			<xsd:element name="TamperMeterCount" type="xsd:int"/>
				</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="ScheduleRunMetricsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="ScheduleRunMetrics" type="tns:ScheduleRunMetricsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="AllLastScheduleRunMetricsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="Schedule" type="tns:ScheduleType2"/>
					<xsd:element name="LastScheduleRunMetrics" type="tns:ScheduleRunMetricsType" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="ScheduleRunRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="ScheduleRun" type="tns:ScheduleRunType2"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="ScheduleRunMetricsHistoryRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="ScheduleRunMetrics" type="tns:ScheduleRunMetricsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="MeterTypeCountsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="MeterTypeCounts" type="tns:MeterTypeCountsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="WANMetricsType">
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="1">
				<xsd:element name="ScheduleName" type="xsd:string"/>
				<xsd:element name="CollectorName" type="xsd:string"/>
			</xsd:choice>
			<xsd:element name="DataMetrics">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="SizeMetrics">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="DataTransmissionSize" type="tns:DataSizeType"/>
									<xsd:element name="DataReceptionSize" type="tns:DataSizeType"/>
									<xsd:element name="TotalDataSize" type="tns:DataSizeType"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="ThroughputMetrics">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="TotalSessionTime" type="tns:DurationType"/>
									<xsd:element name="DataTranmissionThroughputRate" type="tns:DataSizeRateType" nillable="true"/>
									<xsd:element name="DataReceptionThroughputRate" type="tns:DataSizeRateType" nillable="true"/>
									<xsd:element name="TotalDataThroughputRate" type="tns:DataSizeRateType" nillable="true"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="DeviceMetrics">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="AverageDeviceCount" type="tns:DeviceQuantityType"/>
									<xsd:element name="SessionTimePerDevice" type="tns:DurationPerDeviceType" nillable="true"/>
									<xsd:element name="DataTransmissionSizePerDevice" type="tns:DataSizePerDeviceType" nillable="true"/>
									<xsd:element name="DataReceptionSizePerDevice" type="tns:DataSizePerDeviceType" nillable="true"/>
									<xsd:element name="TotalDataSizePerDevice" type="tns:DataSizePerDeviceType" nillable="true"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="DataBlockMetrics">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="SizeMetrics">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="SuccessfulDataBlockSize" type="tns:DataBlockSizeType"/>
									<xsd:element name="FailedDataBlockSize" type="tns:DataBlockSizeType"/>
									<xsd:element name="RetriedDataBlockSize" type="tns:DataBlockSizeType"/>
									<xsd:element name="ProblemDataBlockSize" type="tns:DataBlockSizeType"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="ThroughputMetrics">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="TotalSessionTime" type="tns:DurationType"/>
									<xsd:element name="SuccessfulDataBlockThroughputRate" type="tns:DataBlockRateType" nillable="true"/>
									<xsd:element name="FailedDataBlockThroughputRate" type="tns:DataBlockRateType" nillable="true"/>
									<xsd:element name="RetriedDataBlockThroughputRate" type="tns:DataBlockRateType" nillable="true"/>
									<xsd:element name="ProblemDataBlockThroughputRate" type="tns:DataBlockRateType" nillable="true"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="DeviceMetrics">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="AverageDeviceCount" type="tns:DeviceQuantityType"/>
									<xsd:element name="SuccessfulDataBlockSizePerDevice" type="tns:DataBlockPerDeviceType" nillable="true"/>
									<xsd:element name="FailedDataBlockSizePerDevice" type="tns:DataBlockPerDeviceType" nillable="true"/>
									<xsd:element name="RetriedDataBlockSizePerDevice" type="tns:DataBlockPerDeviceType" nillable="true"/>
									<xsd:element name="ProblemDataBlockSizePerDevice" type="tns:DataBlockPerDeviceType" nillable="true"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ScheduleWANMetricsType">
		<xsd:sequence>
			<xsd:element name="SummaryWANMetrics" type="tns:WANMetricsType"/>
			<xsd:element name="CollectorWANMetrics" type="tns:WANMetricsType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="WANMetricsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="WANMetrics" type="tns:WANMetricsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="ScheduleWANMetricsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="ScheduleWANMetrics" type="tns:ScheduleWANMetricsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="LANPerformanceThresholdMetricsType">
		<xsd:sequence>
			<xsd:element name="MeterCount" type="xsd:int"/>
			<xsd:element name="MeterWeight" type="xsd:float"/>
		</xsd:sequence>
		<xsd:attribute name="thresholdStart" type="xsd:float" use="required"/>
		<xsd:attribute name="thresholdEnd" type="xsd:float" use="required"/>
    </xsd:complexType>
    
    <xsd:complexType name="LANPerformanceThresholdMetricsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="LANPerformanceThresholdMetrics" type="tns:LANPerformanceThresholdMetricsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="LANMetricsAtomicType">
		<xsd:sequence>
			<xsd:sequence minOccurs="0" maxOccurs="1">
				<xsd:element name="MeterName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="CollectorName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
			</xsd:sequence>
			<xsd:element name="MeterCount" type="xsd:int"/>
			<xsd:element name="MeterWeight" type="xsd:float"/>
			<xsd:element name="NetworkDepth" type="xsd:int" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="RequestCount" type="xsd:int"/>
			<xsd:element name="ResponseCount" type="xsd:int"/>
			<xsd:element name="Performance" type="xsd:float"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="MeterLANMetricsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="MeterLANMetrics" type="tns:LANMetricsAtomicType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="LANMetricsType">
    	<xsd:sequence>
			<xsd:element name="System" type="tns:LANMetricsAtomicType"/>
			<xsd:sequence minOccurs="0" maxOccurs="1">
				<xsd:element name="NodeLevel1" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel2" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel3" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel4" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel5" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel6" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel7" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel8" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel9" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel10" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel11" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel12" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel13" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel14" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel15" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="NodeLevel16" type="tns:LANMetricsAtomicType" minOccurs="0" maxOccurs="1"/>
			</xsd:sequence>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="LANMetricsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="LANMetrics" type="tns:LANMetricsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareDeviceTypeType">
    	<xsd:sequence>
			<xsd:element name="SSPEC" type="xsd:int"/>
			<xsd:element name="Name" type="xsd:string"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareDeviceTypeRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="FirmwareDeviceType" type="tns:FirmwareDeviceTypeType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareVersionType">
    	<xsd:sequence>
			<xsd:element name="SSPEC" type="xsd:int"/>
			<xsd:element name="FirmwareDeviceType" type="xsd:string"/>
			<xsd:element name="Version" type="xsd:int"/>
			<xsd:element name="Revision" type="xsd:int"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareDeviceTypeVersionType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:FirmwareVersionType">
    			<xsd:attribute name="deviceCount" type="xsd:int" use="required"/>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareVersionCollectionType">
    	<xsd:sequence>
			<xsd:element name="FirmwareVersion" type="tns:FirmwareVersionType" minOccurs="0" maxOccurs="unbounded"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareDeviceTypeVersionRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="FirmwareDeviceTypeVersion" type="tns:FirmwareDeviceTypeVersionType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareImageDataType">
    	<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="SSPEC" type="xsd:int"/>
			<xsd:element name="Version" type="xsd:int"/>
			<xsd:element name="Revision" type="xsd:int"/>
			<xsd:element name="ImportTime" type="tns:StandardDateTimePlusTimeZoneType"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareImageDataRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="FirmwareImageData" type="tns:FirmwareImageDataType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareDeviceType">
    	<xsd:sequence>
			<xsd:element name="DeviceName" type="xsd:string"/>
			<xsd:element name="DeviceType" type="xsd:string" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="AssociatedMeterName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="FirmwareDeviceType" type="xsd:string"/>
			<xsd:element name="SSPEC" type="xsd:int"/>
			<xsd:element name="FirmwareVersion" type="xsd:int"/>
			<xsd:element name="FirmwareRevision" type="xsd:int"/>
			<xsd:element name="LastUpdateTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="LastConfirmationTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="ConfirmationSource" type="xsd:string" nillable="true"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareDeviceRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="FirmwareDevice" type="tns:FirmwareDeviceType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<xsd:simpleType name="FirmwareUpgradeJobStateType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Download Pending"/>
			<xsd:enumeration value="Partial Download/Active"/>
			<xsd:enumeration value="Active"/>
			<xsd:enumeration value="Cancel Pending"/>
			<xsd:enumeration value="Cancelled"/>
			<xsd:enumeration value="Completed"/>
		</xsd:restriction>
	</xsd:simpleType>
    
    <xsd:complexType name="FirmwareUpgradeJobSummaryType">
    	<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="ImageName" type="xsd:string"/>
			<xsd:element name="FirmwareDeviceType" type="xsd:string"/>
			<xsd:element name="SSPEC" type="xsd:int"/>
			<xsd:element name="FirmwareVersion" type="xsd:int"/>
			<xsd:element name="FirmwareRevision" type="xsd:int"/>
			<xsd:element name="IsCritical" type="xsd:boolean"/>
			<xsd:element name="State" type="tns:FirmwareUpgradeJobStateType"/>
			<xsd:element name="StateUpdateTime" type="tns:StandardDateTimePlusTimeZoneType"/>
			<xsd:element name="CollectorCount" type="xsd:int"/>
			<xsd:element name="TargetedDeviceCount" type="xsd:int"/>
			<xsd:element name="ArmedDeviceCount" type="xsd:int"/>
			<xsd:element name="CompletedDeviceCount" type="xsd:int"/>
			<xsd:element name="FailedDeviceCount" type="xsd:int"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareUpgradeJobSummaryRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="FirmwareUpgradeJobSummary" type="tns:FirmwareUpgradeJobSummaryType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <!--  Type definitions for the 2 new reports: 10/09/09 MAP -->
    
    <xsd:complexType name="FirmwareUpgradeJobHistoryType">
    	<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="CreationTime" type="tns:StandardDateTimePlusTimeZoneType"/>
			<xsd:element name="DeviceType" type="xsd:string"/>
			<xsd:element name="FirmwareVersion" type="xsd:int"/>
			<xsd:element name="FirmwareRevision" type="xsd:int"/>
			<xsd:element name="TargetedDeviceCount" type="xsd:int"/>
			<xsd:element name="State" type="tns:FirmwareUpgradeJobStateType"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareUpgradeJobHistoryRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="FirmwareUpgradeJobHistory" type="tns:FirmwareUpgradeJobHistoryType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

	<xsd:complexType name="HistoricalJobFailuresSummaryType">
    	<xsd:sequence>
			<xsd:element name="JobName" type="xsd:string"/>
			<xsd:element name="GatekeeperName" type="xsd:string"/>
			<xsd:element name="FailureCount" type="xsd:int"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="HistoricalJobFailuresSummaryRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="HistoricalJobFailuresSummary" type="tns:HistoricalJobFailuresSummaryType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    
    <xsd:complexType name="FirmwareUpgradeJobCollectorMetricsType">
    	<xsd:sequence>
			<xsd:element name="CollectorName" type="xsd:string"/>
			<xsd:element name="TargetedDeviceCount" type="xsd:int"/>
			<xsd:element name="ArmedDeviceCount" type="xsd:int"/>
			<xsd:element name="CompletedDeviceCount" type="xsd:int"/>
			<xsd:element name="FailedDeviceCount" type="xsd:int"/>
			<xsd:element name="ProgressStep" type="xsd:string" nillable="true"/>
			<xsd:element name="ProgressStepTimeRemaining" type="tns:DurationType" nillable="true"/>
			<xsd:element name="CurrentDeviceName" type="xsd:string" nillable="true"/>
			<xsd:element name="ProgressStatus" type="xsd:string" nillable="true"/>
			<xsd:element name="StatusUpdateTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="ImagePacketCount" type="xsd:int" nillable="true"/>
			<xsd:element name="ImageBroadcastedPacketCount" type="xsd:int" nillable="true"/>
			<xsd:element name="ImageBroadcastPercentage" type="xsd:float" nillable="true"/>
			<xsd:element name="BroadcastCount" type="xsd:int" nillable="true"/>
			<xsd:element name="MaxBroadcastCount" type="xsd:int" nillable="true"/>
			<xsd:element name="SurveySuccessPercentage" type="xsd:float" nillable="true"/>
			<xsd:element name="OneOnOneCompletionCount" type="xsd:int" nillable="true"/>
			<xsd:element name="OneOnOnePercentage" type="xsd:float" nillable="true"/>
			<xsd:element name="TransferStartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="TransferEndTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="TransferDuration" type="tns:DurationType" nillable="true"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareUpgradeJobCollectorMetricsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="FirmwareUpgradeJobCollectorMetrics" type="tns:FirmwareUpgradeJobCollectorMetricsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareUpgradeJobType">
    	<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="CreationTime" type="tns:StandardDateTimePlusTimeZoneType"/>
			<xsd:element name="FirmwareDeviceType" type="xsd:string"/>
			<xsd:element name="FirmwareVersion" type="xsd:int"/>
			<xsd:element name="FirmwareRevision" type="xsd:int"/>
			<xsd:element name="TargetedDeviceCount" type="xsd:int"/>
			<xsd:element name="State" type="tns:FirmwareUpgradeJobStateType"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="FirmwareUpgradeJobRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="FirmwareUpgradeJob" type="tns:FirmwareUpgradeJobType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="NetworkPingDeviceMetricsType">
    	<xsd:sequence>
			<xsd:element name="DeviceName" type="xsd:string"/>
			<xsd:element name="DeviceType" type="xsd:string"/>
			<xsd:element name="NetworkHopLevel" type="xsd:int"/>
			<xsd:element name="ResponseReceived" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="TotalPingTime" type="tns:DurationType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="InboundLinkDistance" type="tns:DistanceType" nillable="true"/>
			<xsd:element name="InboundLinkRSSI" type="tns:RSSIType" nillable="true"/>
			<xsd:element name="OutboundLinkDistance" type="tns:DistanceType" nillable="true"/>
			<xsd:element name="OutboundLinkRSSI" type="tns:RSSIType" nillable="true"/>
    	</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="NetworkPingDeviceMetricsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="NetworkPingDeviceMetrics" type="tns:NetworkPingDeviceMetricsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<xsd:simpleType name="TierType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="A"/>
			<xsd:enumeration value="B"/>
			<xsd:enumeration value="C"/>
			<xsd:enumeration value="D"/>
		</xsd:restriction>
	</xsd:simpleType>
    
    <xsd:complexType name="CriticalTierOverrideRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="Id" type="xsd:int"/>
					<xsd:element name="TOUScheduleName" type="xsd:string"/>
		    		<xsd:element name="Duration" type="xsd:int"/>
		    		<xsd:element name="StartTime" type="tns:StandardDateTimeType"/>
		    		<xsd:element name="Tier" type="tns:TierType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<xsd:simpleType name="HANDeviceCommunicationTypeType2">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ZigBee"/>
			<xsd:enumeration value="EA 900MHz"/>
		</xsd:restriction>
	</xsd:simpleType>
    
	<xsd:simpleType name="HANDeviceClassType2">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="HVAC or Furnace"/>
			<xsd:enumeration value="Strip Heat"/>
			<xsd:enumeration value="Water Heater"/>
			<xsd:enumeration value="Pool Pump/Spa/Jacuzzi"/>
			<xsd:enumeration value="Smart Appliances"/>
			<xsd:enumeration value="Irrigation Pump"/>
			<xsd:enumeration value="Managed Loads"/>
			<xsd:enumeration value="Simple Loads"/>
			<xsd:enumeration value="Exterior Lighting"/>
			<xsd:enumeration value="Interior Lighting"/>
			<xsd:enumeration value="Electric Vehicle"/>
			<xsd:enumeration value="Generation Systems"/>
		</xsd:restriction>
	</xsd:simpleType>
    
    <xsd:complexType name="HANDeviceRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="RefId" type="xsd:int" nillable="true"/>
					<xsd:element name="Name" type="xsd:string" nillable="true"/>
					<xsd:element name="CommunicationId" type="xsd:string"/>
		    		<xsd:element name="State" type="xsd:string"/>
		    		<xsd:element name="DeviceClasses">
		    			<xsd:complexType>
		    				<xsd:sequence>
		    					<xsd:element name="DeviceClass" type="tns:HANDeviceClassType2" minOccurs="0" maxOccurs="unbounded"/>
		    				</xsd:sequence>
		    			</xsd:complexType>
		    		</xsd:element>
		    		<xsd:element name="CommunicationType" type="tns:HANDeviceCommunicationTypeType2"/>
		    		<xsd:element name="ImportTime" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="UtilityEnrollmentGroup" type="xsd:int" nillable="true"/>
		    		<xsd:element name="MeterName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="Area" type="xsd:int" nillable="true"/>
		    		<xsd:element name="Feeder" type="xsd:int" nillable="true"/>
		    		<xsd:element name="PricingProgram" type="xsd:int" nillable="true"/>
		    		<xsd:element name="ProgramText1" type="xsd:int" nillable="true"/>
		    		<xsd:element name="ProgramText2" type="xsd:int" nillable="true"/>
		    		<xsd:element name="ProgramText3" type="xsd:int" nillable="true"/>
		    		<xsd:element name="ProgramText4" type="xsd:int" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="ThermostatTierConfigurationType">
		<xsd:sequence>
		    <xsd:element name="RefId" type="xsd:int"/>
		    <xsd:element name="AllowCustomerOverride" type="xsd:boolean"/>
		    <xsd:element name="IsCriticalPeakTier" type="xsd:boolean"/>
		    <xsd:element name="IsIncrementingOffset" type="xsd:boolean"/>
		    <xsd:element name="CoolingOffset" type="xsd:float" nillable="true"/>
		    <xsd:element name="HeatingOffset" type="xsd:float" nillable="true"/>
		    <xsd:element name="CoolingSetpoint" type="xsd:float" nillable="true"/>
		    <xsd:element name="HeatingSetpoint" type="xsd:float" nillable="true"/>
		    <xsd:element name="AverageLoadAdjustmentPercentage" type="xsd:float" nillable="true"/>
		    <xsd:element name="DutyCyclePercentage" type="xsd:float" nillable="true"/>
		    <xsd:element name="MessageId" type="xsd:int" nillable="true"/>
			<xsd:element name="Area" type="xsd:int" nillable="true"/>
			<xsd:element name="Feeder" type="xsd:int" nillable="true"/>
			<xsd:element name="DRProgram" type="xsd:int" nillable="true"/>
		</xsd:sequence>
	    <xsd:attribute name="tier" type="tns:TierType" use="required"/>
    </xsd:complexType>
    
    <xsd:complexType name="HANDeviceClassCollectionType">
		<xsd:sequence>
			<xsd:element name="DeviceClass" type="tns:HANDeviceClassType2" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ThermostatConfigurationRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="Name" type="xsd:string"/>
		    		<xsd:element name="CreationTime" type="tns:StandardDateTimePlusTimeZoneType"/>
					<xsd:element name="TargetedDeviceClasses" type="tns:HANDeviceClassCollectionType"/>
					<xsd:element name="TierAConfiguration" type="tns:ThermostatTierConfigurationType" nillable="true"/>
					<xsd:element name="TierBConfiguration" type="tns:ThermostatTierConfigurationType" nillable="true"/>
					<xsd:element name="TierCConfiguration" type="tns:ThermostatTierConfigurationType" nillable="true"/>
					<xsd:element name="TierDConfiguration" type="tns:ThermostatTierConfigurationType" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="LoadControlEventRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="RefId" type="xsd:int"/>
		    		<xsd:element name="Name" type="xsd:string"/>
		    		<xsd:element name="CreateDate" type="tns:StandardDateTimePlusTimeZoneWithMillisType" nillable="true"/>
		    		<xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneWithMillisType" nillable="true"/>
					<xsd:element name="Duration" type="xsd:int"/>
					<xsd:element name="TargetedDeviceClasses" type="tns:HANDeviceClassCollectionType"/>
					<xsd:element name="CoolingOffset" type="xsd:float" nillable="true"/>
					<xsd:element name="HeatingOffset" type="xsd:float" nillable="true"/>
					<xsd:element name="CoolingSetpoint" type="xsd:float" nillable="true"/>
					<xsd:element name="HeatingSetpoint" type="xsd:float" nillable="true"/>
					<xsd:element name="LoadAdjust" type="xsd:float" nillable="true"/>
					<xsd:element name="DutyCycle" type="xsd:float" nillable="true"/>
					<xsd:element name="RandomizeStart" type="xsd:float" nillable="true"/>
					<xsd:element name="RandomizeEnd" type="xsd:float" nillable="true"/>
					<xsd:element name="SimpleMessageId" type="xsd:int" nillable="true"/>
					<xsd:element name="UtilityEnrollmentGroup" type="xsd:int"/>
					<xsd:element name="Broadcast" type="xsd:boolean"/>
					<xsd:element name="Criticality" type="xsd:string" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="MeterName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
   	
    <xsd:complexType name="LoadControlEventActivityRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="RefId" type="xsd:int"/>
		    		<xsd:element name="LoadControlEventName" type="xsd:string"/>
		    		<xsd:element name="MeterName" type="xsd:string"/>
		    		<xsd:element name="DeviceName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="DownloadTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="ESPReceivedTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DeviceReceivedTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="OverrideTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="ThermostatConfigurationMeterAssociationType">
		<xsd:sequence>
			<xsd:element name="MeterName" type="xsd:string"/>
			<xsd:element name="AssignmentTime" type="tns:StandardDateTimePlusTimeZoneType"/>
		    <xsd:element name="DownloadTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ThermostatConfigurationMeterAssociationsType">
		<xsd:sequence>
			<xsd:element name="MeterAssociation" type="tns:ThermostatConfigurationMeterAssociationType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="associationCount" type="xsd:int"/>
    </xsd:complexType>
    
    <xsd:complexType name="ThermostatConfigurationStatusRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="Name" type="xsd:string"/>
		    		<xsd:element name="CreationTime" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="MeterAssociations" type="tns:ThermostatConfigurationMeterAssociationsType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
   	
    <xsd:complexType name="HANEventRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="RefId" type="xsd:int"/>
					<xsd:element name="EventType" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="EventSubtype" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="EventLoggedTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="EspReceived" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="MeterName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="AccountId" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DeviceName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DeviceCommId" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="SchedStartTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DeviceStartTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DeviceRecvdTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="UserInputTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="TerminationTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="TerminationReason" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
   	
    <xsd:complexType name="HANDeviceCommissionActivityRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="RefId" type="xsd:int"/>
					<xsd:element name="DeviceName" type="xsd:string"/>
		    		<xsd:element name="MeterName" type="xsd:string"/>
		    		<xsd:element name="AccountId" type="xsd:string" nillable="true"/>
		    		<xsd:element name="Activity" type="xsd:string"/>
		    		<xsd:element name="SentToESPTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="ESPReceivedTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="DeviceReceivedTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="DeviceTerminatedReason" type="xsd:string" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
   	
    <xsd:complexType name="MessageRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="RefId" type="xsd:int"/>
		    		<xsd:element name="MessageName" type="xsd:string"/>
		    		<xsd:element name="Text" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="CreationTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="Duration" type="xsd:int" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="Criticality" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="ConfirmationRequired" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="UseBroadcast" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="Area" type="xsd:int" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="Feeder" type="xsd:int" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DRProgram" type="xsd:int" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DeliveredTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DownloadedTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DeviceName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="MeterName" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="ESPReceivedTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DeviceReceivedTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DeviceTerminatedTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="DeviceTerminatedReason" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="CancellationRequestTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="CancellationIssueTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="CancellationStatus" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="ExpirationTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="PlannedStartTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>		    		
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
   	
    <xsd:complexType name="TOUPricingRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="RefId" type="xsd:int"/>
					<xsd:element name="TOUScheduleName" type="xsd:string"/>
		    		<xsd:element name="SeasonName" type="xsd:string"/>
		    		<xsd:element name="FlatMonthlyCharge" type="xsd:float" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="BasekWhBreakpoint" type="xsd:float" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="BasePriorToBreakpoint" type="xsd:float" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="BaseAfterBreakpoint" type="xsd:float" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="FuelFactor" type="xsd:float" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="TierAPricePerkWh" type="xsd:float" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="TierBPricePerkWh" type="xsd:float" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="TierCPricePerkWh" type="xsd:float" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="TierDPricePerkWh" type="xsd:float" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="NumMetersOnTOUSchedule" type="xsd:int" minOccurs="0" maxOccurs="1"/>
		    		<xsd:element name="NumMetersPendingDownload" type="xsd:int" minOccurs="0" maxOccurs="1"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="PerfOverTimeRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Performance" type="xsd:float"/>
		    		<xsd:element name="NumRuns" type="xsd:int"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>


    <xsd:complexType name="GKPerfGKsOverTimeRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
						<xsd:element name="GatekeeperName" type="xsd:string"/>
		    		<xsd:element name="GatekeeperIrn" type="xsd:int"/>
		    		<xsd:element name="Performance" type="xsd:float"/>
		    		<xsd:element name="AvgGatekeeperReadDuration" type="xsd:float"/>
		    		<xsd:element name="AvgEAMSReadDuration" type="xsd:float"/>
		    		<xsd:element name="AvgMeterCount" type="xsd:float"/>
		    		<xsd:element name="AlarmCount" type="xsd:int"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="GKPerfOneGKTimesRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
						<xsd:element name="SchStartTime" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="Performance" type="xsd:float"/>
		    		<xsd:element name="GatekeeperReadDuration" type="xsd:float"/>
		    		<xsd:element name="EAMSReadDuration" type="xsd:float"/>
		    		<xsd:element name="MeterCount" type="xsd:float"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="GKPerfOneGKVoltagesRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
						<xsd:element name="MeterName" type="xsd:string"/>
		    		<xsd:element name="Timestamp" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="PhaseAVoltage" type="xsd:float"/>
		    		<xsd:element name="PhaseBVoltage" type="xsd:float"/>
		    		<xsd:element name="PhaseCVoltage" type="xsd:float"/>
		    		<xsd:element name="NodeLevel" type="xsd:int"/>
		    		<xsd:element name="Status" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
   	
    <xsd:complexType name="RunPerfRunsOverTimeRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="SchStartTime" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="Performance" type="xsd:float"/>
		    		<xsd:element name="RunTime" type="xsd:float"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="RunPerfSingleRunGKsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="GatekeeperName" type="xsd:string"/>
		    		<xsd:element name="GatekeeperIrn" type="xsd:int"/>
		    		<xsd:element name="GatekeeperPerformance" type="xsd:float"/>
		    		<xsd:element name="GatekeeperReadDuration" type="xsd:float"/>
		    		<xsd:element name="EAMSReadDuration" type="xsd:float"/>
		    		<xsd:element name="MeterCount" type="xsd:int"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="RunPerfOneRunVoltagesRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
						<xsd:element name="MeterName" type="xsd:string"/>
		    		<xsd:element name="Timestamp" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="PhaseAVoltage" type="xsd:float"/>
		    		<xsd:element name="PhaseBVoltage" type="xsd:float"/>
		    		<xsd:element name="PhaseCVoltage" type="xsd:float"/>
		    		<xsd:element name="NodeLevel" type="xsd:int"/>
		    		<xsd:element name="Status" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="OneRunVoltagesRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
						<xsd:element name="MeterName" type="xsd:string"/>
						<xsd:element name="SDPID" type="xsd:string" nillable="true"/>
						<xsd:element name="Gatekeeper" type="xsd:string" nillable="true"/>
		    		<xsd:element name="Timestamp" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="PhaseAVoltage" type="xsd:float"/>
		    		<xsd:element name="PhaseBVoltage" type="xsd:float"/>
		    		<xsd:element name="PhaseCVoltage" type="xsd:float"/>
		    		<xsd:element name="NodeLevel" type="xsd:int"/>
		    		<xsd:element name="Status" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
   	
    <xsd:complexType name="MeterPerfMetersOverTimeRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="MeterName" type="xsd:string"/>
		    		<xsd:element name="MeterIrn" type="xsd:int"/>
		    		<xsd:element name="Performance" type="xsd:float"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="MeterPerfOneMeterVoltagesRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="GatekeeperName" type="xsd:string"/>
		    		<xsd:element name="Timestamp" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="PhaseAVoltage" type="xsd:float"/>
		    		<xsd:element name="PhaseBVoltage" type="xsd:float"/>
		    		<xsd:element name="PhaseCVoltage" type="xsd:float"/>
		    		<xsd:element name="NodeLevel" type="xsd:int"/>
		    		<xsd:element name="Status" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
   	
    <xsd:complexType name="LevelPerfLevelsOverTimeRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="NodeLevel" type="xsd:int"/>
		    		<xsd:element name="Performance" type="xsd:float"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="PerGatekeeperCountRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Count" type="xsd:int"/>
		    		<xsd:element name="GatekeeperName" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
   	
    <xsd:complexType name="PerElementCountRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Count" type="xsd:int"/>
		    		<xsd:element name="Name" type="xsd:string"/>
		    		<xsd:element name="Latitude" type="xsd:string"/>
		    		<xsd:element name="Longitude" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
   	
    <xsd:simpleType name="MultispeakVerbType">
    	<xsd:restriction base="xsd:string">
    		<xsd:enumeration value="New"/>
    		<xsd:enumeration value="Change"/>
    		<xsd:enumeration value="Delete"/>
    		<xsd:enumeration value="Replace"/>
    		<xsd:enumeration value="Link"/>
    		<xsd:enumeration value="Unlink"/>
    	</xsd:restriction>
    </xsd:simpleType>
    
    <xsd:complexType name="MultispeakObjectRecordType" abstract="true">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:attribute name="objectID" type="xsd:string" use="required"/>
        		<xsd:attribute name="verb" type="tns:MultispeakVerbType" default="Change" use="optional"/>
        		<xsd:attribute name="errorString" type="xsd:string" use="optional"/>
        		<xsd:attribute name="replaceID" type="xsd:string" use="optional"/>
        		<xsd:attribute name="utility" type="xsd:string" use="optional"/>
        		<xsd:attribute name="absoluteRowNumber" type="xsd:int" use="optional"/>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="MultispeakDeviceRecordType" abstract="true">
    	<xsd:complexContent>
    		<xsd:extension base="tns:MultispeakObjectRecordType">
    			<xsd:sequence>
		    		<xsd:element name="DeviceClass" type="xsd:string"/>
		    		<xsd:element name="FacilityId" type="xsd:string"/>
		    		<xsd:element name="InstallationTime" type="tns:StandardDateTimePlusTimeZoneType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="MultispeakOutageDetectionDeviceRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:MultispeakObjectRecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Name" type="xsd:string"/>
		    		<xsd:element name="SerialNumber" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="MultispeakMeterRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:MultispeakDeviceRecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Name" type="xsd:string"/>
		    		<xsd:element name="SerialNumber" type="xsd:string"/>
		    		<xsd:element name="MeterType" type="xsd:string"/>
		    		<xsd:element name="Vendor" type="xsd:string"/>
		    		<xsd:element name="AccountId" type="xsd:string"/>
		    		<xsd:element name="SDPId" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <!-- Wan Seed List Data Contract -->
    <xsd:complexType name="WanSeedRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="WanSeedId" type="xsd:int"/>
		    		<xsd:element name="UtilityId" type="xsd:int"/>
		    		<xsd:element name="UtilityName" type="xsd:string"/>		    		
		    		<xsd:element name="CreationDate" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="User" type="xsd:string"/>							    		
					<xsd:element name="Comments" type="xsd:string"/>							    		
					<xsd:element name="Active" type="xsd:boolean"/>
					<xsd:element name="GateKeeperCount" type="xsd:int"/>
					<xsd:element name="EaLanUtilityId" type="xsd:int"/>					
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <!-- Pending Wan Seed Changes Data Contract -->
    <xsd:complexType name="WanSeedPendingRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="UtilityId" type="xsd:int"/>
					<xsd:element name="ActiveId" type="xsd:int"/>							    		
					<xsd:element name="PendingId" type="xsd:int"/>
					<xsd:element name="Irn" type="xsd:int" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="Name" type="xsd:string"/>
					<xsd:element name="CommTypeName" type="xsd:string"/>
		    		<xsd:element name="UtilityName" type="xsd:string"/>		    		
					<xsd:element name="EaLanUtilityId" type="xsd:int"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>    

    <!-- Access Control List Summary Data Contract -->
    <xsd:complexType name="AccessControlListSummaryRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="AclId" type="xsd:int"/>
					<xsd:element name="AclName" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <!-- Access Control List Details Data Contract -->
    <xsd:complexType name="AccessControlListDetailRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:AccessControlListSummaryRecordType">
		    	<xsd:sequence>
		    		<!-- id, name ip_address[1-8], ip_mask[1-8] -->
					<xsd:element name="IsDefault" type="xsd:boolean" nillable="true"/>
					<xsd:element name="IpAddress1" type="xsd:string" nillable="true"/>
					<xsd:element name="IpAddress2" type="xsd:string" nillable="true"/>
					<xsd:element name="IpAddress3" type="xsd:string" nillable="true"/>
					<xsd:element name="IpAddress4" type="xsd:string" nillable="true"/>
					<xsd:element name="IpAddress5" type="xsd:string" nillable="true"/>
					<xsd:element name="IpAddress6" type="xsd:string" nillable="true"/>
					<xsd:element name="IpAddress7" type="xsd:string" nillable="true"/>
					<xsd:element name="IpAddress8" type="xsd:string" nillable="true"/>
					<xsd:element name="IpSubMask1" type="xsd:string" nillable="true"/>
					<xsd:element name="IpSubMask2" type="xsd:string" nillable="true"/>
					<xsd:element name="IpSubMask3" type="xsd:string" nillable="true"/>
					<xsd:element name="IpSubMask4" type="xsd:string" nillable="true"/>
					<xsd:element name="IpSubMask5" type="xsd:string" nillable="true"/>
					<xsd:element name="IpSubMask6" type="xsd:string" nillable="true"/>
					<xsd:element name="IpSubMask7" type="xsd:string" nillable="true"/>
					<xsd:element name="IpSubMask8" type="xsd:string" nillable="true"/>
					<xsd:element name="createdDate" type="tns:StandardDateTimePlusTimeZoneType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <!-- Pending ACL Downloads Data Contract -->
    <xsd:complexType name="PendingAclDownloadsRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:AccessControlListSummaryRecordType"> 		
		    	<xsd:sequence>
		    		<xsd:element name="GateKeeperName" type="xsd:string"/>
		    		<xsd:element name="AssignedDate" type="tns:StandardDateTimePlusTimeZoneType"/>		    		    	
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <!-- Utility Data Contract (models utility_lookup table) -->
    <xsd:complexType name="UtilityLookupRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="UtilityId" type="xsd:int"/>
					<xsd:element name="UtilityName" type="xsd:string"/>
					<xsd:element name="TimeMod" type="tns:StandardDateTimePlusTimeZoneType"/>
		    		<xsd:element name="EaLanUtilityId" type="xsd:int"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="GatekeeperACLInformationRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="ACLName" type="xsd:string"/>
					<xsd:element name="GatekeeperName" type="xsd:string"/>
					<xsd:element name="AssignmentTime" type="tns:StandardDateTimePlusTimeZoneType"/>
					<xsd:element name="DownloadTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="GatekeeperSummaryRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="Irn" type="xsd:int"/>
					<xsd:element name="GatekeeperName" type="xsd:string"/>
		    		<xsd:element name="EaLanUtilityId" type="xsd:int"/>
					<xsd:element name="UtilityName" type="xsd:string"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="GatekeeperWANSecurityRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="GatekeeperName" type="xsd:string"/>
					<xsd:element name="SecurityType" type="xsd:string" nillable="true"/>
					<xsd:element name="WANSeedId" type="xsd:string" nillable="true"/>
					<xsd:element name="WANSeedDownloadTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
		    		<xsd:element name="OnLatestActiveKey" type="xsd:boolean" nillable="true"/>
		    		<xsd:element name="ACLName" type="xsd:string" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

	<xsd:complexType name="DeviceLANSecurityRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="DeviceName" type="xsd:string"/>
		    		<xsd:element name="UtilityName" type="xsd:string"/>
		    		<xsd:element name="EaLanUtilityId" type="xsd:int"/>
					<xsd:element name="EncryptionEnabled" type="xsd:boolean"/>
					<xsd:element name="EncryptionEnabledPending" type="xsd:boolean" nillable="true"/>
					<xsd:element name="Pending" type="xsd:boolean"/>
					<xsd:element name="Active" type="xsd:boolean"/>
					<xsd:element name="ActiveLanSeedId" type="xsd:int"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <!-- LAN Seed List Data Contract -->
    <xsd:complexType name="LanSeedRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="LanSeedIrn" type="xsd:int"/>
		    		<xsd:element name="LanSeedId" type="xsd:int"/>
		    		<xsd:element name="UtilityId" type="xsd:int"/>
		    		<xsd:element name="UtilityName" type="xsd:string"/>		    		
		    		<xsd:element name="CreationDate" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="User" type="xsd:string"/>							    		
					<xsd:element name="Comments" type="xsd:string"/>							    		
					<xsd:element name="Active" type="xsd:boolean"/>
					<xsd:element name="GateKeeperCount" type="xsd:int"/>
					<xsd:element name="EaLanUtilityId" type="xsd:int"/>					
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="GatekeeperLanStatusRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="GatekeeperName" type="xsd:string"/>
		    		<xsd:element name="UtilityId" type="xsd:int"/>
		    		<xsd:element name="UtilityName" type="xsd:string"/>
		    		<xsd:element name="EaLanUtilityId" type="xsd:int"/>
					<xsd:element name="EncryptionEnabled" type="xsd:boolean"/>
					<xsd:element name="EncryptionEnabledPending" type="xsd:boolean" nillable="true"/>		    		    		
		    		<xsd:element name="ActiveLanSeedId" type="xsd:int"/>					    								    		
					<xsd:element name="ActiveCount" type="xsd:int"/>
					<xsd:element name="PendingCount" type="xsd:int"/>
					<xsd:element name="StrandedCount" type="xsd:int"/>					
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="NodeLanStatusRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="NodeName" type="xsd:string"/>
		    		<xsd:element name="GatekeeperName" type="xsd:string"/>		    							    								    	
					<xsd:element name="Active" type="xsd:boolean"/>
					<xsd:element name="Pending" type="xsd:boolean"/>
					<xsd:element name="Stranded" type="xsd:boolean"/>					
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    
	<xsd:complexType name="GatekeeperCommunicationRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="GatekeeperName" type="xsd:string" nillable="true"/>
					<xsd:element name="SerialNumber" type="xsd:string" nillable="true"/>
					<xsd:element name="Lan2Enabled" type="xsd:boolean" nillable="true"/>
					<xsd:element name="Lan2ChangePending" type="xsd:boolean" nillable="true"/>
					<xsd:element name="FirmwareVersions" type="tns:FirmwareVersionCollectionType"/>
					<xsd:element name="PrimaryCommunicationAddress" type="xsd:string" nillable="true"/>
					<xsd:element name="SecondaryCommunicationAddress" type="xsd:string" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="WanInterfaceCardSummaryRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="WicName" type="xsd:string"/>					
					<xsd:element name="WicId" type="xsd:int"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<xsd:complexType name="DeviceLanProtocolRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="DeviceName" type="xsd:string" nillable="true"/>
					<xsd:element name="SerialNumber" type="xsd:string" nillable="true"/>
					<xsd:element name="DeviceType" type="xsd:string" nillable="true"/>
					<xsd:element name="Lan2Enabled" type="xsd:boolean" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

	<xsd:complexType name="MeterDemandResponseGroupRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		   		<xsd:element name="MeterName" type="xsd:string"/>
					<xsd:element name="MeterStyleNumber" type="xsd:string"/>
					<xsd:element name="Area" type="xsd:int" nillable="true"/>
					<xsd:element name="Feeder" type="xsd:int" nillable="true"/>
					<xsd:element name="DemandResponsePricingProgram" type="xsd:int" nillable="true"/>
					<xsd:element name="DemandResponseMessageTextGroup_1" type="xsd:int" nillable="true"/>
					<xsd:element name="DemandResponseMessageTextGroup_2" type="xsd:int" nillable="true"/>
					<xsd:element name="DemandResponseMessageTextGroup_3" type="xsd:int" nillable="true"/>
					<xsd:element name="DemandResponseMessageTextGroup_4" type="xsd:int" nillable="true"/>
					<xsd:element name="ModifiedAt" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="SynchronizedAt" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="Timezone" type="xsd:int" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<xsd:complexType name="DRTierInformationType">
		<xsd:sequence>
		    <xsd:element name="RefId" type="xsd:int"/>
		    <xsd:element name="TOUTierName" type="xsd:string"/>
			<xsd:element name="DRTierName" type="xsd:int"/>
			<xsd:element name="TierLabel" type="xsd:string"/>
			<xsd:element name="UOMCode" type="xsd:int"/>
			<xsd:element name="CurrencyCode" type="xsd:int"/>
			<xsd:element name="Price" type="xsd:decimal"/>
			<xsd:element name="PriceRatio" type="xsd:int" nillable="true"/>
			<xsd:element name="GenerationPrice" type="xsd:decimal" nillable="true"/>
			<xsd:element name="GenerationPriceRatio" type="xsd:int" nillable="true"/>
			<xsd:element name="AlternateCostDelivered" type="xsd:decimal" nillable="true"/>
		</xsd:sequence>
    </xsd:complexType>
    
	<xsd:complexType name="DRPricingObjectType">
		<xsd:sequence>
		    <xsd:element name="RefId" type="xsd:int"/>
		    <xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="CreationTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="Duration" type="tns:DurationType"/>
			<xsd:element name="ProviderId" type="xsd:long"/>
			<xsd:element name="UseBroadcast" type="xsd:boolean"/>
		    <xsd:element name="Area" type="xsd:int"/>
		    <xsd:element name="Feeder" type="xsd:int"/>
		    <xsd:element name="DRProgram" type="xsd:int"/>
			<xsd:element name="TierInformationList">
		    	<xsd:complexType>
		    		<xsd:sequence>
		    			<xsd:element name="TierInformation" type="tns:DRTierInformationType" minOccurs="0" maxOccurs="4"/>		    					
		    		</xsd:sequence>
		    	</xsd:complexType>						
			</xsd:element>
		</xsd:sequence>
    </xsd:complexType>
    
	<!-- DR Pricing Object Record Type -->
	<xsd:complexType name="DRPricingObjectRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="DRPricingObject" type="tns:DRPricingObjectType"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
    <!-- DR Pricing Report Record Type -->
	<xsd:complexType name="DRPricingRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="RefId" type="xsd:int"/>
		    		<xsd:element name="PriceName" type="xsd:string"/>
					<xsd:element name="MeterName" type="xsd:string"/>
					<xsd:element name="CreationDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="DownloadedTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="Duration" type="xsd:int"/>
					<xsd:element name="ConfirmTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="IsConfirmed" type="xsd:boolean"/>
					<xsd:element name="TierMappings">
		    			<xsd:complexType>
		    				<xsd:sequence>
		    					<xsd:element name="TierMapping" type="tns:DRTierMappingType" minOccurs="0" maxOccurs="6"/>		    					
		    				</xsd:sequence>
		    			</xsd:complexType>						
					</xsd:element>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<!--  DR Tier Mapping -->
	<xsd:complexType name="DRTierMappingType">
		<xsd:sequence>
		    <xsd:element name="RefId" type="xsd:int"/>
		    <xsd:element name="TierName" type="xsd:string"/>
			<xsd:element name="DRTierName" type="xsd:int"/>
			<xsd:element name="TierLabel" type="xsd:string"/>
			<xsd:element name="ProviderId" type="xsd:long"/>
			<xsd:element name="Price" type="xsd:decimal"/>
			<xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="DownloadedTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="ConfirmTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="PriceRatio" type="xsd:int" nillable="true"/>
			<xsd:element name="GenerationPrice" type="xsd:decimal" nillable="true"/>
			<xsd:element name="GenerationRatio" type="xsd:int" nillable="true"/>
			<xsd:element name="AlternateCostDelivered" type="xsd:decimal" nillable="true"/>
		 </xsd:sequence>
    </xsd:complexType>
    
	<!--  WAN Seeds -->
	<xsd:complexType name="WICAuthInfoType">
    <xsd:complexContent>
    <xsd:extension base="tns:RecordType">
		<xsd:sequence>
		  <xsd:element name="Irn" type="xsd:int"/>
		  <xsd:element name="GatekeeperName" type="xsd:string"/>
		  <xsd:element name="SerialNumber" type="xsd:string"/>
			<xsd:element name="AccountId" type="xsd:string" nillable="true"/>
			<xsd:element name="AccountName" type="xsd:string" nillable="true"/>
			<xsd:element name="CommunicationParameter" type="xsd:string" nillable="true"/>
			<xsd:element name="DeviceType" type="xsd:string"/>
			<xsd:element name="CommunicationModule" type="xsd:string"/>
			<xsd:element name="IsGatekeeper" type="xsd:string"/>
			<xsd:element name="UnrestrictedPassword" type="xsd:string"/>
			<xsd:element name="BillingPassword" type="xsd:string" nillable="true"/>
			<xsd:element name="WanSeedId" type="xsd:int"/>
			<xsd:element name="WanSeed" type="xsd:string" nillable="true"/>
			<xsd:element name="EaLanUtilityId" type="xsd:int" nillable="true"/>
			<xsd:element name="AuthMode" type="xsd:string" nillable="true"/>
			<xsd:element name="ManufacturerSerialNumber" type="xsd:string" nillable="true"/>
			<xsd:element name="ApTitle" type="xsd:string" nillable="true"/>
		 </xsd:sequence>
	   </xsd:extension>
	   </xsd:complexContent>
    </xsd:complexType>

	<xsd:complexType name="FWDeviceInfoType">
    <xsd:complexContent>
    <xsd:extension base="tns:RecordType">
		<xsd:sequence>
		  <xsd:element name="Irn" type="xsd:int"/>
		  <xsd:element name="Name" type="xsd:string"/>
		  <xsd:element name="SerialNumber" type="xsd:string"/>
			<xsd:element name="AccountId" type="xsd:string" nillable="true"/>
			<xsd:element name="AccountName" type="xsd:string" nillable="true"/>
			<xsd:element name="CommunicationParameter" type="xsd:string"/>
			<xsd:element name="DeviceType" type="xsd:string"/>
			<xsd:element name="CommunicationModule" type="xsd:string"/>
			<xsd:element name="IsGatekeeper" type="xsd:string"/>
			<xsd:element name="FwInfoUpdated" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="FwInfoConfirmed" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
			<xsd:element name="ConfirmationSource" type="xsd:string" nillable="true"/>
			<xsd:element name="FwVersion" type="xsd:int" nillable="true"/>
			<xsd:element name="FwRevision" type="xsd:int" nillable="true"/>
			<xsd:element name="FwSspec" type="xsd:int" nillable="true"/>
			<xsd:element name="FwType" type="xsd:string" nillable="true"/>
		 </xsd:sequence>
	   </xsd:extension>
	   </xsd:complexContent>
    </xsd:complexType>
    
	<!--  LAN Seeds -->
	<xsd:complexType name="LANAuthInfoType">
    <xsd:complexContent>
    <xsd:extension base="tns:RecordType">
		<xsd:sequence>
			<xsd:element name="UtilityName" type="xsd:string" nillable="true"/>
			<xsd:element name="UtilityId" type="xsd:string" nillable="true"/>
			<xsd:element name="LanSeedId" type="xsd:int"/>
			<xsd:element name="LanSeed" type="xsd:string"/>
			<xsd:element name="EaLanUtilityId" type="xsd:int" nillable="true"/>
			<xsd:element name="CreatedDate" type="tns:StandardDateTimePlusTimeZoneType"/>
			<xsd:element name="CreatedBy" type="xsd:string" nillable="true"/>
			<xsd:element name="CreatedByComments" type="xsd:string" nillable="true"/>
		 </xsd:sequence>
	   </xsd:extension>
	   </xsd:complexContent>
    </xsd:complexType>

	<!--  Meter Info -->
	<xsd:complexType name="MeterInfoType">
    <xsd:complexContent>
    <xsd:extension base="tns:RecordType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="Irn" type="xsd:int"/>
			<xsd:element name="SerialNumber" type="xsd:string"/>
			<xsd:element name="CommAddress" type="xsd:string"/>
			<xsd:element name="MeterStyle" type="xsd:string"/>
			<xsd:element name="MediaType" type="xsd:string"/>
			<xsd:element name="AccountId" type="xsd:string" nillable="true"/>
			<xsd:element name="AccountName" type="xsd:string" nillable="true"/>
			<xsd:element name="Description" type="xsd:string" nillable="true"/>
			<xsd:element name="SdpId" type="xsd:string" nillable="true"/>
			<xsd:element name="InstallTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="RemovalTime" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="Location" type="xsd:string" nillable="true"/>
			<xsd:element name="TimezoneIndex" type="xsd:int"/>
			<xsd:element name="ObservesDST" type="xsd:boolean"/>
			<xsd:element name="Latitude" type="xsd:string" nillable="true"/>
			<xsd:element name="Longitude" type="xsd:string" nillable="true"/>
		 </xsd:sequence>
	   </xsd:extension>
	   </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="EventCountRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="EventCategory" type="xsd:string"/>
					<xsd:element name="EventCount" type="xsd:int"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>
    
	<xsd:complexType name="SchedulePerformanceRecordType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
					<xsd:element name="AuditLogId" type="xsd:int" nillable="true"/>
					<xsd:element name="AuditLogParentId" type="xsd:int" nillable="true"/>
					<xsd:element name="AuditDescription" type="xsd:string" nillable="true"/>
					<xsd:element name="AuditLogObjId" type="xsd:int" nillable="true"/>
					<xsd:element name="StartDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="ScheduleId" type="xsd:int" nillable="true"/>
					<xsd:element name="ScheduleName" type="xsd:string" nillable="true"/>
					<xsd:element name="ScheduleType" type="xsd:int" nillable="true"/>
					<xsd:element name="Description" type="xsd:string" nillable="true"/>
					<xsd:element name="Timezone" type="xsd:int" nillable="true"/>
					<xsd:element name="IsBilling" type="xsd:string" nillable="true"/>
					<xsd:element name="IsDl" type="xsd:int" nillable="true"/>
					<xsd:element name="Tolerance" type="xsd:int" nillable="true"/>
					<xsd:element name="DeliverFrom" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="DestDir" type="xsd:string" nillable="true"/>
					<xsd:element name="Runcount" type="xsd:int" nillable="true"/>
					<xsd:element name="LastStart" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="LastStop" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="NextStart" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="IsVm" type="xsd:int" nillable="true"/>
					<xsd:element name="ScheduleKind" type="xsd:int" nillable="true"/>
					<xsd:element name="NoMeters" type="xsd:int" nillable="true"/>
					<xsd:element name="ExpReads" type="xsd:int" nillable="true"/>
					<xsd:element name="ActualReads" type="xsd:int" nillable="true"/>
					<xsd:element name="NoFailed" type="xsd:int" nillable="true"/>
					<xsd:element name="Percent" type="xsd:int" nillable="true"/>
					<xsd:element name="Errors" type="xsd:int" nillable="true"/>
					<xsd:element name="Tampers" type="xsd:int" nillable="true"/>
					<xsd:element name="StaleReads" type="xsd:int" nillable="true"/>
					<xsd:element name="Purpose" type="xsd:string" nillable="true"/>
					<xsd:element name="ExecutionTime" type="xsd:int" nillable="true"/>
					<xsd:element name="FileName" type="xsd:string" nillable="true"/>
					<xsd:element name="ExecExecutionType" type="xsd:string" nillable="true"/>
					<xsd:element name="ExecTotalMeters" type="xsd:int" nillable="true"/>
					<xsd:element name="ExecCurrentMeters" type="xsd:int" nillable="true"/>
					<xsd:element name="ExecExpReads" type="xsd:int" nillable="true"/>
					<xsd:element name="ExecActualReads" type="xsd:int" nillable="true"/>
					<xsd:element name="ExecNoFailed" type="xsd:int" nillable="true"/>
					<xsd:element name="ExecCumreads" type="xsd:int" nillable="true"/>
					<xsd:element name="ExecPercent" type="xsd:float" nillable="true"/>
					<xsd:element name="ExecErrors" type="xsd:int" nillable="true"/>
					<xsd:element name="ExecTampers" type="xsd:int" nillable="true"/>
					<xsd:element name="ExecStaleReads" type="xsd:int" nillable="true"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

<xsd:complexType name="DisconnectedMeterType">
	<xsd:complexContent>
	<xsd:extension base="tns:RecordType">
		<xsd:sequence>
			<xsd:element name="Irn" type="xsd:int"/> 
			<xsd:element name="Name" type="xsd:string"/> 
			<xsd:element name="Serialno" type="xsd:string"/> 
			<xsd:element name="AccountId" type="xsd:string" minOccurs="0"/> 
			<xsd:element name="AccountName" type="xsd:string" minOccurs="0"/> 
			<xsd:element name="Description" type="xsd:string" minOccurs="0"/> 
			<xsd:element name="SdpId" type="xsd:string" minOccurs="0"/> 
			<xsd:element name="SiteLocation" type="xsd:string" minOccurs="0"/> 
			<xsd:element name="InstallDate" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0"/> 
			<xsd:element name="RemovalDate" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0"/> 
			<xsd:element name="LastServiceDisconnect" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0"/> 
			<xsd:element name="LastServiceReconnect" type="tns:StandardDateTimePlusTimeZoneType" minOccurs="0"/> 
			<xsd:element name="Timezoneindex" type="xsd:int" minOccurs="0"/> 
	  </xsd:sequence>
	</xsd:extension>
	</xsd:complexContent>
</xsd:complexType>
	
	<xsd:complexType name="ListVoltageProfileTypeRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="ProfileTypeName" type="xsd:string"/>
					<xsd:element name="NominalVoltage" type="xsd:int" nillable="true"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="ListVoltageProfileRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="ProfileName" type="xsd:string"/>
					<xsd:element name="Created" type="tns:StandardDateTimePlusTimeZoneType"/> 
					<xsd:element name="Author" type="xsd:string" nillable="true"/> 
					<xsd:element name="Description" type="xsd:string" nillable="true"/> 
					<xsd:element name="ProfileTypeName" type="xsd:string"/> 
					<xsd:element name="ImportDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/> 
					<xsd:element name="MinThreshold" type="xsd:float" nillable="true"/>
					<xsd:element name="MaxThreshold" type="xsd:float" nillable="true"/> 
					<xsd:element name="MinDuration" type="xsd:int" nillable="true"/> 
					<xsd:element name="MaxDuration" type="xsd:int" nillable="true"/>
					<xsd:element name="HasAssignments" type="xsd:boolean"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="ListSupportedProfileTypeRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="ProfileTypeName" type="xsd:string"/>
					<xsd:element name="NominalVoltage" type="xsd:int" nillable="true"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="ConfigProfileRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="AssignCount" type="xsd:int"/>
					<xsd:element name="Author" type="xsd:string" nillable="true"/>
					<xsd:element name="Created" type="tns:StandardDateTimePlusTimeZoneType"/>
					<xsd:element name="Description" type="xsd:string" nillable="true"/>
					<xsd:element name="ImportDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="IsDefault" type="xsd:boolean"/> 
					<xsd:element name="ProfileName" type="xsd:string"/> 
					<xsd:element name="ProfileTypeName" type="xsd:string"/> 
					<xsd:element name="Status" type="xsd:string" minOccurs="0" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="VoltageMinMaxConfigProfileRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:ConfigProfileRecordType">
				<xsd:sequence>
					<xsd:element name="MinThreshold" type="xsd:float" nillable="true"/>
					<xsd:element name="MaxThreshold" type="xsd:float" nillable="true"/> 
					<xsd:element name="MinDuration" type="xsd:int" nillable="true"/> 
					<xsd:element name="MaxDuration" type="xsd:int" nillable="true"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="DisplayRex1ConfigProfileRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:ConfigProfileRecordType">
				<xsd:sequence>
					<xsd:element name="HoldTime" type="xsd:int"/>
					<xsd:element name="DisplayLcdTest" type="xsd:boolean"/>
					<xsd:element name="DisplayError" type="xsd:boolean"/>
					<xsd:element name="DisplayStatus" type="xsd:boolean"/>
					<xsd:element name="DisplayTimeAndTier" type="xsd:boolean"/>
					<xsd:element name="DisplayFirstEnergy" type="xsd:boolean"/>
					<xsd:element name="DisplaySecondEnergy" type="xsd:boolean"/>
					<xsd:element name="DisplayTierA" type="xsd:boolean"/>
					<xsd:element name="DisplayTierB" type="xsd:boolean"/>
					<xsd:element name="DisplayTierC" type="xsd:boolean"/>
					<xsd:element name="DisplayTierD" type="xsd:boolean"/>
					<xsd:element name="DisplayDemand1" type="xsd:boolean"/>
					<xsd:element name="DisplayDemand2" type="xsd:boolean"/>
					<xsd:element name="DisplayNetRegStatus" type="xsd:boolean"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="DisplayRex2ConfigProfileRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:ConfigProfileRecordType">
				<xsd:sequence>
					<xsd:element name="HoldTime" type="xsd:int"/>
					<xsd:element name="CustomDisplayString1" type="xsd:string" nillable="true"/>
					<xsd:element name="CustomDisplayString2" type="xsd:string" nillable="true"/>
					<xsd:element name="CustomDisplayString3" type="xsd:string" nillable="true"/>
					<xsd:element name="CustomDisplayString4" type="xsd:string" nillable="true"/>
					<xsd:element name="CustString1Order" type="xsd:int"/>
					<xsd:element name="CustString2Order" type="xsd:int"/>
					<xsd:element name="CustString3Order" type="xsd:int"/>
					<xsd:element name="CustString4Order" type="xsd:int"/>
					<xsd:element name="LcdTestOrder" type="xsd:int"/>
					<xsd:element name="ErrorOrder" type="xsd:int"/>
					<xsd:element name="StatusOrder" type="xsd:int"/>
					<xsd:element name="TimeAndTierOrder" type="xsd:int"/>
					<xsd:element name="FirstEnergyOrder" type="xsd:int"/>
					<xsd:element name="TierAOrder" type="xsd:int"/>
					<xsd:element name="TierBOrder" type="xsd:int"/>
					<xsd:element name="TierCOrder" type="xsd:int"/>
					<xsd:element name="TierDOrder" type="xsd:int"/>
					<xsd:element name="SecondEnergyOrder" type="xsd:int"/>
					<xsd:element name="Demand1Order" type="xsd:int"/>
					<xsd:element name="Demand2Order" type="xsd:int"/>
					<xsd:element name="NetRegStatusOrder" type="xsd:int"/>
					<xsd:element name="LoadControlOrder" type="xsd:int"/>
					<xsd:element name="Demand3Order" type="xsd:int"/>
					<xsd:element name="FirmwareVersionOrder" type="xsd:int"/>
					<xsd:element name="InstMaxDemandOrder" type="xsd:int"/>
					<xsd:element name="PhaseVoltageOrder" type="xsd:int"/>
					<xsd:element name="PhaseInstDemandOrder" type="xsd:int"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="GkScheduleConfigProfileRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:ConfigProfileRecordType">
				<xsd:sequence>
		            <xsd:element name="RegisterReadStartTime" type="xsd:int"/>
		            <xsd:element name="RegisterReadFrequency" type="xsd:int"/>
		            <xsd:element name="RegisterReadRetries" type="xsd:int"/>
		            <xsd:element name="IntervalReadStartTime" type="xsd:int"/>
		            <xsd:element name="IntervalReadFrequency" type="xsd:int"/>
		            <xsd:element name="IntervalReadRetries" type="xsd:int"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="GkSchedule2ConfigProfileRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:ConfigProfileRecordType">
				<xsd:sequence>
					<xsd:element name="RegisterReadStartTime" type="xsd:int"/>
					<xsd:element name="RegisterReadFrequency" type="xsd:int"/>
					<xsd:element name="RegisterReadRetries" type="xsd:int"/>
					<xsd:element name="IntervalReadStartTime" type="xsd:int"/>
					<xsd:element name="IntervalReadFrequency" type="xsd:int"/>
					<xsd:element name="IntervalReadRetries" type="xsd:int"/>
					<xsd:element name="IntervalRead2StartTime" type="xsd:int"/>
					<xsd:element name="IntervalRead2Frequency" type="xsd:int"/>
					<xsd:element name="IntervalRead2Retries" type="xsd:int"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="ProfileEligibleElementRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="ElementName" type="xsd:string"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="MeterProfileRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="MeterName" type="xsd:string"/>
					<xsd:element name="MeterType" type="xsd:string"/>
					<xsd:element name="MeterProfileState" type="xsd:string"/>
					<xsd:element name="AccountName" type="xsd:string" nillable="true"/>
					<xsd:element name="AssignmentTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="CompletionTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
					<xsd:element name="MeterDescription" type="xsd:string" nillable="true"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="ElementNameAutoCompleteRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="ElementName" type="xsd:string"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="ElementConfigProfileAddStatusRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="ProfileName" type="xsd:string"/>
					<xsd:element name="StateCode" type="xsd:int"/>
					<xsd:element name="AddState" type="xsd:string"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="DisplayHoldTimeRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="HoldTime" type="xsd:int"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="ListTouTargetsRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="TouName" type="xsd:string"/>
					<xsd:element name="MeterCount" type="xsd:int"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="ListScheduleTargetsRecordType">
		<xsd:complexContent>
			<xsd:extension base="tns:RecordType">
				<xsd:sequence>
					<xsd:element name="ScheduleName" type="xsd:string"/>
					<xsd:element name="MeterCount" type="xsd:int"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
    <xsd:complexType name="EventCountByEventNameType">
    	<xsd:complexContent>
    		<xsd:extension base="tns:RecordType">
		    	<xsd:sequence>
		    		<xsd:element name="EventName" type="xsd:string"/>
					<xsd:element name="EventCount" type="xsd:int"/>
                    <xsd:element name="EventUnacknowledgedCount" type="xsd:int"/>
		    	</xsd:sequence>
	    	</xsd:extension>
	    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="EventCategoryType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="EventCategory" type="xsd:string"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="EventNameType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="EventName" type="xsd:string"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="EventNamesByCategoryType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="EventCategory" type="xsd:string"/>
                    <xsd:element name="EventName" type="xsd:string"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="StatusCategoryType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="StatusCategory" type="xsd:string"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="StatusNameType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="StatusName" type="xsd:string"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="StatusNamesByCategoryType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="StatusCategory" type="xsd:string"/>
                    <xsd:element name="StatusName" type="xsd:string"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    
    <xsd:complexType name="MeterEventType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="MeterName" type="xsd:string"/>
                    <xsd:element name="MeterTypeSubtype" type="xsd:string"/>
                    <xsd:element name="MeterType" type="xsd:string"/>
                    <xsd:element name="AccountId" type="xsd:string" nillable="true"/>
                    <xsd:element name="AccountName" type="xsd:string" nillable="true"/>
                    <xsd:element name="SerialNumber" type="xsd:string" nillable="true"/>
                    <xsd:element name="InstallDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="RemovalDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EventId" type="xsd:int"/>
                    <xsd:element name="EventName" type="xsd:string"/>
                    <xsd:element name="EventCategory" type="xsd:string"/>
                    <xsd:element name="EventValue" type="xsd:string" nillable="true"/>
                    <xsd:element name="DetectionTime" type="tns:StandardDateTimePlusTimeZoneType"/>
                    <xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EndTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EventInformation" type="xsd:string" nillable="true"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
     
    <xsd:complexType name="MeterStatusType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="MeterName" type="xsd:string"/>
                    <xsd:element name="MeterTypeSubtype" type="xsd:string"/>
                    <xsd:element name="MeterType" type="xsd:string"/>
                    <xsd:element name="AccountId" type="xsd:string" nillable="true"/>
                    <xsd:element name="AccountName" type="xsd:string" nillable="true"/>
                    <xsd:element name="SerialNumber" type="xsd:string" nillable="true"/>
                    <xsd:element name="InstallDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="RemovalDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="StatusName" type="xsd:string"/>
                    <xsd:element name="StatusCategory" type="xsd:string"/>
                    <xsd:element name="StatusValue" type="xsd:string" nillable="true"/>
                    <xsd:element name="StatusTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="StatusInformation" type="xsd:string" nillable="true"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="MeterStatusWithSeverityType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="MeterName" type="xsd:string"/>
                    <xsd:element name="MeterTypeSubtype" type="xsd:string"/>
                    <xsd:element name="MeterType" type="xsd:string"/>
                    <xsd:element name="AccountId" type="xsd:string" nillable="true"/>
                    <xsd:element name="AccountName" type="xsd:string" nillable="true"/>
                    <xsd:element name="SerialNumber" type="xsd:string" nillable="true"/>
                    <xsd:element name="InstallDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="RemovalDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="StatusName" type="xsd:string"/>
                    <xsd:element name="StatusCategory" type="xsd:string"/>
                    <xsd:element name="StatusSeverity" type="xsd:string"/>
                    <xsd:element name="StatusValue" type="xsd:string" nillable="true"/>
                    <xsd:element name="StatusTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="StatusInformation" type="xsd:string" nillable="true"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
        
        
    <xsd:complexType name="MeterAlarmType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="AlarmSeqNum" type="xsd:int"/>
                    <xsd:element name="MeterName" type="xsd:string"/>
                    <xsd:element name="MeterTypeSubType" type="xsd:string"/>
                    <xsd:element name="MeterType" type="xsd:string"/>
                    <xsd:element name="AccountId" type="xsd:string" nillable="true"/>
                    <xsd:element name="AccountName" type="xsd:string" nillable="true"/>
                    <xsd:element name="SerialNumber" type="xsd:string" nillable="true"/>
                    <xsd:element name="InstallDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="RemovalDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EventName" type="xsd:string"/>
                    <xsd:element name="EventCategory" type="xsd:string"/>
                    <xsd:element name="EventValue" type="xsd:string" nillable="true"/>
                    <xsd:element name="DetectionTime" type="tns:StandardDateTimePlusTimeZoneType"/>
                    <xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EndTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EventInformation" type="xsd:string" nillable="true"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="MeterAlarmWithSeverityType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="AlarmSeqNum" type="xsd:int"/>
                    <xsd:element name="MeterName" type="xsd:string"/>
                    <xsd:element name="MeterTypeSubType" type="xsd:string"/>
                    <xsd:element name="MeterType" type="xsd:string"/>
                    <xsd:element name="AccountId" type="xsd:string" nillable="true"/>
                    <xsd:element name="AccountName" type="xsd:string" nillable="true"/>
                    <xsd:element name="SerialNumber" type="xsd:string" nillable="true"/>
                    <xsd:element name="InstallDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="RemovalDate" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EventName" type="xsd:string"/>
                    <xsd:element name="EventCategory" type="xsd:string"/>
                    <xsd:element name="EventSeverity" type="xsd:string"/>
                    <xsd:element name="EventValue" type="xsd:string" nillable="true"/>
                    <xsd:element name="DetectionTime" type="tns:StandardDateTimePlusTimeZoneType"/>
                    <xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EndTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="EventInformation" type="xsd:string" nillable="true"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="ConnectDisconnectAuditEntryType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="UserLogon" type="xsd:string"/>
                    <xsd:element name="ConnectOrDisconnect" type="xsd:string"/>
                    <xsd:element name="MeterName" type="xsd:string" nillable="true"/>
                    <xsd:element name="Status" type="xsd:string" nillable="true"/>
                    <xsd:element name="Started" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="Ended" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

	<!-- Begin WAN/LAN/Workflow timings schema changes -->
    <xsd:complexType name="ORR_LANOperationTimeEntryType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="ScheduleName" type="xsd:string" nillable="true"/>
                    <xsd:element name="ScheduleStartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="GKName" type="xsd:string" nillable="true"/>
                    <xsd:element name="MeterName" type="xsd:string" nillable="true"/>
                    <xsd:element name="NodeLevel" type="xsd:int" nillable="false"/>
                    <xsd:element name="Started" type="tns:StandardDateTimePlusTimeZoneType" nillable="false"/>
                    <xsd:element name="Ended" type="tns:StandardDateTimePlusTimeZoneType" nillable="false"/>
                    <xsd:element name="OperationType" type="xsd:string" nillable="false"/>
                    <xsd:element name="OperationStatus" type="xsd:string" nillable="false"/>
                    <xsd:element name="DurationInMillis" type="xsd:int" nillable="true"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="ORR_WANOperationTimeEntryType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="ScheduleName" type="xsd:string" nillable="true"/>
                    <xsd:element name="ScheduleStartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="Direction" type="xsd:string" nillable="true"/>
                    <xsd:element name="StartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="false"/>
                    <xsd:element name="CommType" type="xsd:string" nillable="false"/>
                    <xsd:element name="GKName" type="xsd:string" nillable="false"/>
                    <xsd:element name="LineNumber" type="xsd:int" nillable="false"/>
                    <xsd:element name="DurationInSecs" type="xsd:int" nillable="false"/>
                    <xsd:element name="BytesRecvd" type="xsd:int" nillable="false"/>
                    <xsd:element name="BytesTransferred" type="xsd:int" nillable="false"/>
                    <xsd:element name="Status" type="xsd:int" nillable="false"/>
                    <xsd:element name="AvgPacketTime" type="xsd:int" nillable="false"/>
                    <xsd:element name="MinPacketTime" type="xsd:int" nillable="false"/>
                    <xsd:element name="MaxPacketTime" type="xsd:int" nillable="false"/>
                    <xsd:element name="ConnectionTime" type="xsd:int" nillable="true"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="ORR_WorkflowOperationTimeEntryType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="Description" type="xsd:string" nillable="true"/>
                    <xsd:element name="Time" type="tns:StandardDateTimePlusTimeZoneType"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	<!-- End WAN/LAN/Workflow timings schema changes -->

	<!--  Job task schema changes -->
    <xsd:complexType name="JobStatusInformationType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="JobId" type="xsd:int" nillable="false"/>
                    <xsd:element name="JobName" type="xsd:string" nillable="false"/>
                    <xsd:element name="JobStatus" type="xsd:string" nillable="true"/>
                    <xsd:element name="JobCreationTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="JobStartedTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="JobCompletedTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="JobExpirationTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="JobSubmitted" type="xsd:string" nillable="true"/>
                    <xsd:element name="WorkFlowId" type="xsd:int" nillable="true"/>
                    <xsd:element name="TaskId" type="xsd:int" nillable="false"/>
                    <xsd:element name="TaskStatus" type="xsd:string" nillable="true"/>
                    <xsd:element name="TaskStartAfter" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="TaskStartedTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="TaskCompletedTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="TaskExpirationTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="MeterName" type="xsd:string" nillable="true"/>
                    <xsd:element name="GKName" type="xsd:string" nillable="true"/>
                    <xsd:element name="DestinationDir" type="xsd:string" nillable="true"/>
                    <xsd:element name="CommandName" type="xsd:string" nillable="true"/>
                    <xsd:element name="ComponentName" type="xsd:string" nillable="true"/>
                    <xsd:element name="TaskPriority" type="xsd:int" nillable="true"/>
                    <xsd:element name="TaskMaxRetries" type="xsd:int" nillable="true"/>
                    <xsd:element name="TaskRetryInterval" type="xsd:int" nillable="true"/>
                    <xsd:element name="TaskRetries" type="xsd:int" nillable="true"/>
                    <xsd:element name="WANDeviceStartTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="WANDeviceCompletionTime" type="tns:StandardDateTimePlusTimeZoneType" nillable="true"/>
                    <xsd:element name="ContextId" type="xsd:int" nillable="true"/>
                    <xsd:element name="NotificationInfo" type="xsd:string" nillable="true"/>
                    <xsd:element name="NotificationType" type="xsd:int" nillable="true"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	<!-- End Job task schema changes -->
	
	<!-- Firmware upgrade status per meter -->
    <xsd:complexType name="ElementFirmwareUpgradeStatusType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="GatekeeperName" type="xsd:string" nillable="true"/>
                    <xsd:element name="ElementName" type="xsd:string"/>
                    <xsd:element name="JobStatus" type="xsd:string"/>
                    <xsd:element name="JobName" type="xsd:string"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	<!-- End Firmware upgrade status per meter -->

	<!-- HAN 900 Mhz devices -->
    <xsd:complexType name="Han900MhzRecordType">
        <xsd:complexContent>
            <xsd:extension base="tns:RecordType">
                <xsd:sequence>
                    <xsd:element name="DeviceName" type="xsd:string"/>
                    <xsd:element name="CommunicationId" type="xsd:string"/>
                    <xsd:element name="State" type="xsd:string"/>
                    <xsd:element name="MeterName" type="xsd:string"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	<!-- HAN 900 Mhz devices -->

	<!-- END REPORT RECORD TYPES -->
	
      <xsd:element name="MAS_WSI_Call_Header_Login" type="tns:MAS_WSI_Call_Header_Login"/>
      <xsd:complexType name="MAS_WSI_Call_Header_Login">
        <xsd:sequence>
          <xsd:element name="user" type="xsd:string"/>
          <xsd:element name="password" type="xsd:string"/>
        </xsd:sequence>
        <xsd:anyAttribute/>
      </xsd:complexType>
      
      <xsd:element name="InvokeCommandSeq">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element ref="tns:ImportDataInput" minOccurs="0" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="InvokeCommandSeqResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="InvokeCommandSeqSyncResult" type="tns:InvokeCommandSeqSyncResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetInvokeCommandSeqResult">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="workflowId" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetInvokeCommandSeqResultResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="InvokeCommandSeqResult" type="tns:InvokeCommandSeqResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetUnknownLANIDs">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="GetUnknownLANIDsRequest" type="tns:GetUnknownLANIDsRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetUnknownLANIDsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="GetUnknownLANIDsResult" type="tns:GetUnknownLANIDsResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetRegisteredNodes">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="GetRegisteredNodesRequest" type="tns:GetRegisteredNodesRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetRegisteredNodesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="GetRegisteredNodesResult" type="tns:GetRegisteredNodesResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetSchedules">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="GetSchedulesRequest" type="tns:GetSchedulesRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSchedulesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="GetSchedulesResult" type="tns:GetSchedulesResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetScheduleRuns">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="GetScheduleRunsRequest" type="tns:GetScheduleRunsRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetScheduleRunsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="GetScheduleRunsResult" type="tns:GetScheduleRunsResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetReadingsForScheduleRun">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="GetReadingsForScheduleRunRequest" type="tns:GetReadingsForScheduleRunRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetReadingsForScheduleRunResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="GetReadingsForScheduleRunResult" type="tns:GetReadingsForScheduleRunResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetDetailedReadingsForScheduleRun">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="GetDetailedReadingsForScheduleRunRequest" type="tns:GetReadingsForScheduleRunRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetDetailedReadingsForScheduleRunResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="GetDetailedReadingsForScheduleRunResult" type="tns:GetDetailedReadingsForScheduleRunResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetReadings">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="GetReadingsRequest" type="tns:GetReadingsRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetReadingsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="GetReadingsResult" type="tns:GetReadingsResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetReadingsCompressed">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="GetReadingsCompressedRequest" type="tns:GetReadingsCompressedRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetReadingsCompressedResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="GetReadingsCompressedResult" type="tns:GetReadingsCompressedResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>

      <xsd:element name="GetVoltageData">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="GetVoltageDataRequest" type="tns:GetVoltageDataRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetVoltageDataResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="GetVoltageDataResult" type="tns:GetVoltageDataResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      
      <xsd:element name="Ping">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="PingRequest" type="tns:PingRequestType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="PingResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="PingResult" type="tns:PingResultType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetReportNamesRequest" type="tns:GetReportNamesRequestType"/>
      
      <xsd:element name="GetReportNamesResponse" type="tns:GetReportNamesResponseType"/>
      
      <xsd:element name="GetReportSignatureRequest" type="tns:GetReportSignatureRequestType"/>
      
      <xsd:element name="GetReportSignatureResponse" type="tns:GetReportSignatureResponseType"/>
      
      <xsd:element name="ExecuteReportRequest" type="tns:ExecuteReportRequestType"/>
      
	  <xsd:element name="ExecuteReportResponse" type="tns:ExecuteReportResponseType"/>
    
	<xsd:complexType name="PowerStatusCheckRequestType">
		<xsd:sequence>
			<xsd:element name="MeterName" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="TimeoutSeconds" type="xsd:int"/>
	</xsd:complexType>
	
	<xsd:simpleType name="PowerStatusType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="On"/>
			<xsd:enumeration value="Off"/>
			<xsd:enumeration value="Unknown"/>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:complexType name="MeterPowerStatusType">
		<xsd:sequence>
			<xsd:element name="MeterName" type="xsd:string"/>
			<xsd:element name="PowerStatus" type="tns:PowerStatusType"/>
			<xsd:element name="DetectionTime" type="tns:ElsterDate" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
    
	<xsd:complexType name="PowerStatusCheckResponseType">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element name="MeterPowerStatus" type="tns:MeterPowerStatusType" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
    
	<xsd:element name="PowerStatusCheckRequest" type="tns:PowerStatusCheckRequestType"/>
    
	<xsd:element name="PowerStatusCheckResponse" type="tns:PowerStatusCheckResponseType"/>
	
	<xsd:complexType name="PingNetworkDeviceRequestType">
		<xsd:sequence>
			<xsd:element name="DeviceName" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
    
	<xsd:element name="PingNetworkDeviceRequest" type="tns:PingNetworkDeviceRequestType"/>
    
	<xsd:element name="PingNetworkDeviceResponse" type="tns:ExecuteReportResponseType"/>
	
	<!--
	<xsd:simpleType name="MeterComponentType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Registers"/>
			<xsd:enumeration value="LoadProfile"/>
			<xsd:enumeration value="REXRegistersFromCollector"/>
			<xsd:enumeration value="LoadProfileFromCollector"/>
			<xsd:enumeration value="WaterRegistersFromCollector"/>
			<xsd:enumeration value="GasRegistersFromCollector"/>
			<xsd:enumeration value="DownloadToCollector"/>
			<xsd:enumeration value="DemandReset"/>
			<xsd:enumeration value="EventsAndExceptions"/>
			<xsd:enumeration value="ResetEventsAndExceptions"/>
			<xsd:enumeration value="LANPerformance"/>
			<xsd:enumeration value="ResetCommunicationStatistics"/>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:complexType name="ComponentNameList">
		<xsd:sequence>
			<xsd:element name="ComponentName" type="tns:MeterComponentType" minOccurs="1" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="MeterComponentRequestType">
		<xsd:sequence>
			<xsd:element name="MeterName" type="xsd:string"/>
			<xsd:element name="ComponentNames" type="tns:ComponentNameList"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="ReadMeterRequestType">
		<xsd:sequence>
			<xsd:element name="MeterComponentRequest" type="tns:MeterComponentRequestType" minOccurs="1" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="NumberReadAttempts" type="xsd:int"/>
		<xsd:attribute name="TimeoutSeconds" type="xsd:int"/>
	</xsd:complexType>
	
	<xsd:complexType name="MeterComponentResponseType">
		<xsd:sequence>
			<xsd:element name="MeterName" type="xsd:string"/>
			<xsd:element name="ComponentNames" type="tns:ComponentNameList"/>
			<xsd:element ref="tns:AMRDEF"/>
		</xsd:sequence>
	</xsd:complexType>
    
	<xsd:complexType name="ReadMeterResponseType">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element name="MeterComponentResponse" type="tns:MeterComponentResponseType" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
    
	<xsd:element name="ReadMeterRequest" type="tns:ReadMeterRequestType"/>
    
	<xsd:element name="ReadMeterResponse" type="tns:ReadMeterResponseType"/>
    -->
    
    <xsd:complexType name="InvokeCommandSeqStringRequestType">
		<xsd:sequence>
			<xsd:element name="Request" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
    
    <xsd:element name="InvokeCommandSeqStringRequest" type="tns:InvokeCommandSeqStringRequestType"/>
    
	<xsd:complexType name="InvokeCommandSeqStringResponseType">
		<xsd:complexContent>
			<xsd:extension base="tns:CallResponseType">
				<xsd:sequence>
					<xsd:element name="Response" type="xsd:string"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
    <xsd:element name="InvokeCommandSeqStringResponse" type="tns:InvokeCommandSeqStringResponseType"/>
    
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="GetScheduleRunsSoapIn">
    <wsdl:part name="inParameters" element="tns:GetScheduleRuns">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReadingsCompressedSoapOut">
    <wsdl:part name="outParameters" element="tns:GetReadingsCompressedResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReportNamesSoapOut">
    <wsdl:part name="outParameters" element="tns:GetReportNamesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PowerStatusCheckSoapOut">
    <wsdl:part name="outParameters" element="tns:PowerStatusCheckResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PingSoapOut">
    <wsdl:part name="outParameters" element="tns:PingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExecuteReportSoapIn">
    <wsdl:part name="inParameters" element="tns:ExecuteReportRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReadingsCompressedMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvokeCommandSeqStringSoapIn">
    <wsdl:part name="inParameters" element="tns:InvokeCommandSeqStringRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUnknownLANIDsMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDetailedReadingsForScheduleRunSoapOut">
    <wsdl:part name="outParameters" element="tns:GetDetailedReadingsForScheduleRunResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvokeCommandSeqMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSchedulesMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PowerStatusCheckSoapIn">
    <wsdl:part name="inParameters" element="tns:PowerStatusCheckRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PingNetworkDeviceMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvokeCommandSeqStringSoapOut">
    <wsdl:part name="outParameters" element="tns:InvokeCommandSeqStringResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReadingsMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetInvokeCommandSeqResultSoapIn">
    <wsdl:part name="inParameters" element="tns:GetInvokeCommandSeqResult">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PingMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvokeCommandSeqStringMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PingSoapIn">
    <wsdl:part name="inParameters" element="tns:Ping">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSchedulesSoapOut">
    <wsdl:part name="outParameters" element="tns:GetSchedulesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReportNamesSoapIn">
    <wsdl:part name="inParameters" element="tns:GetReportNamesRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReportSignatureSoapIn">
    <wsdl:part name="inParameters" element="tns:GetReportSignatureRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetVoltageDataMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRegisteredNodesSoapOut">
    <wsdl:part name="outParameters" element="tns:GetRegisteredNodesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUnknownLANIDsSoapOut">
    <wsdl:part name="outParameters" element="tns:GetUnknownLANIDsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExecuteReportMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUnknownLANIDsSoapIn">
    <wsdl:part name="inParameters" element="tns:GetUnknownLANIDs">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvokeCommandSeqSoapIn">
    <wsdl:part name="inParameters" element="tns:InvokeCommandSeq">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReadingsSoapOut">
    <wsdl:part name="outParameters" element="tns:GetReadingsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSchedulesSoapIn">
    <wsdl:part name="inParameters" element="tns:GetSchedules">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDetailedReadingsForScheduleRunSoapIn">
    <wsdl:part name="inParameters" element="tns:GetDetailedReadingsForScheduleRun">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReadingsCompressedSoapIn">
    <wsdl:part name="inParameters" element="tns:GetReadingsCompressed">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetInvokeCommandSeqResultSoapOut">
    <wsdl:part name="outParameters" element="tns:GetInvokeCommandSeqResultResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetScheduleRunsMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRegisteredNodesMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReadingsForScheduleRunMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvokeCommandSeqSoapOut">
    <wsdl:part name="outParameters" element="tns:InvokeCommandSeqResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReportNamesMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExecuteReportSoapOut">
    <wsdl:part name="outParameters" element="tns:ExecuteReportResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReadingsSoapIn">
    <wsdl:part name="inParameters" element="tns:GetReadings">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReportSignatureSoapOut">
    <wsdl:part name="outParameters" element="tns:GetReportSignatureResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PowerStatusCheckMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReadingsForScheduleRunSoapIn">
    <wsdl:part name="inParameters" element="tns:GetReadingsForScheduleRun">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PingNetworkDeviceSoapOut">
    <wsdl:part name="outParameters" element="tns:PingNetworkDeviceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetInvokeCommandSeqResultMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetVoltageDataSoapOut">
    <wsdl:part name="outParameters" element="tns:GetVoltageDataResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDetailedReadingsForScheduleRunMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetScheduleRunsSoapOut">
    <wsdl:part name="outParameters" element="tns:GetScheduleRunsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReadingsForScheduleRunSoapOut">
    <wsdl:part name="outParameters" element="tns:GetReadingsForScheduleRunResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetVoltageDataSoapIn">
    <wsdl:part name="inParameters" element="tns:GetVoltageData">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRegisteredNodesSoapIn">
    <wsdl:part name="inParameters" element="tns:GetRegisteredNodes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReportSignatureMAS_WSI_Call_Header_Login">
    <wsdl:part name="MAS_WSI_Call_Header_Login" element="tns:MAS_WSI_Call_Header_Login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PingNetworkDeviceSoapIn">
    <wsdl:part name="inParameters" element="tns:PingNetworkDeviceRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="MASSoap">
    <wsdl:operation name="InvokeCommandSeq">
      <wsdl:input message="tns:InvokeCommandSeqSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:InvokeCommandSeqSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetInvokeCommandSeqResult">
      <wsdl:input message="tns:GetInvokeCommandSeqResultSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetInvokeCommandSeqResultSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="InvokeCommandSeqString">
      <wsdl:input message="tns:InvokeCommandSeqStringSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:InvokeCommandSeqStringSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PowerStatusCheck">
      <wsdl:input message="tns:PowerStatusCheckSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:PowerStatusCheckSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PingNetworkDevice">
      <wsdl:input message="tns:PingNetworkDeviceSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:PingNetworkDeviceSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUnknownLANIDs">
      <wsdl:input message="tns:GetUnknownLANIDsSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetUnknownLANIDsSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRegisteredNodes">
      <wsdl:input message="tns:GetRegisteredNodesSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetRegisteredNodesSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSchedules">
      <wsdl:input message="tns:GetSchedulesSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetSchedulesSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetScheduleRuns">
      <wsdl:input message="tns:GetScheduleRunsSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetScheduleRunsSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReadingsForScheduleRun">
      <wsdl:input message="tns:GetReadingsForScheduleRunSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetReadingsForScheduleRunSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDetailedReadingsForScheduleRun">
      <wsdl:input message="tns:GetDetailedReadingsForScheduleRunSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetDetailedReadingsForScheduleRunSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReadings">
      <wsdl:input message="tns:GetReadingsSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetReadingsSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReadingsCompressed">
      <wsdl:input message="tns:GetReadingsCompressedSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetReadingsCompressedSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetVoltageData">
      <wsdl:input message="tns:GetVoltageDataSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetVoltageDataSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Ping">
      <wsdl:input message="tns:PingSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:PingSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReportNames">
      <wsdl:input message="tns:GetReportNamesSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetReportNamesSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReportSignature">
      <wsdl:input message="tns:GetReportSignatureSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:GetReportSignatureSoapOut">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ExecuteReport">
      <wsdl:input message="tns:ExecuteReportSoapIn">
    </wsdl:input>
      <wsdl:output message="tns:ExecuteReportSoapOut">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="MASSoap" type="tns:MASSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="InvokeCommandSeq">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/InvokeCommandSeq" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:InvokeCommandSeqMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetInvokeCommandSeqResult">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetInvokeCommandSeqResult" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetInvokeCommandSeqResultMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="InvokeCommandSeqString">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/InvokeCommandSeqString" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:InvokeCommandSeqStringMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PowerStatusCheck">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/PowerStatusCheck" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:PowerStatusCheckMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PingNetworkDevice">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/PingNetworkDevice" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:PingNetworkDeviceMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUnknownLANIDs">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetUnknownLANIDs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetUnknownLANIDsMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRegisteredNodes">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetRegisteredNodes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetRegisteredNodesMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSchedules">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetSchedules" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetSchedulesMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetScheduleRuns">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetScheduleRuns" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetScheduleRunsMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReadingsForScheduleRun">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetReadingsForScheduleRun" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetReadingsForScheduleRunMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDetailedReadingsForScheduleRun">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetDetailedReadingsForScheduleRun" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetDetailedReadingsForScheduleRunMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReadings">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetReadings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetReadingsMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReadingsCompressed">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetReadingsCompressed" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetReadingsCompressedMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetVoltageData">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetVoltageData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetVoltageDataMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Ping">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/Ping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:PingMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReportNames">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetReportNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetReportNamesMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReportSignature">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/GetReportSignature" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:GetReportSignatureMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ExecuteReport">
      <soap:operation soapAction="http://www.elster-eis.com/ImportExport/ExecuteReport" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:ExecuteReportMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MASSoap12" type="tns:MASSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="InvokeCommandSeq">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/InvokeCommandSeq" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:InvokeCommandSeqMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetInvokeCommandSeqResult">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetInvokeCommandSeqResult" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetInvokeCommandSeqResultMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="InvokeCommandSeqString">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/InvokeCommandSeqString" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:InvokeCommandSeqStringMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PowerStatusCheck">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/PowerStatusCheck" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:PowerStatusCheckMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PingNetworkDevice">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/PingNetworkDevice" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:PingNetworkDeviceMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUnknownLANIDs">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetUnknownLANIDs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetUnknownLANIDsMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRegisteredNodes">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetRegisteredNodes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetRegisteredNodesMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSchedules">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetSchedules" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetSchedulesMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetScheduleRuns">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetScheduleRuns" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetScheduleRunsMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReadingsForScheduleRun">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetReadingsForScheduleRun" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetReadingsForScheduleRunMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDetailedReadingsForScheduleRun">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetDetailedReadingsForScheduleRun" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetDetailedReadingsForScheduleRunMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReadings">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetReadings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetReadingsMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReadingsCompressed">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetReadingsCompressed" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetReadingsCompressedMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetVoltageData">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetVoltageData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetVoltageDataMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Ping">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/Ping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:PingMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReportNames">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetReportNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetReportNamesMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReportSignature">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/GetReportSignature" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:GetReportSignatureMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ExecuteReport">
      <soap12:operation soapAction="http://www.elster-eis.com/ImportExport/ExecuteReport" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
        <soap12:header message="tns:ExecuteReportMAS_WSI_Call_Header_Login" part="MAS_WSI_Call_Header_Login" use="literal">
        </soap12:header>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MAS">
    <wsdl:port name="MASSoap" binding="tns:MASSoap">
      <soap:address location="http://masapprd/axis2/services/MAS.MASSoap/"/>
    </wsdl:port>
    <wsdl:port name="MASSoap12" binding="tns:MASSoap12">
      <soap12:address location="http://masapprd/axis2/services/MAS.MASSoap12/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
